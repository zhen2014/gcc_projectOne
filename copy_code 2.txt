
#import "VideosDetailNewVC.h"
#import "VideoStoresController.h"
#import "ReplyActivityController.h"
#import "AboutGandanController.h"

#import "bugBonusVC.h"
#import "RightImageBtnOnly.h"
#import <PLVVodSDK/PLVVodSDK.h>
#import "PLVCourseNetworking.h"
#import "UIColor+PLVVod.h"
#import "PLVVodSkinPlayerController.h"
#import "PLVDownloadCompleteInfoModel.h"
#import "PLVDownLoaProcessingNewCell.h"
#import "videoNewDetailDownLoadCell.h"//缓存中

#import "VideoNewDetailDownCompeleteCell.h" //已完成

#import "PLVDownloadManagerNewVC.h"

//增加专家姓名
#import <PLVVodSDK/PLVVodDownloadManager+Database.h>
#import "PLVVodExtendVideoInfo+WCTTableCoding.h"
#import "PLVVodDBManager.h"
#import "PLVVodExtendVideoInfo.h"

#import "newbofangViewController.h"//播放
@interface VideosDetailNewVC ()<UIScrollViewDelegate,UITextFieldDelegate,UITableViewDelegate,UITableViewDataSource,UIAlertViewDelegate,UIWebViewDelegate,UIWebViewDelegate>{
    UIScrollView *scrollv;
    UIScrollView *ziScrollv;
    
    UIImageView *headImageview;
    UIView *headView;
    UIView *bottomViewDownload;//底部xiazaiviwe
    
   UIButton *leftBtnVideo;//视频简介
   UIButton *rightBtnVideo;//评论 现在z是在中间

 

   
   NSInteger isLeft;// 左0 中 1  右 2
   
   UIView *leftLine;
   UIView *middleLine;
   UIView *rightLine;
       
    
    UILabel *desLabel;
    
    
    UIImageView *imagershuju;
    UILabel *tiwuxianLab;//提示无数据时
    
    
    UITextField *fideld;
    UIView *bottomView;
    BOOL keyBoardIsUp;
    UIButton *commitBtn;
    UIView *webBottomView;
    UILabel *mountLabel;
    NSString *comContent;
    NSInteger whichTouchInt;
    
    UIView * bagView;//评论覆盖的背景view
    UIView * smallView;//小view
    UIButton * cancleBtn;//取消按钮
    UIButton * enSureBtn;//确定按钮
    UILabel * showLB;//写评论标签
    UITextView * textView;
    UIWebView  *gdWebview;
    
    NSInteger pageNum;//gzz1121!
    UIButton *rightItem;
    UIBarButtonItem *right1;
    UIImageView * shareimaView ;
    UIButton *searchBtn;
    
    UIImageView *storeImg;
    
    NSString *sysTimestr;//系统时间
    
    //    保利威视
    UIButton *cacheBtn;
    UIImageView *imageBag;//
    
    NSString*isHaveDownload;// 是不是已经存在下载队列中  no 没下载；yes下载中；compeleteYES已缓存；

    NSString *isVideoStorestr;//是不是缓存过该视频 o0没有。1 有的
    
}
@property(nonatomic,strong)UITableView *videodetailTabview;
@property(nonatomic,strong)NSMutableArray *dataMarryDetail;

//保利威视
@property (nonatomic,strong) NSMutableArray *dataArr;
@property (nonatomic, strong) PLVVodSkinPlayerController *player;//gzz190327
@property (nonatomic, strong) UIView *playerPlaceholder;
@property (nonatomic, strong) NSMutableArray<PLVVodDownloadInfo *> *downloadInfos;
@property (nonatomic, strong) NSMutableDictionary<NSString *, videoNewDetailDownLoadCell *> *downloadItemCellDic;
//当前视频现在完成后的信息 展示在cell中
@property(nonatomic,strong)PLVVodDownloadInfo *completeDownloadInfo;

/*剩余次数 我的福利gzz20200509*/
@property (nonatomic, copy) NSString *RemainingCountstr;

@end

@implementation VideosDetailNewVC
//懒加载
- (PLVVodDownloadInfo *)completeDownloadInfo{
    if (!_completeDownloadInfo) {
        _completeDownloadInfo = [[PLVVodDownloadInfo alloc]init];
    }
    return _completeDownloadInfo;
}


#pragma mark  property
- (void)setDownloadInfos:(NSMutableArray<PLVVodDownloadInfo *> *)downloadInfos {
    _downloadInfos = downloadInfos;
    // 设置单元格字典
    NSMutableDictionary *downloadItemCellDic = [NSMutableDictionary dictionary];
//    for (PLVVodDownloadInfo *info in downloadInfos) {
//        videoNewDetailDownLoadCell *cell = [videoNewDetailDownLoadCell cellWithTableView:self.downloadtableview];
//          downloadItemCellDic[info.identifier] = cell;
//    }
    self.downloadItemCellDic = downloadItemCellDic;
    // 设置回调
    __weak typeof(self) weakSelf = self;
    for (PLVVodDownloadInfo *info in downloadInfos) {
        // 下载状态改变回调
        info.stateDidChangeBlock = ^(PLVVodDownloadInfo *info) {
            dispatch_async(dispatch_get_main_queue(), ^{
                if (info.state == PLVVodDownloadStateSuccess){ //下载成功，从列表中删除
                    [weakSelf handleDownloadSuccess:info];
                }
                [weakSelf updateCellWithDownloadInfo:info];
            });
        };
        
    // 下载进度回调
    info.progressDidChangeBlock = ^(PLVVodDownloadInfo *info) {
        //NSLog(@"vid: %@, progress: %f", info.vid, info.progress);
        videoNewDetailDownLoadCell *cell = weakSelf.downloadItemCellDic[info.identifier];
        float receivedSize = MIN(info.progress, 1) * info.filesize;
        NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
        dispatch_async(dispatch_get_main_queue(), ^{
            cell.progressLable.text = downloadProgressStr;
        });
    };
  }
}
- (void)updateCellWithDownloadInfo:(PLVVodDownloadInfo *)info {
    videoNewDetailDownLoadCell *cell = self.downloadItemCellDic[info.identifier];
    cell.backgroundColor = RGB(244, 244, 244);

    NSString *title  = NSStringFromPLVVodDownloadState(info.state);
    UIImage *images = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
    cell.downloadStateImageview.image = images;
    cell.videoStateLable.text = title;

    switch (info.state) {
        case PLVVodDownloadStatePreparing:
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
           cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x4A90E2];
          cell.videoStateLable.textColor = [UIColor colorWithHex:0x4A90E2];
        } break;
        case PLVVodDownloadStateSuccess:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
            cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStateFailed:{
            cell.progressLable.textColor = [UIColor redColor];
             cell.videoStateLable.textColor = [UIColor redColor];
        } break;
    }
}

#pragma mark  下载视频
-(void)ddownloadddVideos:(NSString*)vid_Str{
      WEAKSELFS
         [PLVVodVideo requestVideoPriorityCacheWithVid:vid_Str completion:^(PLVVodVideo *video, NSError *error) {
             if (video.available){
                 [weakSelf downloadVideo:video];
             }
         }];
    
}

#pragma mark   监听下载的状态更新UI
-(void)listenDownload{
    

    WEAKSELFS
      PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
         
      [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
             dispatch_async(dispatch_get_main_queue(), ^{
                 for (PLVVodDownloadInfo *info in downloadInfos) {
                     if ([info.vid isEqualToString:self.polyv_uuidStr]) {
//                         weakSelf.downloadtableview.hidden =  NO;//gzz20191107
                        weakSelf.downloadInfos = downloadInfos.mutableCopy;
//                        [weakSelf.downloadtableview reloadData];
                     }
                 }

             });
         }];
}

#pragma mark 下载的代理
- (void)downloadVideo:(PLVVodVideo *)video{
           
       PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
       PLVVodDownloadInfo *info = [downloadManager downloadVideo:video];
       // info.quality = 2;
        #ifdef PLVSupportDownloadAudio
            // 音频下载测试入口，需要音频下载功能客户，放开注释
        [downloadManager downloadAudio:video];
            
        #endif
           if (info) NSLog(@"%@ - %zd 已加入下载队列", info.video.vid, info.quality);
      
//      插入
        [PLVVodDownloadManager createExtendTableWithClass:[PLVVodExtendVideoInfo class]];
        PLVVodExtendVideoInfo *extendInfo = [PLVVodExtendVideoInfo new];
        extendInfo.vid = self.polyv_uuidStr;
            extendInfo.CusCatagoryName =  self.public_name;
            extendInfo.CusCourseName = self.titleName;//课题名字
        [PLVVodDownloadManager insertOrUpdateWithExtendInfo:extendInfo];

//      }
        dispatch_async(dispatch_get_main_queue(), ^{
        });
        isHaveDownload = @"yes";
       [self listenDownload];
    
//    };
}

#pragma mark -- 下载完成 handle
- (void)handleDownloadSuccess:(PLVVodDownloadInfo *)downloadInfo{
    isHaveDownload = @"compeleteYES";
    
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
    [self.downloadInfos removeObject:downloadInfo];
    [self.downloadItemCellDic removeObjectForKey:downloadInfo.identifier];
    
    self.completeDownloadInfo = [[PLVVodDownloadManager sharedManager] requestDownloadInfoWithVid:self.polyv_uuidStr];
    
    
}

- (BOOL)prefersStatusBarHidden {
    return self.player.prefersStatusBarHidden;
}
- (UIStatusBarStyle)preferredStatusBarStyle {
    return self.player.preferredStatusBarStyle;
}




-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
    
    if (isLeft == 0) {
        [self getStates];
    }
    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
          delegate.allowRotation = 1;
        
        if (isLeft == 1) {
            [_dataMarryDetail removeAllObjects];
            pageNum = 1;
            [self dataRequestInterfaceDetail];
        }
    
    
    [theUserDefaultGcc setObject:@"yes" forKey:@"videoAdsToAbout"];
    
    
    
}

#pragma mark  已缓存 缓存中 待缓存的状态
-(void)getStates{
   WEAKSELFS
    isHaveDownload = @"no";  //进来就置为 点击缓存状态
                    dispatch_group_t group = dispatch_group_create();
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                      
                              NSArray<PLVVodDownloadInfo *> *dbInfos = [[PLVVodDownloadManager sharedManager] requestDownloadCompleteList];
                              NSMutableDictionary *dbCachedDics = [[NSMutableDictionary alloc] init];
                              [dbInfos enumerateObjectsUsingBlock:^(PLVVodDownloadInfo * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
                                  [dbCachedDics setObject:obj forKey:obj.vid];
                                  if ([obj.vid isEqualToString:self.polyv_uuidStr]) {
                                        isHaveDownload = @"compeleteYES";
                                      dispatch_async(dispatch_get_main_queue(), ^{
                                          weakSelf.completeDownloadInfo = obj;//
                                          [weakSelf.downloadInfos removeAllObjects];
                                          [weakSelf.downloadItemCellDic removeObjectForKey:obj.identifier];
                               NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                                           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                      });
                                     }
                      
                              }];
                       });
                        
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                      //    正在下载的
                          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
                                 
                              [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
                                     dispatch_async(dispatch_get_main_queue(), ^{
                                         for (PLVVodDownloadInfo *info in downloadInfos) {
                                             if ([info.vid isEqualToString:self.polyv_uuidStr]) {
                                               weakSelf.downloadInfos = downloadInfos.mutableCopy;
                                                 isHaveDownload = @"yes";
                                                 
                                                 NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                                                  [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                             }
                                         }
                                         if ([isHaveDownload isEqualToString:@"yes"] || [isHaveDownload isEqualToString:@"compeleteYES"]) {
                                             
                                         }else{
                                              isHaveDownload = @"no";
                                         }
                                         
                                     });
                               }];
                      });
                    
                    dispatch_group_notify(group, dispatch_get_main_queue(), ^{
                        if ([isHaveDownload isEqualToString:@"no"]) {

                            if ([isVideoStorestr isEqualToString:@"1"]) {
//已经下载过
                                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                
                             
                            }else{
                            
                                
                                NSInteger points = [weakSelf.pointStr integerValue];
                                if (points >0) {
                          
                                     NSString *jifenstr  = [NSString stringWithFormat:@"点击下载（%ld积分）",(long)points];
                                    NSMutableAttributedString * attriStr2 = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                    [attriStr2 addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                    [cacheBtn setAttributedTitle:attriStr2 forState:(UIControlStateNormal)];
                                    
                                    if (points==25) {
                                       jifenstr  = [NSString stringWithFormat:@"点击下载（限时5折,仅需%ld积分)",(long)points];
                
                                        NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                         [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                        [attriStr addAttribute:NSForegroundColorAttributeName value:RGB11(225, 255, 0) range:NSMakeRange(7, 1)];
                                        [attriStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:25] range:NSMakeRange(7, 1)];
                                        [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                    }
                             NSInteger num = [weakSelf.RemainingCountstr integerValue];
                              if (num >0) {
                                  
                                  NSString *restCountstr = [NSString stringWithFormat:@"免费剩余%ld次",(long)num];
                                  [cacheBtn setTitle:restCountstr forState:0];
                                  
                                  NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:restCountstr];
                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, restCountstr.length)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];

                              }else{
                                  
                              }
           
                                 }else{

                   
                                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载（限时免费）"];
                                      [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 10)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                 }
 
                                
                            }

                            
                      
                        }
                        
                        if ([isHaveDownload isEqualToString:@"compeleteYES"]) {
                        
                            NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                      [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                         }
                        
                    });

}







-(void)viewWillDisappear:(BOOL)animated{
    
    
    [super viewWillDisappear:YES];
    
//    [self.player destroyPlayer];
    
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    
    
    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
       delegate.allowRotation = 0;
       if ([[UIDevice currentDevice]    respondsToSelector:@selector(setOrientation:)]) {
           SEL selector = NSSelectorFromString(@"setOrientation:");
           NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
           [invocation setSelector:selector];
           [invocation setTarget:[UIDevice currentDevice]];
           int val = UIInterfaceOrientationPortrait;
           [invocation setArgument:&val atIndex:2];
           [invocation invoke];
    }
    
    
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    //    navigaTionBar
    self.title = @"视频详情";
    self.navigationController.navigationBar.barTintColor = GreyColor;
    navigaTionBar
    IOS_Frame
    if ([self.isShouYe isEqualToString:@"yes"]) {
        
        [self readAddRequest];
    }
    
    shareimaView =[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 100, 100)];
    
    
    [shareimaView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath]] placeholderImage:[UIImage imageNamed:@"patientLogo.png"]];
    
    [self navBarVideoDetail];
    [self dataOpenDetail];
     [self middleThreeBtn];
    

//    浏览记录 @ liulnan ; @detial 详情  isVideoStore是缓存过该视频  payVideoDown 支付积分
    [self getSystemTimeFromServer:@"liulan"];
    [self getSystemTimeFromServer:@"isVideoStore"];

    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(begainFullScreen) name:UIWindowDidBecomeVisibleNotification object:nil];//进入全屏
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(endFullScreen) name:UIWindowDidBecomeHiddenNotification object:nil];//退出全屏
    
    [_dataMarryDetail removeAllObjects];
    pageNum = 1;
    [self dataRequestInterfaceDetail];
}
#pragma mark 显示视频
-(void)makeplayer{
    
    self.playerPlaceholder = [[UIView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 200)];
    [scrollv addSubview:self.playerPlaceholder];
    // 初始化播放器
    PLVVodSkinPlayerController *player = [[PLVVodSkinPlayerController alloc] initWithNibName:nil bundle:nil];
    [player addPlayerOnPlaceholderView:self.playerPlaceholder rootViewController:self];
    player.rememberLastPosition = YES;
    player.enableBackgroundPlayback = NO;
    player.autoplay = NO;
    player.reachEndHandler = ^(PLVVodPlayerViewController *player) {
        NSLog(@"%@ finish handler.", player.video.vid);
    };
    self.player = player;
    
   imageBag = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200)];
    imageBag.image = [UIImage imageNamed:@"morenyz"];

    [scrollv addSubview:imageBag];
    NSString * freeVideoUuid = self.polyv_uuidStr;
    if (freeVideoUuid.length>2) {

        imageBag.hidden = YES;
        self.player.autoplay = NO;
        __weak typeof(self) weakSelf = self;
        NSString * str = [NSString stringWithFormat:@"%@",freeVideoUuid];
        [PLVVodVideo requestVideoWithVid:str completion:^(PLVVodVideo *video, NSError *error) {
            if (!video.available) return;
            weakSelf.player.video = video;

            dispatch_async(dispatch_get_main_queue(), ^{
              
            });
        }];
    }
    
    
}

#pragma - mark  进入全屏
-(void)begainFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = YES;
}
#pragma - mark 退出全屏
-(void)endFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = NO;
    //强制归正：
    if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {
        SEL selector = NSSelectorFromString(@"setOrientation:");
        NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
        [invocation setSelector:selector];
        [invocation setTarget:[UIDevice currentDevice]];
        int val =UIInterfaceOrientationPortrait;
        [invocation setArgument:&val atIndex:2];
        [invocation invoke];
    }
}

//下拉刷新
-(void)DownFreshVideodetail{
    __weak VideosDetailNewVC *puad = self;
    [puad.videodetailTabview addHeaderWithCallback:^{
        [puad.dataMarryDetail removeAllObjects];
        pageNum = 1;
        [puad dataRequestInterfaceDetail];
        [puad.videodetailTabview headerEndRefreshing];
    }];
}
//上拉加载
-(void)upFreshVideodetail{
    __weak VideosDetailNewVC *pudb = self;
    [pudb.videodetailTabview addFooterWithCallback:^{
        pageNum++;
        [pudb dataRequestInterfaceDetail];
        [pudb.videodetailTabview footerEndRefreshing];
    }];
}

#pragma mark  中间的2个按钮
-(void)middleThreeBtn{
       scrollv = [[UIScrollView alloc]init];
       scrollv.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
       scrollv.delegate = self;
       scrollv.showsVerticalScrollIndicator = NO;
       scrollv.showsHorizontalScrollIndicator = NO;
       scrollv.contentOffset = CGPointMake(0, 0);
       scrollv.backgroundColor = [UIColor whiteColor];// RGB(228, 228, 228);//[UIColor clearColor];
       scrollv.contentSize = CGSizeMake(0, SCREEN_HEIGHT);
       scrollv.scrollEnabled = NO;
       [self.view addSubview:scrollv];
    
    
    
    NSArray * titArr =@[@"视频简介",@"评论"];
      UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, 200, SCREEN_WIDTH, 10) bgColor:RGB(239, 239, 239)];
      [scrollv addSubview:lineview];
      
      headView =[[UIView alloc]initWithFrame:CGRectMake(0, 200+10, SCREEN_WIDTH ,44)];
      [scrollv addSubview:headView];

      
      for (int i = 0; i< 2; i++) {
        
              CGFloat width;

              width= SCREEN_WIDTH/2.0;
               UIButton * bottomBtn =[UIButton buttonWithType:UIButtonTypeCustom];
                 bottomBtn.frame =CGRectMake(SCREEN_WIDTH/2*i , 0, width, 44);
                 [bottomBtn setTitle: titArr[i] forState:UIControlStateNormal];
                 [bottomBtn addTarget:self action:@selector(bottomActionVideo:) forControlEvents:UIControlEventTouchUpInside];
                 bottomBtn.tag = 1110+i;
                 bottomBtn.titleLabel.font = SYSTEMFONT(16.0);
                 [bottomBtn setBackgroundColor:[UIColor whiteColor]];
                 [bottomBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
                 
                 if (bottomBtn.tag == 1110) {
                     leftBtnVideo = bottomBtn;
                     leftBtnVideo.tag = 1110;
                 }else{
                     rightBtnVideo = bottomBtn;
                     rightBtnVideo.tag = 1111;
                 }
                 [headView addSubview:bottomBtn];
  
         
      }
      UIView *lineALl = [UIView createViewWithFrame:CGRectMake(0, 43, SCREEN_WIDTH, 1) bgColor:[UIColor lightGrayColor]];
      [headView addSubview:lineALl];
      
      leftLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2, 42.9, 30, 1.4)];
      leftLine.backgroundColor = JISECOLOR;
      [headView addSubview:leftLine];
      leftLine.hidden = NO;
      
      middleLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2+SCREEN_WIDTH/2.0, 42.9, 30,1.4)];
      middleLine.backgroundColor = JISECOLOR;
      [headView addSubview:middleLine];
      middleLine.hidden = YES;



}

#pragma mark 数据的初始化
-(void)dataOpenDetail{
    isVideoStorestr = @"0";
   

   sysTimestr = @""; //gzz181225
   isHaveDownload = @"no";
   isLeft = 0;
   whichTouchInt = 0;
   self.dataMarryDetail = [NSMutableArray array];
}


#pragma mark 界面
-(void)makeUIVideoDetail{
    

    //这里是直播视频的
    [self makeplayer];

    ziScrollv = [[UIScrollView alloc]init];
    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10-SafeAreaBottomHeight-45);

    [scrollv addSubview:ziScrollv];
    ziScrollv.delegate = self;
    ziScrollv.showsVerticalScrollIndicator = NO;
    ziScrollv.showsHorizontalScrollIndicator = NO;
    ziScrollv.backgroundColor = [UIColor whiteColor];
    ziScrollv.scrollEnabled = YES;
    [self bottomActionVideo:leftBtnVideo];
    
    
    _videodetailTabview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-CGRectGetMaxY(headView.frame)-49) style:UITableViewStylePlain];
    _videodetailTabview.backgroundColor = [UIColor clearColor];
    _videodetailTabview.delegate = self;
    _videodetailTabview.dataSource = self;
    _videodetailTabview.tableFooterView = [[UIView alloc]init];
    _videodetailTabview.separatorStyle = UITableViewCellSeparatorStyleNone;
    _videodetailTabview.hidden = YES;
    [scrollv addSubview:_videodetailTabview];
    
    
    [self DownFreshVideodetail];
    [self upFreshVideodetail];
       
    cacheBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
       cacheBtn.backgroundColor = PATIENTJISECOLOR;
       [self.view addSubview:cacheBtn];

       [cacheBtn addTarget:self action:@selector(cacheBtnClick) forControlEvents:UIControlEventTouchUpInside];
    

}


#pragma mark 点击底部缓存。。。   //gzz20200414
-(void)cacheBtnClick{
    
    if ([isHaveDownload isEqualToString:@"compeleteYES"] || [isHaveDownload isEqualToString:@"yes"]) {
          [self.player pause];

          PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
          vc.hidesBottomBarWhenPushed = YES;
        if ( [isHaveDownload isEqualToString:@"compeleteYES"]) {
            vc.typeStr = @"completeStr";
        }else{
            vc.typeStr = @"processingStr";

        }
          [self.navigationController pushViewController:vc animated:YES];
        
       }else if([isHaveDownload isEqualToString:@"no"]){
           [self getNetworkTypeNB];
       }
}

#pragma mark  跳转到离线缓存
-(void)beforeeDdownloadVideos{
    
    [self.player pause];
  
    isHaveDownload = @"no";
    PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}



#pragma mark  前两个按钮的点击事件
-(void)bottomActionVideo:(UIButton *)btn{

 if (btn.tag == 1110) {
          cacheBtn.hidden = NO;
          [UIView animateWithDuration:0.4 animations:^{
           
              self.videodetailTabview.hidden = YES;
              
              leftLine.hidden = NO;
              middleLine.hidden = YES;
              rightLine.hidden = YES;
              isLeft = 0;
              _videodetailTabview.hidden = YES;
              bottomView.hidden = YES;
              ziScrollv.hidden = NO;
              
              [desLabel removeFromSuperview];
              desLabel = nil;
              
              
              desLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 15, SCREEN_WIDTH-30, 100)];
              desLabel.backgroundColor = [UIColor whiteColor];// [UIColor purpleColor];
              [ziScrollv addSubview:desLabel];
              desLabel.numberOfLines = 0;
              desLabel.lineBreakMode = NSLineBreakByWordWrapping;
              desLabel.text = [NSString stringWithFormat:@"%@",_videoDescribeStr];
              CGSize size = [desLabel sizeThatFits:CGSizeMake(desLabel.frame.size.width, MAXFLOAT)];
              desLabel.frame =CGRectMake(desLabel.x , desLabel.y ,desLabel.width, size.height);
              desLabel.font = [UIFont systemFontOfSize:14];
              desLabel.textColor = [UIColor blackColor];
              [desLabel sizeToFit];
              ziScrollv.contentSize = CGSizeMake(0, CGRectGetMaxY(desLabel.frame)+10);
              [btn setTitleColor:JISECOLOR forState:0];
              [rightBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];

          }];
          
      }else{
          cacheBtn.hidden = YES;

          [UIView animateWithDuration:0.4 animations:^{
               isLeft = 1;
             
              ziScrollv.hidden = YES;
              bottomView.hidden = NO;
              desLabel.hidden = YES;
           
             leftLine.hidden = YES;
             middleLine.hidden = NO;
             rightLine.hidden = YES;
              
             
              [btn setTitleColor:JISECOLOR forState:0];
              [leftBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
              

               _videodetailTabview.hidden = NO;
             
              [self.videodetailTabview reloadData];
          }];
          
       
       
      }
    
}



#pragma mark 获取l网络类型
-(void)getNetworkTypeNB{
    
 
  __weak  AFNetworkReachabilityManager *manager = [AFNetworkReachabilityManager sharedManager];
   // 提示：要监控网络连接状态，必须要先调用单例的startMonitoring方法
   [manager startMonitoring];
    WEAKSELFS
    [manager setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        
    if (status == AFNetworkReachabilityStatusUnknown) {
          
          NSLog(@"未识别网络");
        [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusNotReachable) {
        
          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"无网络，请查看联网情况。" confirmTitle:@"确定" handler:^{
              MCLog(@"sure1");
          }];
          [manager stopMonitoring];
          return;

      }
      if (status == AFNetworkReachabilityStatusReachableViaWWAN) {
          
          NSLog(@"3G/4G网络");
          [weakSelf gotoDownloadVideo:@"当前为移动网络，确定下载？"];
          [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusReachableViaWiFi) {
          
          NSLog(@"Wifi网络");
          [weakSelf gotoDownloadVideo:@"当前为Wifi网络，确定下载？"];
          [manager stopMonitoring];

      }
        
    }];
    
    
 
   
}

#pragma mark 提示下载
-(void)gotoDownloadVideo:(NSString *)typestr{
    
  UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:typestr preferredStyle:(UIAlertControllerStyleAlert)];
  UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
      
  }];
  
  [alertController addAction:cancelAction];
  WEAKSELFS

  UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
    
             [weakSelf showNeedHowmuchScore];


  }];
  [alertController addAction:sureAction];
  [self presentViewController:alertController animated:YES completion:nil];
    
}

#pragma mark  显示需要多少积分 gzz20200414
-(void)showNeedHowmuchScore{
    
        if ([isVideoStorestr isEqualToString:@"1"]) {// 下载过 无需重复支付
            if (![DicRemove isBlankString:self.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {

                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];
              [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
              [self ddownloadddVideos:self.polyv_uuidStr];
            }
    }else{
        
        //    gzz20200509
        NSInteger num = [self.RemainingCountstr integerValue];
        if (num >0) {
            [self getSystemTimeFromServer:@"usewalfare"];
            return;
            
        }else{
            
        }
        
        
        NSString *showContent  = [NSString stringWithFormat:@"该视频需%@积分兑换，若删除，可以再次免费缓存",self.pointStr];

           UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"下载提示" message:showContent preferredStyle:(UIAlertControllerStyleAlert)];
           UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
               
           }];
           
           [alertController addAction:cancelAction];
           WEAKSELFS
           UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
//               gzz20200414
               [weakSelf getSystemTimeFromServer:@"payVideoDown"];
             
           }];
           [alertController addAction:sureAction];
           [self presentViewController:alertController animated:YES completion:nil];
           
    }
    
}

//我的福利-查询福利剩余次数
//地址：expertAPI/getWelfareNum //gzz20200414
//参数type (1视频2课件3精品4万方5U盘)

//我的福利-使用福利操作
//地址：expertAPI/useWelfareNum
//参数type (1视频2课件3精品4万方5U盘)

#pragma mark getWelfareNum 查询福利剩余次数
-(void)getWelfareNumRequest{
      [MBProgressHUD hideHUDForView:self.view animated:YES];

        NSString *Strurl = [NSString stringWithFormat:@"%@getWelfareNum",expertAPI];
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        }else{

            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
        }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

        
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
        
        MCLog(@"=====%@",dicM);
        WEAKSELFS
        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
            if ([code isEqualToString:@"1"]) {
                
                NSString *num = [NSString stringWithFormat:@"%@",data[@"WelfareNum"]];
                if (![DicRemove isBlankString:num]) {
                    weakSelf.RemainingCountstr  = num;
                }else{
                    weakSelf.RemainingCountstr  = @"0";
                }
                MCLog(@"剩余次数==%@",weakSelf.RemainingCountstr);

            }else{

                [self showHint:data[@"message"]];
            }
            [weakSelf getStates];
           [MBProgressHUD hideHUDForView:self.view animated:YES];
             
        } failure:^(NSError *error) {
            [self showHint:@"请求失败"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }];
    
    
}


#pragma mark useWelfareNum 使用福利操作
-(void)useWelfareNumRequest{
    
         [MBProgressHUD hideHUDForView:self.view animated:YES];
            NSString *Strurl = [NSString stringWithFormat:@"%@useWelfareNum",expertAPI];
            NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
            dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
            NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
            dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
            NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
            if (sysTimestr.length>2) {
                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
            }else{

                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
            }
            dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
            dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

            
            NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
            
            MCLog(@"=====%@",dicM);
            WEAKSELFS
            [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
                NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
                if ([code isEqualToString:@"1"]) {
                    isVideoStorestr =   @"1";
                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                   [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
                    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                    [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
                    NSInteger num = [weakSelf.RemainingCountstr integerValue];
                    num = num -1;
                    weakSelf.RemainingCountstr = [NSString stringWithFormat:@"%ld",(long)num];
                    
                }else{

                    [self showHint:data[@"message"]];
                }
              
               [MBProgressHUD hideHUDForView:self.view animated:YES];
                 
            } failure:^(NSError *error) {
                [self showHint:@"请求失败"];
                [MBProgressHUD hideHUDForView:self.view animated:YES];
            }];
}






#pragma  mark tableview
-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (isLeft == 1) {

    if (_dataMarryDetail.count>0) {
      
        NSDictionary *cellDic = [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexPath.row]];
        
        NSString *str = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
        
        
        NSString *strUrl = [str stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
        //            strUrl = [NSString stringWithFormat:@"%@:%@",[cellDic objectForKey:@"realname"],strUrl];
        NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
        
        
        //gzz170622
        CGSize sizee = [self checTheStringWithHight:strUrla font:14 float:15];
        CGFloat heigith = sizee.height +10 +40 +10 +8+3+4;
        
        return heigith;
        
        
    }else{
        
        return 0;
    }
       }else if (isLeft == 2){
           return 95;
           
       }else{
           return 0.01;
       }
    
}
-(CGSize)checTheStringWithHight:(NSString *)theStr font:(float)font  float:(CGFloat)floatt
{
    
    CGFloat xxx;
    xxx  = floatt;
    //gzz1026
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(SCREEN_WIDTH-xxx*2, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
  
    return _dataMarryDetail.count;
 
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
  
         static NSString *strint = @"cellVideoDetail";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:strint];
            if (!cell) {
                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strint];
                
            }else{//gzz170407
                for (UIView *view in cell.contentView.subviews) {
                    [view removeFromSuperview];
                }
            }
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor = [UIColor whiteColor];
            if (_dataMarryDetail.count>0) {
                
                [cell.contentView addSubview:[self addViewss:indexPath.row]];
            }

            return cell;
   
   
}


#pragma mark 自定义cell
-(UIView *)addViewss:(NSInteger)indexx{
    
    UIView *vieww =[[UIView alloc]init];
    vieww.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80);
    
    
    
    NSDictionary *cellDic= [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexx]];
    NSString  *imgesss=[cellDic objectForKey:@"photo"];
    NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageUrl,imgesss];
    UIImageView *imagevview1=[[UIImageView alloc]initWithFrame:CGRectMake(15, 10,40,40)];
    imagevview1.layer.cornerRadius = 20;
    imagevview1.layer.masksToBounds = YES;
    [imagevview1 sd_setImageWithURL:[NSURL URLWithString:imagename] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
    [vieww addSubview:imagevview1];
    
    
    UILabel* nameLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10,10,100, 18)];
    [vieww addSubview:nameLabel];
    nameLabel.textColor = RGB11(146, 60, 53);
    NSString *realNamee = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"realname"]];
    //    realNamee  = [realNamee stringByReplacingCharactersInRange:NSMakeRange(1, realNamee.length-1) withString:@"**"];
    nameLabel.text = realNamee;
    nameLabel.font = SYSTEMFONT(16);
    nameLabel.textAlignment = NSTextAlignmentLeft;
    [nameLabel sizeToFit];
    
    
    UILabel* dateLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(nameLabel.frame)+5,150, 18)];
    if (!nameLabel || nameLabel.text.length <= 0) {
        dateLabel.frame = CGRectMake(dateLabel.x, 31, dateLabel.width, dateLabel.height);
    }
    [vieww addSubview:dateLabel];
    NSString *dateStr = [cellDic objectForKey:@"create_date"];
    dateStr = [dateStr substringToIndex:16];
    dateStr = [dateStr substringWithRange:NSMakeRange(5, 11)];
    dateLabel.text = dateStr;
    dateLabel.font = SYSTEMFONT(14);
    dateLabel.textColor = [UIColor lightGrayColor];
    dateLabel.textAlignment = NSTextAlignmentLeft;
    
    
    //    Dlpontlerexple *dlp = [Dlpontlerexple shareIndence];
    NSString *zijiUUId = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    NSString *getUuid = [cellDic objectForKey:@"expert_uuid"];
    UILabel *replyLabel = [[UILabel alloc]init];
    UIImageView *DeleteImage= [[UIImageView alloc]init];
    replyLabel.userInteractionEnabled = YES;
    DeleteImage.userInteractionEnabled = YES;
    if ([zijiUUId isEqualToString:getUuid]) {
        //说明是删除
        DeleteImage.frame = CGRectMake(kMainScreenWidth-35, 10, 20, 20);
        DeleteImage.centerYy = nameLabel.centerYy;
        DeleteImage.image = [UIImage imageNamed:@"delet_case"];
        [vieww addSubview:DeleteImage];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(imageTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
        
    }else{
        //说明是回复
        //        replyLabel.frame = CGRectMake(kMainScreenWidth-50, 10, 35, 20);
        //        replyLabel.text = @"回复";
        //        replyLabel.textAlignment = NSTextAlignmentRight;
        //        replyLabel.textColor = [UIColor blackColor];
        //        replyLabel.font = SYSTEMFONT(16);
        replyLabel.frame = CGRectMake(SCREEN_WIDTH-65, 10, 50, 25);
        //        replyLabel.centerY = nameLabel.centerY;
        replyLabel.text = @"回复";
        replyLabel.textAlignment = NSTextAlignmentCenter;
        replyLabel.layer.cornerRadius = 10;
        replyLabel.layer.borderColor = RGB11(146, 60, 53).CGColor;
        replyLabel.layer.borderWidth = 1;
        replyLabel.layer.masksToBounds = YES;
        replyLabel.textColor = RGB11(102, 102, 102);
        replyLabel.font = [UIFont systemFontOfSize:16.0];
        [vieww addSubview:replyLabel];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        
        
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(replyTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
    }
    
    
    
    UILabel* commentLabel = [[UILabel alloc] initWithFrame: CGRectMake(15,CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, 32)];
    [vieww addSubview:commentLabel];
    
    
    commentLabel.numberOfLines = 0;
    commentLabel.lineBreakMode = NSLineBreakByTruncatingTail;// NSLineBreakByWordWrapping;
    
    NSMutableString * mulStr = [cellDic objectForKey:@"comment"];
    NSRange range;
    NSRange range1;
    
    NSMutableAttributedString *str=[[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]]];
    
    if ([mulStr hasPrefix:@"回复"]) {
        
        range = [mulStr rangeOfString:@"："];
        
        
        
        if (range.location != NSNotFound) {
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(0, 2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(146, 60, 53) range:NSMakeRange(2, range.location-2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range.location+1, str.length-range.location-1)];
            commentLabel.attributedText =  str;
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText =  str;
            commentLabel.textColor = QGreyColor;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;
            
            
        }
        
    }else{
        
        //        range1 = [mulStr rangeOfString:@"||"];
        //        if (range1.location != NSNotFound) {
        //
        //            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
        //            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
        //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
        //            commentLabel.attributedText = str;
        //            commentLabel.font = [UIFont systemFontOfSize:14.0];
        
        
        range1 = [mulStr rangeOfString:@"||"];
        if (range1.location != NSNotFound) {
            
            //            NSLog(@"%ld  %ld",range.location,range.length);
            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
            [str addAttribute:NSForegroundColorAttributeName value:QGreyColor range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
            //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
            
            
            NSArray *arr=[mulStr componentsSeparatedByString:@"||"];
            
            NSInteger m;
            m=0;
            
            for(int i=0;i<[arr count]-1;i++)
            {
                m=m+[arr[i] length];
                [str addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(m, 2)];
                m=m+2;
            }
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText = str;
            commentLabel.textColor = QGreyColor;;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;;
            
            
        }
        
    }
    
    
    //    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, size.height);
    //    [commentLabel sizeToFit];
    //    commentLabel.backgroundColor = [UIColor clearColor];
    
    NSString *strUrl = [commentLabel.text stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
    
    
    //    strUrl = [NSString stringWithFormat:@" %@:%@",[cellDic objectForKey:@"realname"],strUrl];
    NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
    commentLabel.text = strUrla;
    
    
    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-10-40-10-10, size.height+8);
    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-30, size.height+8);
    
    
    [commentLabel sizeToFit];
    commentLabel.backgroundColor = [UIColor clearColor];
    
    //第一条评论变色
    NSMutableAttributedString *str1 =[[NSMutableAttributedString alloc]initWithString:strUrla];
    NSString *string ;
    NSRange range3 = [commentLabel.text rangeOfString:@"\n\n"];//匹配得到的下标
    
    if (range3.location != NSNotFound) {
        NSLog(@"找到了@“zhu”这个字符串！");
        NSLog(@"rang:%@",NSStringFromRange(range3));
        string  = [commentLabel.text substringWithRange:range3];//截取范围类的字符串
        NSLog(@"截取的值为：%@",string);
        [str1 addAttribute:NSForegroundColorAttributeName value:JISECOLOR range:NSMakeRange(0, range3.location)];
        commentLabel.attributedText =  str1;
    }
    else{
        NSLog(@"没找到！");
        commentLabel.textColor = QGreyColor;
    }
    
    
    
    
    
    
    
    //背景
    UIView *bgCommentView = [[UIView alloc]init];
    bgCommentView.frame = CGRectMake(commentLabel.x-4, commentLabel.y-2, SCREEN_WIDTH-10-10-6, commentLabel.height+4);
    bgCommentView.backgroundColor = RGB11(241, 245, 244);
    bgCommentView.layer.cornerRadius = 3;
    bgCommentView.layer.masksToBounds = YES;
    
    [vieww insertSubview:bgCommentView belowSubview:commentLabel];
    
    
    UIView *lineview = [[UIView alloc]init];
    lineview.frame = CGRectMake(0, CGRectGetMaxY(commentLabel.frame)+9.5, kMainScreenWidth, 0.5);
    lineview.backgroundColor = RGB11(188, 188, 188);
    [vieww addSubview:lineview];
    vieww.frame = CGRectMake(vieww.x, vieww.y, vieww.width, CGRectGetMaxY(commentLabel.frame)+10);
    
    return vieww;
}
#pragma mark tableview结束
#pragma mark 手势事件  删除评论 自己的评论以及回复别人的
-(void)imageTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    UIAlertView *delAlert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"确定要删除评论？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    [delAlert show];
    
}

#pragma mark 手势事件 回复手势
-(void)replyTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    ReplyActivityController *rep = [ReplyActivityController  new];
    rep.hidesBottomBarWhenPushed = YES;
    NSString *nameStr = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"realname"];
    //    nameStr  = [nameStr stringByReplacingCharactersInRange:NSMakeRange(1, nameStr.length-1) withString:@"**"];
    NSString *commentStr = _videoCommentUuid;
    rep.commentStr = commentStr;
    rep.nameStr = nameStr;
    rep.isVideoStr = @"yes";
    rep.replyContent = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment"];
    [self.navigationController pushViewController:rep animated:YES];
    
}
#pragma mark 底部的评论按钮
-(void)barToolVideo{
    
    bottomView = [[UIView alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height-49-SafeAreaBottomHeight, self.view.frame.size.width, 49)];
    bottomView.backgroundColor = [UIColor whiteColor];//RGB(180, 170, 179);//;[UIColor whiteColor];
    bottomView.hidden = YES;
    [self.view addSubview:bottomView];
    
    fideld = [[UITextField alloc]init];
    fideld.frame = CGRectMake(10, 4.5, SCREEN_WIDTH-85, 40);
    fideld.delegate = self;
    fideld.placeholder = @"我也说一句";
    fideld.borderStyle = UITextBorderStyleRoundedRect;
    fideld.backgroundColor = [UIColor whiteColor];
    [bottomView addSubview:fideld];
    
    
    commitBtn =[UIButton new];
    [bottomView addSubview:commitBtn];
    commitBtn.frame = CGRectMake(kMainScreenWidth-65, 10, 55, 40);
    commitBtn.centerYy = fideld.centerYy;
    commitBtn.backgroundColor = RGB11(146, 60, 53);
    commitBtn.layer.cornerRadius = 5 ;
    commitBtn.layer.masksToBounds = YES;
    [commitBtn setTitle:@"发送" forState:0];
    [commitBtn setTitleColor:[UIColor whiteColor] forState:0];
    [commitBtn addTarget:self action:@selector(commitAction:) forControlEvents:UIControlEventTouchUpInside];//gzz0811
    
}

#pragma mark textfield  keyBoard的收起弹出
- (void)keyboardWillShow:(NSNotification *)notification {
    
    //获取通知传递过来的信息
    NSDictionary* info = [notification userInfo];
    //获取键盘的size
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
  
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);

    
}

- (void)keyboardWillHide:(NSNotification *)notification {
    
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-160, SCREEN_WIDTH, 160);
    
    
}

- (void)textFieldDidBeginEditing:(UITextField *)textField{
    [textField becomeFirstResponder];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    
    return YES;
}
-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    
    bagView.hidden = NO;
    smallView.hidden = NO;
    return NO;
}

//创建一个半透明的view覆盖页面
-(void)makeUiTextView{
    
    bagView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, [[UIScreen mainScreen] bounds].size.height)];
    bagView.backgroundColor = [UIColor blackColor];
    bagView.alpha = 0.7;
    bagView.hidden = YES;
    [self.view addSubview:bagView];
    
    smallView = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-160-SafeAreaBottomHeight, SCREEN_WIDTH, 160)];
    smallView.backgroundColor = [UIColor colorWithRed:223/255.0 green:224/255.0 blue:225/255.0 alpha:1.0];
    smallView.hidden = YES;
    [self.view addSubview:smallView];
    
    cancleBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 50, 30)];
    [cancleBtn setTitle:@"取消" forState:(UIControlStateNormal)];
    [cancleBtn setTitleColor:[UIColor lightGrayColor] forState:(UIControlStateNormal)];
    [cancleBtn addTarget:self action:@selector(hideBagView) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:cancleBtn];
    
    enSureBtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-50, 0, 50, 30)];
    [enSureBtn setTitle:@"确定" forState:(UIControlStateNormal)];
    //    [enSureBtn setTitleColor:[UIColor colorWithRed:146/255.0 green:60/255.0 blue:53/255.0 alpha:1.0] forState:(UIControlStateNormal)];
    [enSureBtn setTitleColor:RGB11(146, 60, 53) forState:(UIControlStateNormal)];
    
    
    [enSureBtn addTarget:self action:@selector(hideBagViewAnd) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:enSureBtn];
    
    showLB = [[UILabel alloc]initWithFrame:CGRectMake((SCREEN_WIDTH-60)/2, 0, 60, 30)];
    showLB.text = @"写评论";
    [smallView addSubview:showLB];
    
    textView = [[UITextView alloc]initWithFrame:CGRectMake(20, 35, SCREEN_WIDTH-40, 115)];
    textView.backgroundColor = [UIColor whiteColor];
    textView.font = [UIFont systemFontOfSize:16.0];
    
    [smallView addSubview:textView];
    
}


-(void)hideBagViewAnd{

    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = textView.text;
    [textView resignFirstResponder];
}
-(void)hideBagView{
    
    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = @"";
    [textView resignFirstResponder];
}
#pragma mark  发送  提交按钮点击
-(void)commitAction:(UIButton *)btn{
    
    [fideld resignFirstResponder];
    //    MCLog(@"commit click  %@",fideld.text);
    comContent = fideld.text;
    if (comContent.length <=0 ||[comContent isEqualToString:@"(null)"] ||[comContent isEqualToString:@"<null>"]) {
        [self showHint:@"请输入评论内容"];
        return;
    }
    [self addCommentRequestVideo];
    [fideld setText:@""];//清空里面的内容
}
#pragma mark 收藏的按钮
-(void)storeClick{
    
    //先讲之前的收藏隐藏起来，做个分享功能测试
    if ([_isCollection isEqualToString:@"0"]) {
        [self storeRequestVideo];
    }else if([_isCollection isEqualToString:@"1"]){
        
        [self undoStoreRequestVideo];
        
    }else{
        
    }
}

#pragma mark 新友盟分享
- (void)shareAction
{

    NSString *descr = _videoDescribeStr;
    NSString *title =[NSString stringWithFormat:@"%@",self.titleName];
    
    NSString *weburl = [NSString stringWithFormat:@"%@%@&expertshare=videoshare",videodetailURL,_videoCommentUuid];
    
    NSString *imageUrl = [NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath];
    NSLog(@"分享出去的链接%@",weburl);
    NSDictionary *dic =[[NSDictionary alloc]init];
    if ([DicRemove isBlankString:self.contentID]) {
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl};
        
    }else{
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl,@"contentID":self.contentID};
    }
    UmengEnclosed *umeng = [UmengEnclosed sharedUmengEnclosed];
    [umeng customWebShareWithVC:self SocialType:SType_sina_wx_qq shareType:ShareWebPages webData:dic];
}

#pragma mark  read接口
-(void)readAddRequest{
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = _videoCommentUuid;
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            self.isCollection = Collection;
            if ([_isCollection isEqualToString:@"0"]) {
                //        [rightItem setBackgroundColor:[UIColor redColor]];
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec2@2x"];
            }else{
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec1@2x"];
                
            }
            
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}

#pragma mark 收藏视频接口
-(void)storeRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@collection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"title"] = [NSString stringWithFormat:@"%@",_titleName];
    dicm[@"path"] = [NSString stringWithFormat:@"%@",_videoPath];
    dicm[@"readnum"] = [NSString stringWithFormat:@"%@",_readnum];
    //    dicm[@"readnum"] = @"300";
    dicm[@"imgpath"] = [NSString stringWithFormat:@"%@",_imagePath];
    dicm[@"public_name"] = [NSString stringWithFormat:@"%@",_public_name];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
          
            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            
            //            [rightItem setBackgroundColor:[UIColor blueColor]];
            _isCollection = [NSString stringWithFormat:@"%d",1];
            
            [self showHint:@"收藏成功"];
            
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        NSLog(@"%@",error);
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 取消收藏视频接口
-(void)undoStoreRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@discollection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
      
            storeImg.image = [UIImage imageNamed:@"circollec2@2x"];
            _isCollection = [NSString stringWithFormat:@"%d",0];
            
            if ([self.isStore isEqualToString:@"yes"]) {
                
            }else{
                
                GDXZLog(@"那就是不掉取block");
            }
            
            [self showHint:@"取消收藏成功"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma  接口添加评论
-(void)addCommentRequestVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@addComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"article_uuid"]= [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"comment"] =[NSString stringWithFormat:@"%@",comContent];
    dicm[@"type"] = @"8";
    pageNum = 1;//gzz1121
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];//gzz1121!
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                [_dataMarryDetail  removeAllObjects];
                
                [_dataMarryDetail addObjectsFromArray:arr];
                
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
                textView.text = @"";//gzz1025
                [self showHint:@"发表评论成功"];
                
            }
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 视频评论列表的接口
-(void)dataRequestInterfaceDetail{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@commentList",IMAURLAPP];//待gzz1108
    
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    dicm[@"uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                
                [_dataMarryDetail addObjectsFromArray:arr];
                [_videodetailTabview reloadData];
            }else{
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
            }
            
        }else{
            [self showHint:[dic  objectForKey:@"message"]];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
    
    
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 1) {
        [self delelPinglunVideo];
    }else{
        
        //        MCLog(@"取消了");
    }
    
}
#pragma mark  删除评论接口
-(void)delelPinglunVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@deleteComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    NSString *commandUuid = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment_uuid"];
    dicm[@"uuid"] = commandUuid;
    
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
     
            [_dataMarryDetail  removeObjectAtIndex:whichTouchInt];
            __weak typeof(self) wakeself = self;
            [wakeself.videodetailTabview reloadData];//gzz1122R
            
            [self showHint:@"删除评论成功"];
            
        }else{
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
            [self showHint:[dic objectForKey:@"message"]];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
}
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)str{
    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
         if ([str isEqualToString:@"liulan"]) {
                      [weakSelf watchHistoryRequest];

              }else if([str isEqualToString:@"detail"]){
                  [weakSelf docDatialRequest];

              }else if([str isEqualToString:@"isVideoStore"]){
                  [weakSelf isVideoDownloadRecordRequest];

              }else if([str isEqualToString:@"payVideoDown"]){
                  [weakSelf payVideoDownload];

              }else if([str isEqualToString:@"getwalfare"]){
                  [weakSelf getWelfareNumRequest];

              }else if([str isEqualToString:@"usewalfare"]){
                  [weakSelf useWelfareNumRequest];

              }

        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        
               if ([str isEqualToString:@"liulan"]) {
                   [weakSelf watchHistoryRequest];

               }else if([str isEqualToString:@"detail"]){
                   [weakSelf docDatialRequest];

               }else if([str isEqualToString:@"isVideoStore"]){
                   [weakSelf isVideoDownloadRecordRequest];
                   
               }else if([str isEqualToString:@"payVideoDown"]){
                   [weakSelf payVideoDownload];

               }else if([str isEqualToString:@"getwalfare"]){
                   [weakSelf getWelfareNumRequest];

               }else if([str isEqualToString:@"usewalfare"]){
                   [weakSelf useWelfareNumRequest];

               }
           
    }];
    
}

#pragma mark s视频x详情接口
-(void)docDatialRequest{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@videoDetail",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        NSDictionary *dicd =[NSDictionary dictionaryWithDictionary:data[@"video"]];
        if ([coder isEqualToString:@"200"]) {
            weakSelf.videoPath = [NSString stringWithFormat:@"%@",dicd[@"path"]];
            weakSelf.videoDescribeStr = [NSString stringWithFormat:@"%@",dicd[@"note"]];
            weakSelf.isCollection = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.titleName = [NSString stringWithFormat:@"%@",dicd[@"name"]];
             weakSelf.imagePath = [NSString stringWithFormat:@"%@",dicd[@"imgpath"]];
            weakSelf.public_name = [NSString stringWithFormat:@"%@",dicd[@"public_name"]];
            weakSelf.readnum = [NSString stringWithFormat:@"%@",dicd[@"readnum"]];
            weakSelf.isStore = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.contentID = [NSString stringWithFormat:@"%@",dicd[@"content"]];
            weakSelf.polyv_uuidStr = [NSString stringWithFormat:@"%@",dicd[@"polyv_uuid"]];

            weakSelf.pointStr = [NSString stringWithFormat:@"%@",dicd[@"point"]];

            if ([DicRemove  isBlankString:weakSelf.polyv_uuidStr]) {

                NSString *str = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                 NSRange range = [str rangeOfString:@"vid\""];

            if (range.location != NSNotFound) {
                MCLog(@"早到了");
                NSString *str2 = [str substringFromIndex:(range.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"\""];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
            }else{
                MCLog(@"没找到");
                NSString *str11 = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                NSRange range1 = [str11 rangeOfString:@"vid'"];
                if (range1.location != NSNotFound) {
                NSString *str2 = [str11 substringFromIndex:(range1.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"'"];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
                }

            }

                
            }
              
            if ([self.isCollection isEqualToString:@"0"]) {
                storeImg.image = [UIImage imageNamed:@"circollec2"];
            }else{
                storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            }
            [weakSelf bottomActionVideo:leftBtnVideo];
            [weakSelf makeUIVideoDetail];
            [weakSelf barToolVideo];
            [weakSelf makeUiTextView];
//   gzz20200509
//            [weakSelf getStates];
            [weakSelf getWelfareNumRequest];

        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}

#pragma mark  是否缓存过该视频
-(void)isVideoDownloadRecordRequest{
    [MBProgressHUD hideHUDForView:self.view animated:YES];

//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@isVideoDownloadRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            isVideoStorestr = [NSString stringWithFormat:@"%@",data[@"result"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];

           [weakSelf getSystemTimeFromServer:@"detail"];
        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark  支付积分
-(void)payVideoDownload{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@payVideoDownload",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            
            isVideoStorestr =   @"1";
         if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
             NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
         
             
             [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
             
          }
            
        }else{
            if ([coder isEqualToString:@"106"]) {
//                [self showHint:@"您的积分不够，请赚取积分或购买后来支付！"];
                
                
                UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"您的积分不足，是否购买积分？" preferredStyle:(UIAlertControllerStyleAlert)];
                UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
                    
                }];
                
                [alertController addAction:cancelAction];
                WEAKSELFS
                UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
                    [weakSelf buybounds];
                }];
                [alertController addAction:sureAction];
                [self presentViewController:alertController animated:YES completion:nil];
                
            }

        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
-(void)buybounds{
    bugBonusVC *vc = [[bugBonusVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}


#pragma mark  专家端 - 添加视频浏览记录
-(void)watchHistoryRequest{
    
    NSString *Strurl = [NSString stringWithFormat:@"%@addVideoWatchRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        
        if ([coder isEqualToString:@"200"]) {
          
            
        }else{
            
            [self showHint:message];
        }
        
    } failure:^(NSError *error) {
        
        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark navbar及返回
-(void)navBarVideoDetail{
//    gzz191101
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClickVideoDetail)];
    self.navigationItem.leftBarButtonItem=backItem;
    
    UIView *rightView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 70, 40)];
    rightView.backgroundColor = [UIColor clearColor];
    
    UIImageView *shareImag = [UIImageView creatImageviewWithFrame:CGRectMake(0, 10, 20, 20) imaged:[UIImage imageNamed:@"分享@2x"]];
    [rightView addSubview:shareImag];
    
    UIButton * shareButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 34, 40)];
    [rightView addSubview:shareButton];
    shareButton.backgroundColor = [UIColor clearColor];
    [shareButton addTarget:self action:@selector(shareAction) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIImageView *btnImag = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(shareImag.frame)+20, 7.5, 25, 25) imaged:[UIImage imageNamed:@"icodd"]];
    [rightView addSubview:btnImag];
    storeImg = btnImag;
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(CGRectGetMaxX(shareButton.frame)+1, 0, 34, 40);
    btn.backgroundColor = [UIColor clearColor];
    rightItem = btn;
    [rightView addSubview:btn];
    [rightItem addTarget:self action:@selector(storeClick) forControlEvents:UIControlEventTouchUpInside];
    
    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:rightView];
    self.navigationItem.rightBarButtonItem = pulish;
    
    
 
    
}
-(void)backClickVideoDetail{
    [self.player destroyPlayer];
    if ([self.isStore isEqualToString:@"yes"]) {
        
        self.reloadBlock(_isCollection);
    }
    
    if ([_typesVideo isEqualToString:@"type"]) {//gzz1124
        
        self.reloadBlock(_videoCommentUuid);
        
    }else if([_typesVideo isEqualToString:@"videoHome"])//videoHome
    {
        self.reloadBlock(_videoCommentUuid);
        
    }else{
        
        
    }
    
    

    NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
    [des setObject:@"isVideo" forKey:@"jingxuan_video"];
    
    
    NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
    [dess setObject:_videoCommentUuid forKey:@"jingxuan_videoUUID"]; // jingxuan_videoUUID 11
    
    if ([_isJingxuanInDetail isEqualToString:@"yes"]) {
        NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
        [des setObject:@"isJingxuanInDe" forKey:@"isJingxuanInDetail"];
    } //gzz170216  111111  isJingxuanInDetail
    
    
    [self.navigationController popViewControllerAnimated:YES];
}


-(NSDictionary *)clearErrorDataDateil:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
    
}




#pragma mark - util

+ (NSString *)formatFilesize:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
- (NSString *)downloadStateImgFromState:(PLVVodDownloadState )state{
    NSString *imageName = nil;
    switch (state) {
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStatePreparing:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:
            imageName = @"plv_icon_download_stop";
            break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:
            imageName = @"plv_icon_download_processing";
            break;
        case PLVVodDownloadStateSuccess:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateFailed:
            imageName = @"plv_icon_download_fail";
            break;
    }
    
    return imageName;
}
#pragma mark -- handle
- (void)handleStopDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVideoParams:params];
#endif
}

- (void)handleStartDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] startDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] startDownloadWithVideoParams:params];
#endif
    
    if ([PLVVodDownloadManager sharedManager].isDownloading){
        //
//        self.queueDownloadButton.selected = YES;
    }
}
#pragma mark  下载状态的改变
-(void)showType:(NSInteger)row{
    // 播放本地缓存视频
     PLVVodDownloadInfo *info = self.downloadInfos[row];
     if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
         // 暂停下载
         [self  handleStopDownloadVideo:info index:row ];
     } else {
         // 开始下载
         [self handleStartDownloadVideo:info index:row];
     }
}
#pragma mark  删除下载 正在下载的
-(void)deleDownload:(NSInteger)index{
       PLVVodDownloadInfo *info = self.downloadInfos[index];
       if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
           // 暂停下载
           [self  handleStopDownloadVideo:info index:index];
       } else {
//           // 开始下载
//           [self handleStartDownloadVideo:info index:row];
       }
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

           [weakSelf handleStartDownloadVideo:info index:index];
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
             
          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
              PLVVodDownloadInfo *downloadInfo = self.downloadInfos[index];
              
          #ifndef PLVSupportDownloadAudio
              [downloadManager removeDownloadWithVid:downloadInfo.video.vid error:nil];
          #else
              // 使用音频下载功能的客户，调用如下方法
              PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:downloadInfo.vid fileType:downloadInfo.fileType];
              [downloadManager removeDownloadWithVideoParams:params error:nil];
          #endif
              
              [self.downloadInfos removeObject:downloadInfo];
           
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
           isHaveDownload = @"no";
           
    

           
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}

#pragma mark  删除下载 已经完成的
-(void)delecomDownload:(NSInteger)index{
      
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

          
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
           
        PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];

        [downloadManager removeDownloadWithVid:self.polyv_uuidStr error:nil];
        [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
            isHaveDownload = @"no";
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}


#pragma mark - util  tool

+ (NSString *)formatFilesizeaa:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
+ (NSString *)timeFormatStringWithTime:(NSTimeInterval )time{
    
    NSInteger hour = time/60/60;
    NSInteger minite = (time - hour*60*60)/60;
    NSInteger second = (time - hour*60*60 - minite*60);
    
    NSString *timeStr =[NSString stringWithFormat:@"%02d:%02d:%02d", (int)hour, (int)minite,(int)second];
    
    return timeStr;
}
///expertAPI/videoDetail
#pragma mark 禁用手势

-(void)viewDidAppear:(BOOL)animated {
[super viewDidAppear:animated];
//if([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
//    self.navigationController.interactivePopGestureRecognizer.enabled = NO;
//}
    [self popGestureChange:self enable:NO];
}



-(void)popGestureChange:(UIViewController *)vc enable:(BOOL)enable{
    if ([vc.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        //遍历所有的手势
        for (UIGestureRecognizer *popGesture in vc.navigationController.interactivePopGestureRecognizer.view.gestureRecognizers) {
            popGesture.enabled = enable;
        }
    }
}

@end

