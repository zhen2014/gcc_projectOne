以前老的 视频详情 没有福利次数的那个
=========


//#import "VideosDetailNewVC.h"
//#import "VideoStoresController.h"
//#import "ReplyActivityController.h"
//#import "AboutGandanController.h"
//
//#import "bugBonusVC.h"
//#import "RightImageBtnOnly.h"
//#import <PLVVodSDK/PLVVodSDK.h>
//#import "PLVCourseNetworking.h"
//#import "UIColor+PLVVod.h"
//#import "PLVVodSkinPlayerController.h"
//#import "PLVDownloadCompleteInfoModel.h"
//#import "PLVDownLoaProcessingNewCell.h"
//#import "videoNewDetailDownLoadCell.h"//缓存中
//
//#import "VideoNewDetailDownCompeleteCell.h" //已完成
//
//#import "PLVDownloadManagerNewVC.h"
//
////增加专家姓名
//#import <PLVVodSDK/PLVVodDownloadManager+Database.h>
//#import "PLVVodExtendVideoInfo+WCTTableCoding.h"
//#import "PLVVodDBManager.h"
//#import "PLVVodExtendVideoInfo.h"
//
//#import "newbofangViewController.h"//播放
//@interface VideosDetailNewVC ()<UIScrollViewDelegate,UITextFieldDelegate,UITableViewDelegate,UITableViewDataSource,UIAlertViewDelegate,UIWebViewDelegate,UIWebViewDelegate>{
//    UIScrollView *scrollv;
//    UIScrollView *ziScrollv;
//
//    UIImageView *headImageview;
//    UIView *headView;
//    UIView *bottomViewDownload;//底部xiazaiviwe
//
//   UIButton *leftBtnVideo;//视频简介
//   UIButton *rightBtnVideo;//评论 现在z是在中间
//
//    UIView *coverRightView;//包裹带缓存的view
//   RightImageBtnOnly  *rihgtStorePicBtn;//右边的缓存按钮带图片的
//
//   NSInteger isLeft;// 左0 中 1  右 2
//
//   UIView *leftLine;
//   UIView *middleLine;
//   UIView *rightLine;
//
//
//    UILabel *desLabel;
//
//
//    UIImageView *imagershuju;
//    UILabel *tiwuxianLab;//提示无数据时
//
//
//    UITextField *fideld;
//    UIView *bottomView;
//    BOOL keyBoardIsUp;
//    UIButton *commitBtn;
//    UIView *webBottomView;
//    UILabel *mountLabel;
//    NSString *comContent;
//    NSInteger whichTouchInt;
//
//    UIView * bagView;//评论覆盖的背景view
//    UIView * smallView;//小view
//    UIButton * cancleBtn;//取消按钮
//    UIButton * enSureBtn;//确定按钮
//    UILabel * showLB;//写评论标签
//    UITextView * textView;
//    UIWebView  *gdWebview;
//
//    NSInteger pageNum;//gzz1121!
//    UIButton *rightItem;
//    UIWebView *viewWeb;
//    UIBarButtonItem *right1;
//    UIImageView * shareimaView ;
//    UIButton *searchBtn;
//
//    UIImageView *storeImg;
//
//    NSString *sysTimestr;//系统时间
//
//    //    保利威视
//    UIButton *cacheBtn;
//    UIImageView *imageBag;//
//
//    NSString*isHaveDownload;// 是不是已经存在下载队列中  no 没下载；yes下载中；compeleteYES已缓存；
//    UIButton *downloadbtn;//
//
//    NSInteger indexInInfos;//是第几个
//
//    BOOL isScore;//是否显示积分 默认yes
//
//    UILabel *scorelaebl;//多少积分显示label
//
//    NSString *isVideoStorestr;//是不是缓存过该视频 o0没有。1 有的
//
//}
//@property(nonatomic,strong)UITableView *videodetailTabview;
//@property(nonatomic,strong)NSMutableArray *dataMarryDetail;
//
////保利威视
//@property (nonatomic,strong) NSMutableArray *dataArr;
//@property (nonatomic,strong) UITableView *downloadtableview;
//@property (nonatomic, strong) PLVVodSkinPlayerController *player;//gzz190327
//@property (nonatomic, strong) UIView *playerPlaceholder;
//@property (nonatomic, strong) NSMutableArray<PLVVodDownloadInfo *> *downloadInfos;
//@property (nonatomic, strong) NSMutableDictionary<NSString *, videoNewDetailDownLoadCell *> *downloadItemCellDic;
//
////当前视频现在完成后的信息 展示在cell中
//@property(nonatomic,strong)PLVVodDownloadInfo *completeDownloadInfo;
//
//@end
//
//@implementation VideosDetailNewVC
////懒加载
//- (PLVVodDownloadInfo *)completeDownloadInfo{
//    if (!_completeDownloadInfo) {
//        _completeDownloadInfo = [[PLVVodDownloadInfo alloc]init];
//    }
//    return _completeDownloadInfo;
//}
//
//
//#pragma mark  property
//- (void)setDownloadInfos:(NSMutableArray<PLVVodDownloadInfo *> *)downloadInfos {
//    _downloadInfos = downloadInfos;
//    // 设置单元格字典
//    NSMutableDictionary *downloadItemCellDic = [NSMutableDictionary dictionary];
//    for (PLVVodDownloadInfo *info in downloadInfos) {
//        videoNewDetailDownLoadCell *cell = [videoNewDetailDownLoadCell cellWithTableView:self.downloadtableview];
//          downloadItemCellDic[info.identifier] = cell;
//    }
//    self.downloadItemCellDic = downloadItemCellDic;
//    // 设置回调
//    __weak typeof(self) weakSelf = self;
//    for (PLVVodDownloadInfo *info in downloadInfos) {
//        // 下载状态改变回调
//        info.stateDidChangeBlock = ^(PLVVodDownloadInfo *info) {
//            dispatch_async(dispatch_get_main_queue(), ^{
//                if (info.state == PLVVodDownloadStateSuccess){ //下载成功，从列表中删除
//                    [weakSelf handleDownloadSuccess:info];
//                }
//                [weakSelf updateCellWithDownloadInfo:info];
//            });
//        };
//
//    // 下载进度回调
//    info.progressDidChangeBlock = ^(PLVVodDownloadInfo *info) {
//        //NSLog(@"vid: %@, progress: %f", info.vid, info.progress);
//        videoNewDetailDownLoadCell *cell = weakSelf.downloadItemCellDic[info.identifier];
//        float receivedSize = MIN(info.progress, 1) * info.filesize;
//        NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
//        dispatch_async(dispatch_get_main_queue(), ^{
//            cell.progressLable.text = downloadProgressStr;
//        });
//    };
//  }
//}
//- (void)updateCellWithDownloadInfo:(PLVVodDownloadInfo *)info {
//    videoNewDetailDownLoadCell *cell = self.downloadItemCellDic[info.identifier];
//    cell.backgroundColor = RGB(244, 244, 244);
//
//    NSString *title  = NSStringFromPLVVodDownloadState(info.state);
//    UIImage *images = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
//    cell.downloadStateImageview.image = images;
//    cell.videoStateLable.text = title;
//
//    switch (info.state) {
//        case PLVVodDownloadStatePreparing:
//        case PLVVodDownloadStateReady:
//        case PLVVodDownloadStateStopped:
//        case PLVVodDownloadStateStopping:{
//            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
//           cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
//        } break;
//        case PLVVodDownloadStatePreparingStart:
//        case PLVVodDownloadStateRunning:{
//            cell.progressLable.textColor = [UIColor colorWithHex:0x4A90E2];
//          cell.videoStateLable.textColor = [UIColor colorWithHex:0x4A90E2];
//        } break;
//        case PLVVodDownloadStateSuccess:{
//            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
//            cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
//        } break;
//        case PLVVodDownloadStateFailed:{
//            cell.progressLable.textColor = [UIColor redColor];
//             cell.videoStateLable.textColor = [UIColor redColor];
//        } break;
//    }
//}
//
//#pragma mark  下载视频
//-(void)ddownloadddVideos:(NSString*)vid_Str{
//      WEAKSELFS
//         [PLVVodVideo requestVideoPriorityCacheWithVid:vid_Str completion:^(PLVVodVideo *video, NSError *error) {
//             if (video.available){
//                 [weakSelf downloadVideo:video];
//             }
//         }];
//
//}
//
//#pragma mark   监听下载的状态更新UI
//-(void)listenDownload{
//
//
//    WEAKSELFS
//      PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
//
//      [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
//             dispatch_async(dispatch_get_main_queue(), ^{
//                 for (PLVVodDownloadInfo *info in downloadInfos) {
//                     if ([info.vid isEqualToString:self.polyv_uuidStr]) {
//                         weakSelf.downloadtableview.hidden =  NO;//gzz20191107
//                        weakSelf.downloadInfos = downloadInfos.mutableCopy;
//                        [weakSelf.downloadtableview reloadData];
//                     }
//                 }
//
//             });
//         }];
//}
//
//#pragma mark 下载的代理
//- (void)downloadVideo:(PLVVodVideo *)video{
//
//       PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
//       PLVVodDownloadInfo *info = [downloadManager downloadVideo:video];
//       // info.quality = 2;
//        #ifdef PLVSupportDownloadAudio
//            // 音频下载测试入口，需要音频下载功能客户，放开注释
//        [downloadManager downloadAudio:video];
//
//        #endif
//           if (info) NSLog(@"%@ - %zd 已加入下载队列", info.video.vid, info.quality);
//
//        MCLog(@"=====%zd",info.quality);
//
////      插入
//        [PLVVodDownloadManager createExtendTableWithClass:[PLVVodExtendVideoInfo class]];
//        PLVVodExtendVideoInfo *extendInfo = [PLVVodExtendVideoInfo new];
//        extendInfo.vid = self.polyv_uuidStr;
//            extendInfo.CusCatagoryName =  self.public_name;
//            extendInfo.CusCourseName = self.titleName;//课题名字
//        [PLVVodDownloadManager insertOrUpdateWithExtendInfo:extendInfo];
//
////      }
//        dispatch_async(dispatch_get_main_queue(), ^{
//            [downloadbtn setTitle:@"下载---" forState: 0];
//        });
//        isHaveDownload = @"yes";
//       [self listenDownload];
//
////    };
//}
//
//#pragma mark -- 下载完成 handle
//- (void)handleDownloadSuccess:(PLVVodDownloadInfo *)downloadInfo{
//    isHaveDownload = @"compeleteYES";
//    [rihgtStorePicBtn setTitle:@"已缓存" forState:0];
//
////    [cacheBtn setTitle:@"查看缓存" forState:0];
//    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
//     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
//    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//    [self.downloadInfos removeObject:downloadInfo];
//    [self.downloadItemCellDic removeObjectForKey:downloadInfo.identifier];
//
//    self.completeDownloadInfo = [[PLVVodDownloadManager sharedManager] requestDownloadInfoWithVid:self.polyv_uuidStr];
//
//    [self.downloadtableview reloadData];
//
//
//}
//
//- (BOOL)prefersStatusBarHidden {
//    return self.player.prefersStatusBarHidden;
//}
//- (UIStatusBarStyle)preferredStatusBarStyle {
//    return self.player.preferredStatusBarStyle;
//}
//
//
//
//
//-(void)viewWillAppear:(BOOL)animated{
//    [super viewWillAppear:YES];
//    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
//    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
//
//    if (isLeft == 0) {
//        [self getStates];
//    }
//         AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
//          delegate.allowRotation = 1;
//
//        if (isLeft == 1) {
//            [_dataMarryDetail removeAllObjects];
//            pageNum = 1;
//            [self dataRequestInterfaceDetail];
//        }
//
//
//    [theUserDefaultGcc setObject:@"yes" forKey:@"videoAdsToAbout"];
//
//
//
//}
//
//#pragma mark  已缓存 缓存中 待缓存的状态
//-(void)getStates{
//   WEAKSELFS
//    isHaveDownload = @"no";  //进来就置为 点击缓存状态
//                    dispatch_group_t group = dispatch_group_create();
//                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
//                           // 从数据库中读取已缓存视频详细信息
//                              // TODO:也可以从开发者自定义数据库中读取数据,方便扩展
//                              NSArray<PLVVodDownloadInfo *> *dbInfos = [[PLVVodDownloadManager sharedManager] requestDownloadCompleteList];
//                              NSMutableDictionary *dbCachedDics = [[NSMutableDictionary alloc] init];
//                              [dbInfos enumerateObjectsUsingBlock:^(PLVVodDownloadInfo * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
//                                  [dbCachedDics setObject:obj forKey:obj.vid];
//                                  if ([obj.vid isEqualToString:self.polyv_uuidStr]) {
//                         //              weakSelf.downloadInfos = downloadInfos.mutableCopy;
//                                        isHaveDownload = @"compeleteYES";
//                                      dispatch_async(dispatch_get_main_queue(), ^{
//                                          weakSelf.completeDownloadInfo = obj;//
//                                           [rihgtStorePicBtn setTitle:@"已缓存" forState:0];
//
//                                          coverRightView.x = SCREEN_WIDTH/3.0*2;
//                                          coverRightView.width = SCREEN_WIDTH/3.0;
//                                          scorelaebl.hidden = YES;
//                                          [rihgtStorePicBtn sizeToFit];
//                                          rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
//                                          [rihgtStorePicBtn sizeToFit];
//                                          rihgtStorePicBtn.frame = CGRectMake(SCREEN_WIDTH/3*2+(SCREEN_WIDTH/3-rihgtStorePicBtn.width)/2, rihgtStorePicBtn.y, rihgtStorePicBtn.width,44);//d
//
//
//                                          [weakSelf.downloadInfos removeAllObjects];
//                                          [weakSelf.downloadItemCellDic removeObjectForKey:obj.identifier];
//
////                                    [cacheBtn setTitle:@"查看缓存" forState:0];
//                                          NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
//                                           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
//                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                                      });
//                                     }
//
//                              }];
//                       });
//
//                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
//                      //    正在下载的
//                          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
//
//                              [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
//                                     dispatch_async(dispatch_get_main_queue(), ^{
//                                         for (PLVVodDownloadInfo *info in downloadInfos) {
//                                             if ([info.vid isEqualToString:self.polyv_uuidStr]) {
//                                               weakSelf.downloadInfos = downloadInfos.mutableCopy;
//                                                 isHaveDownload = @"yes";
////                                                 [downloadbtn setTitle:@"下载中1" forState:0];
//                                                 [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
//
////        coverRightView.frame = CGRectMake(SCREEN_WIDTH/3.0*2, coverRightView.y, SCREEN_WIDTH/3.0,44);
//                                                  coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//
//                                                 scorelaebl.hidden = YES;
//                                                 [rihgtStorePicBtn sizeToFit];
//                                                 rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
//
//                                                 [weakSelf.downloadtableview reloadData];
////                                                 [cacheBtn setTitle:@"视频缓存中" forState:0];
//                                                 NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
//                                                  [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                                             }
//                                         }
//
//                                     });
//                               }];
//                      });
//
//                    dispatch_group_notify(group, dispatch_get_main_queue(), ^{
//                        if ([isHaveDownload isEqualToString:@"no"]) {
////                            [downloadbtn setTitle:@"未下载1" forState:0];
//                             [rihgtStorePicBtn setTitle:@"缓存" forState:0];
//
//                            if ([isVideoStorestr isEqualToString:@"1"]) {
//
//                                 coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//                             scorelaebl.hidden = YES;
//                             [rihgtStorePicBtn sizeToFit];
//                             rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
////                            [cacheBtn setTitle:@"点击下载" forState:0];
//                                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
//                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//
//
//                            }else{
//                                CGFloat xx;
//                                 CGFloat widhtt;
//                                 CGFloat x3;
//                                  xx=  0;
//
//                                widhtt = SCREEN_WIDTH;
//
//                                x3 = 0;
//                                NSInteger points = [weakSelf.pointStr integerValue];
//                                if (points >0) {
//                                     scorelaebl.hidden = NO;
//
//                                      [rihgtStorePicBtn sizeToFit];
//                                      rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
//
//                                    scorelaebl.x = CGRectGetMaxX(rihgtStorePicBtn.frame);
//                                     NSString *jifenstr  = [NSString stringWithFormat:@"点击下载（%ld积分）",(long)points];
////                                     [cacheBtn setTitle:jifenstr forState:0];
//                                    NSMutableAttributedString * attriStr2 = [[NSMutableAttributedString alloc] initWithString:jifenstr];
//                                    [attriStr2 addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
//                                    [cacheBtn setAttributedTitle:attriStr2 forState:(UIControlStateNormal)];
//                                    if (points==25) {
//                                       jifenstr  = [NSString stringWithFormat:@"点击下载（限时5折,仅需%ld积分)",(long)points];
//
//                                        NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:jifenstr];
//                                         [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
//                                        [attriStr addAttribute:NSForegroundColorAttributeName value:RGB11(225, 255, 0) range:NSMakeRange(7, 1)];
//                                        [attriStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:25] range:NSMakeRange(7, 1)];
//                                        [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                                    }
//
//
//
//                                     scorelaebl.text = jifenstr;
//
//                                     coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
//                                     coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
//
//
//                                 }else{
//                                coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//
//                                  scorelaebl.hidden = YES;
//                                  [rihgtStorePicBtn sizeToFit];
//                                  rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//                                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载（限时免费）"];
//                                      [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 10)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                                 }
//
//
//                            }
//
//
//                             if (isLeft == 2) {
//                                 [weakSelf.downloadInfos removeAllObjects];
//                                 [weakSelf.downloadtableview reloadData];
//                             }
//                        }
//
//                        if ([isHaveDownload isEqualToString:@"compeleteYES"]) {
//                             [rihgtStorePicBtn setTitle:@"已缓存" forState:0];
//
//                             coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//                            scorelaebl.hidden = YES;
//                            [rihgtStorePicBtn sizeToFit];
//                            rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
//                             if (isLeft == 2) {
//                                 [weakSelf.downloadInfos removeAllObjects];
//                                 [weakSelf.downloadtableview reloadData];
//
//                             }
//
////                            [cacheBtn setTitle:@"查看缓存" forState:0];
//                            NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
//                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                                                                                                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                         }
//
//                    });
//
//
//}
//
//
//
//
//
//
//
//-(void)viewWillDisappear:(BOOL)animated{
//
//
//    [super viewWillDisappear:YES];
//
////    [self.player destroyPlayer];
//
//    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
//    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
//
//
//    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
//       delegate.allowRotation = 0;
//       if ([[UIDevice currentDevice]    respondsToSelector:@selector(setOrientation:)]) {
//           SEL selector = NSSelectorFromString(@"setOrientation:");
//           NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
//           [invocation setSelector:selector];
//           [invocation setTarget:[UIDevice currentDevice]];
//           int val = UIInterfaceOrientationPortrait;
//           [invocation setArgument:&val atIndex:2];
//           [invocation invoke];
//    }
//
//
//
//}
//
//- (void)viewDidLoad {
//    [super viewDidLoad];
//    self.view.backgroundColor = [UIColor whiteColor];
//    //    navigaTionBar
//    self.title = @"视频详情";
//    self.navigationController.navigationBar.barTintColor = GreyColor;
//    navigaTionBar
//    IOS_Frame
//    if ([self.isShouYe isEqualToString:@"yes"]) {
//
//        [self readAddRequest];
//    }
//
//    shareimaView =[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 100, 100)];
//
//
//    [shareimaView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath]] placeholderImage:[UIImage imageNamed:@"patientLogo.png"]];
//
//    [self navBarVideoDetail];
//    [self dataOpenDetail];
//     [self middleThreeBtn];
//
////
////    [self makeUIVideoDetail];
////    [self barToolVideo];
////    [self makeUiTextView];
////
//
//    [self DownFreshVideodetail];//gzz1121!
//    [self upFreshVideodetail];//gzz1121!
//
////    浏览记录 @ liulnan ; @detial 详情  isVideoStore是缓存过该视频  payVideoDown 支付积分
//    [self getSystemTimeFromServer:@"liulan"];
////     [self getSystemTimeFromServer:@"detail"];
//    [self getSystemTimeFromServer:@"isVideoStore"];
//
//
//    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(begainFullScreen) name:UIWindowDidBecomeVisibleNotification object:nil];//进入全屏
//    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(endFullScreen) name:UIWindowDidBecomeHiddenNotification object:nil];//退出全屏
//
//    [_dataMarryDetail removeAllObjects];
//    pageNum = 1;
//    [self dataRequestInterfaceDetail];
//}
//#pragma mark 显示视频
//-(void)makeplayer{
//
//    self.playerPlaceholder = [[UIView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 200)];
//    [scrollv addSubview:self.playerPlaceholder];
//    // 初始化播放器
//    PLVVodSkinPlayerController *player = [[PLVVodSkinPlayerController alloc] initWithNibName:nil bundle:nil];
//    [player addPlayerOnPlaceholderView:self.playerPlaceholder rootViewController:self];
//    player.rememberLastPosition = YES;
//    player.enableBackgroundPlayback = NO;
//    player.autoplay = NO;
//    player.reachEndHandler = ^(PLVVodPlayerViewController *player) {
//        NSLog(@"%@ finish handler.", player.video.vid);
//    };
//    self.player = player;
//
//   imageBag = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200)];
//    imageBag.image = [UIImage imageNamed:@"morenyz"];
////    NSString *urlStr = [NSString stringWithFormat:@"%@%@",ImageUrl,[_dataDic objectForKey:@"img"]];
////    [imageBag sd_setImageWithURL:[NSURL URLWithString:urlStr] placeholderImage:[UIImage imageNamed:@"morenyz"]];
//    [scrollv addSubview:imageBag];
//    NSString * freeVideoUuid = self.polyv_uuidStr;
//    if (freeVideoUuid.length>2) {
//
//        imageBag.hidden = YES;
//        self.player.autoplay = NO;
//        __weak typeof(self) weakSelf = self;
//        NSString * str = [NSString stringWithFormat:@"%@",freeVideoUuid];
//        [PLVVodVideo requestVideoWithVid:str completion:^(PLVVodVideo *video, NSError *error) {
//            if (!video.available) return;
//            weakSelf.player.video = video;
//
//            dispatch_async(dispatch_get_main_queue(), ^{
//                //            weakSelf.title = video.title;
//            });
//        }];
//    }
//
//
//}
//
//#pragma - mark  进入全屏
//-(void)begainFullScreen
//{
//    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
//    appDelegate.allowRotation = YES;
//}
//#pragma - mark 退出全屏
//-(void)endFullScreen
//{
//    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
//    appDelegate.allowRotation = NO;
//    //强制归正：
//    if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {
//        SEL selector = NSSelectorFromString(@"setOrientation:");
//        NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
//        [invocation setSelector:selector];
//        [invocation setTarget:[UIDevice currentDevice]];
//        int val =UIInterfaceOrientationPortrait;
//        [invocation setArgument:&val atIndex:2];
//        [invocation invoke];
//    }
//}
//
////下拉刷新
//-(void)DownFreshVideodetail{
//    __weak VideosDetailNewVC *puad = self;
//    [puad.videodetailTabview addHeaderWithCallback:^{
//        [puad.dataMarryDetail removeAllObjects];
//        pageNum = 1;
//        [puad dataRequestInterfaceDetail];
//        [puad.videodetailTabview headerEndRefreshing];
//    }];
//}
////上拉加载
//-(void)upFreshVideodetail{
//    __weak VideosDetailNewVC *pudb = self;
//    [pudb.videodetailTabview addFooterWithCallback:^{
//        pageNum++;
//        [pudb dataRequestInterfaceDetail];
//        [pudb.videodetailTabview footerEndRefreshing];
//    }];
//}
//
//#pragma mark  中间的三个按钮
//-(void)middleThreeBtn{
//       scrollv = [[UIScrollView alloc]init];
//       scrollv.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
//       scrollv.delegate = self;
//       scrollv.showsVerticalScrollIndicator = NO;
//       scrollv.showsHorizontalScrollIndicator = NO;
//       scrollv.contentOffset = CGPointMake(0, 0);
//       scrollv.backgroundColor = [UIColor whiteColor];// RGB(228, 228, 228);//[UIColor clearColor];
//       scrollv.contentSize = CGSizeMake(0, SCREEN_HEIGHT);
//       scrollv.scrollEnabled = NO;
//       [self.view addSubview:scrollv];
//
//
//
//    NSArray * titArr =@[@"视频简介",@"评论" ] ;//,@"缓存"];
//      UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, 200, SCREEN_WIDTH, 10) bgColor:RGB(239, 239, 239)];
//      [scrollv addSubview:lineview];
//
//      headView =[[UIView alloc]initWithFrame:CGRectMake(0, 200+10, SCREEN_WIDTH ,44)];
//      [scrollv addSubview:headView];
//
//
//      for (int i = 0; i< 3; i++) {
//          if (i<2) {
//              CGFloat width;
////              if (i == 1) {
////                   if (SCREEN_WIDTH == 320) {
////                        width= SCREEN_WIDTH/3.0-10;
////                   }else{
////                       width= SCREEN_WIDTH/3.0;
////
////                   }
////              }else{
//                  width= SCREEN_WIDTH/2.0;
////              }
//                   UIButton * bottomBtn =[UIButton buttonWithType:UIButtonTypeCustom];
//                     bottomBtn.frame =CGRectMake(SCREEN_WIDTH/2*i , 0, width, 44);
//                     [bottomBtn setTitle: titArr[i] forState:UIControlStateNormal];
//                     [bottomBtn addTarget:self action:@selector(bottomActionVideo:) forControlEvents:UIControlEventTouchUpInside];
//                     bottomBtn.tag = 1110+i;
//                     bottomBtn.titleLabel.font = SYSTEMFONT(16.0);
//                     [bottomBtn setBackgroundColor:[UIColor whiteColor]];
//                     [bottomBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
//
//                     if (bottomBtn.tag == 1110) {
//                         leftBtnVideo = bottomBtn;
//                         leftBtnVideo.tag = 1110;
//                     }else{
//                         rightBtnVideo = bottomBtn;
//                         rightBtnVideo.tag = 1111;
//                     }
//                     [headView addSubview:bottomBtn];
//
//          }else{
////              CGFloat xx;
////              CGFloat widhtt;
////              CGFloat x3;
////
////
////            if (SCREEN_WIDTH == 320) {
////                    xx=  SCREEN_WIDTH/3*i-10;
////                    widhtt = SCREEN_WIDTH/3.0+10;
////                   x3 = SCREEN_WIDTH/3.0*2-10;
////              }else{
////                     xx=  SCREEN_WIDTH/3*i;
////                     widhtt = SCREEN_WIDTH/3.0;
////                     x3 = SCREEN_WIDTH/3.0*2;
////             }
////
////
////
////              coverRightView = [UIView createViewWithFrame:CGRectMake(xx, 0, widhtt, 44) bgColor:[UIColor whiteColor]];
////              [headView addSubview:coverRightView];
////
////              rihgtStorePicBtn = [[RightImageBtnOnly alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH/3, 44)];
////              [coverRightView addSubview:rihgtStorePicBtn];
////
////              rihgtStorePicBtn.tag = 1112;
////              [rihgtStorePicBtn setTitle:@"缓存" forState:0];
////              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:0];
////              if (SCREEN_WIDTH == 320) {
////                 rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(15.0);
////
////              }else{
////                  rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(16.0);
////
////              }
////              [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];
////              rihgtStorePicBtn.backgroundColor = [UIColor whiteColor];
////              [rihgtStorePicBtn sizeToFit];
////              MCLog(@"rihgtStorePicBtn= %lf",rihgtStorePicBtn.width);
////              rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
////
////              NSString *jifenstr  = [NSString stringWithFormat:@"20积分"];
////
////              scorelaebl = [UILabel createLabelWithFrame:CGRectMake(CGRectGetMaxX(rihgtStorePicBtn.frame), 0, 60, 16) text:jifenstr titleColor:[UIColor redColor]
////                                                    textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:14.0]];
////
////              if(SCREEN_WIDTH == 320) {
////                  scorelaebl.font = SYSTEMFONT(12.0);
////                  scorelaebl.width = 50;
////                }else{
////                    scorelaebl.font = SYSTEMFONT(14.0);
////                    scorelaebl.width = 60;
////                }
////              [coverRightView addSubview:scorelaebl];
////              scorelaebl.centerY = rihgtStorePicBtn.centerY;
////              scorelaebl.layer.cornerRadius = 8.0;
////              scorelaebl.layer.masksToBounds = YES;
////              scorelaebl.layer.borderColor = [UIColor redColor].CGColor;
////              scorelaebl.layer.borderWidth = 1.0;
////
////
////             coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
////             coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
////            scorelaebl.hidden = YES;
////
////
////
////
////              UIView *bgNewAndHot = [UIView createViewWithFrame:CGRectMake(SCREEN_WIDTH/3*2,0, SCREEN_WIDTH/3.0, 44) bgColor:[UIColor clearColor]];
////              [headView addSubview:bgNewAndHot];
////              bgNewAndHot.userInteractionEnabled = YES;
////              UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(rihgtStorePicBtnClick)];
////              [bgNewAndHot addGestureRecognizer:ges];
////
//
//          }
//
//      }
//      UIView *lineALl = [UIView createViewWithFrame:CGRectMake(0, 43, SCREEN_WIDTH, 1) bgColor:[UIColor lightGrayColor]];
//      [headView addSubview:lineALl];
//
//      leftLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2, 42.9, 30, 1.4)];
//      leftLine.backgroundColor = JISECOLOR;//;//RGB(230, 230, 230);//gzz0707
//      [headView addSubview:leftLine];
//      leftLine.hidden = NO;
//
//      middleLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2+SCREEN_WIDTH/2.0, 42.9, 30,1.4)];
//      middleLine.backgroundColor = JISECOLOR;
//      [headView addSubview:middleLine];
//      middleLine.hidden = YES;
//
////      rightLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/3.0-30)/2+SCREEN_WIDTH/3.0*2.0,42.9, 30, 1.4)];
////      rightLine.backgroundColor = JISECOLOR;
////      [headView addSubview:rightLine];
////      rightLine.hidden = YES;
//
//}
//
//#pragma mark 数据的初始化
//-(void)dataOpenDetail{
//    isVideoStorestr = @"0";
//    isScore = YES;
//   indexInInfos = 0;
//   sysTimestr = @""; //gzz181225
//   isHaveDownload = @"no";
//   isLeft = 0;
//   whichTouchInt = 0;
//   self.dataMarryDetail = [NSMutableArray array];
//}
//
//
//#pragma mark 界面
//-(void)makeUIVideoDetail{
//
//
//
//    //这里是直播视频的
//    [self makeplayer];
//
////    [self middleThreeBtn];
//
//    ziScrollv = [[UIScrollView alloc]init];
////    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10);
//    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10-SafeAreaBottomHeight-45);
//
//    [scrollv addSubview:ziScrollv];
//    ziScrollv.delegate = self;
//    ziScrollv.showsVerticalScrollIndicator = NO;
//    ziScrollv.showsHorizontalScrollIndicator = NO;
//    ziScrollv.backgroundColor = [UIColor whiteColor];
//    ziScrollv.scrollEnabled = YES;
//    [self bottomActionVideo:leftBtnVideo];
//
//
//    _videodetailTabview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-CGRectGetMaxY(headView.frame)-49) style:UITableViewStylePlain];
//    _videodetailTabview.backgroundColor = [UIColor clearColor];
//    _videodetailTabview.delegate = self;
//    _videodetailTabview.dataSource = self;
//    _videodetailTabview.tableFooterView = [[UIView alloc]init];
//    _videodetailTabview.separatorStyle = UITableViewCellSeparatorStyleNone;
//    _videodetailTabview.hidden = YES;
//    [scrollv addSubview:_videodetailTabview];
//
//
//
////    self.downloadtableview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-200-50-60-40) style:(UITableViewStylePlain)];
////          self.downloadtableview.delegate = self;
////          self.downloadtableview.dataSource = self;
////          self.downloadtableview.tableFooterView = [UIView new];
////          [scrollv addSubview: self.downloadtableview];
////        self.downloadtableview.backgroundColor = [UIColor whiteColor];
////       self.downloadtableview.hidden = YES;
////       //横线
////       if ([  self.downloadtableview respondsToSelector:@selector(setSeparatorInset:)]) {
////           // 如果tableView响应了setSeparatorInset: 这个方法,我们就将tableView分割线的内边距设为0.
////           [  self.downloadtableview setSeparatorInset:UIEdgeInsetsZero];
////       }
////       if ([ self.downloadtableview respondsToSelector:@selector(setLayoutMargins:)]) {
////           // 如果tableView响应了setLayoutMargins: 这个方法,我们就将tableView分割线的间距距设为0.
////           [  self.downloadtableview setLayoutMargins:UIEdgeInsetsZero];
////       }
//
//
//
//       cacheBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
////       [cacheBtn setTitle:@"点击下载" forState:0];
//    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
//           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
//                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//       cacheBtn.backgroundColor = PATIENTJISECOLOR;
//       [self.view addSubview:cacheBtn];
////       cacheBtn.hidden = YES;
//       [cacheBtn addTarget:self action:@selector(cacheBtnClick) forControlEvents:UIControlEventTouchUpInside];
//
//
////      CGFloat xx;
////      CGFloat widhtt;
////      CGFloat x3;
////    if (SCREEN_WIDTH == 320) {
////            xx=  SCREEN_WIDTH/3*i-10;
////            widhtt = SCREEN_WIDTH/3.0+10;
////           x3 = SCREEN_WIDTH/3.0*2-10;
////      }else{
////             xx=  SCREEN_WIDTH/3*i;
////             widhtt = SCREEN_WIDTH/3.0;
////             x3 = SCREEN_WIDTH/3.0*2;
////     }
//
////    xx=  0;
////    widhtt = SCREEN_WIDTH;
////    x3 = 0;
////
////
////     bottomViewDownload = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
////     [self.view addSubview:bottomViewDownload];
////    bottomViewDownload.backgroundColor  = PATIENTJISECOLOR;
////
////
////
////      coverRightView = [UIView createViewWithFrame:CGRectMake(xx, 0, widhtt, 45) bgColor:[UIColor whiteColor]];
////      [bottomViewDownload addSubview:coverRightView];
////
////      rihgtStorePicBtn = [[RightImageBtnOnly alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH/3, 44)];
////      [coverRightView addSubview:rihgtStorePicBtn];
////
////      rihgtStorePicBtn.tag = 1112;
////      [rihgtStorePicBtn setTitle:@"缓存" forState:0];
////      [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:0];
//////      if (SCREEN_WIDTH == 320) {
//////         rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(15.0);
//////      }else{
////          rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(16.0);
////
//////      }
//////      [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];
////      rihgtStorePicBtn.backgroundColor = [UIColor whiteColor];
////      [rihgtStorePicBtn sizeToFit];
////      rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
////
////      NSString *jifenstr  = [NSString stringWithFormat:@"20积分"];
////
////      scorelaebl = [UILabel createLabelWithFrame:CGRectMake(CGRectGetMaxX(rihgtStorePicBtn.frame), 0, 60, 16) text:jifenstr titleColor:[UIColor redColor]
////                                            textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:14.0]];
////
////
////        scorelaebl.font = SYSTEMFONT(14.0);
////        scorelaebl.width = 60;
////
////      [coverRightView addSubview:scorelaebl];
////      scorelaebl.centerY = rihgtStorePicBtn.centerY;
////      scorelaebl.layer.cornerRadius = 8.0;
////      scorelaebl.layer.masksToBounds = YES;
////      scorelaebl.layer.borderColor = [UIColor redColor].CGColor;
////      scorelaebl.layer.borderWidth = 1.0;
////
////
////     coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
////     coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
////     scorelaebl.hidden = YES;
//
//
//}
//
//
//#pragma mark 点击底部缓存。。。   //gzz20200414
//-(void)cacheBtnClick{
//
//    if ([isHaveDownload isEqualToString:@"compeleteYES"] || [isHaveDownload isEqualToString:@"yes"]) {
//          [self.player pause];
////          isHaveDownload = @"no";
//
//          PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
//          vc.hidesBottomBarWhenPushed = YES;
//        if ( [isHaveDownload isEqualToString:@"compeleteYES"]) {
//            vc.typeStr = @"completeStr";
//        }else{
//            vc.typeStr = @"processingStr";
//
//        }
//          [self.navigationController pushViewController:vc animated:YES];
//
//       }else if([isHaveDownload isEqualToString:@"no"]){
//           [self getNetworkTypeNB];
//       }
//}
//
//#pragma mark  跳转到离线缓存
//-(void)beforeeDdownloadVideos{
//
//    [self.player pause];
//
//    isHaveDownload = @"no";
//    PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
//    vc.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:vc animated:YES];
//}
//
//
//
//
//
//#pragma mark  前两个按钮的点击事件
//-(void)bottomActionVideo:(UIButton *)btn{
////    [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];
//
// if (btn.tag == 1110) {
//          cacheBtn.hidden = NO;
//
//          [UIView animateWithDuration:0.4 animations:^{
//               self.downloadtableview.hidden = YES;
//              self.videodetailTabview.hidden = YES;
//
//              leftLine.hidden = NO;
//              middleLine.hidden = YES;
//              rightLine.hidden = YES;
//              isLeft = 0;
//              _videodetailTabview.hidden = YES;
//              bottomView.hidden = YES;
//              ziScrollv.hidden = NO;
//
//              [desLabel removeFromSuperview];
//              desLabel = nil;
//
//
//              desLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 15, SCREEN_WIDTH-30, 100)];
//              desLabel.backgroundColor = [UIColor whiteColor];// [UIColor purpleColor];
//              [ziScrollv addSubview:desLabel];
//              desLabel.numberOfLines = 0;
//              desLabel.lineBreakMode = NSLineBreakByWordWrapping;
//              desLabel.text = [NSString stringWithFormat:@"%@",_videoDescribeStr];
//              CGSize size = [desLabel sizeThatFits:CGSizeMake(desLabel.frame.size.width, MAXFLOAT)];
//              desLabel.frame =CGRectMake(desLabel.x , desLabel.y ,desLabel.width, size.height);
//              desLabel.font = [UIFont systemFontOfSize:14];
//              desLabel.textColor = [UIColor blackColor];
//              [desLabel sizeToFit];
//              ziScrollv.contentSize = CGSizeMake(0, CGRectGetMaxY(desLabel.frame)+10);
//              [btn setTitleColor:JISECOLOR forState:0];
//              [rightBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
//              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
//
//          }];
//
//      }else{
//          cacheBtn.hidden = YES;
//
//          [UIView animateWithDuration:0.4 animations:^{
//               isLeft = 1;
//
//              ziScrollv.hidden = YES;
//              bottomView.hidden = NO;
//              desLabel.hidden = YES;
//
//             leftLine.hidden = YES;
//             middleLine.hidden = NO;
//             rightLine.hidden = YES;
//
//
//              [btn setTitleColor:JISECOLOR forState:0];
//              [leftBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
//
//              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
//
//               _videodetailTabview.hidden = NO;
//              self.downloadtableview.hidden = YES;
//              [self.videodetailTabview reloadData];
//          }];
//
//
//
//      }
//
//}
//
//
//
//#pragma mark 获取l网络类型
//-(void)getNetworkTypeNB{
//
//
//  __weak  AFNetworkReachabilityManager *manager = [AFNetworkReachabilityManager sharedManager];
//   // 提示：要监控网络连接状态，必须要先调用单例的startMonitoring方法
//   [manager startMonitoring];
//    WEAKSELFS
//    [manager setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
//
//    if (status == AFNetworkReachabilityStatusUnknown) {
//
//          NSLog(@"未识别网络");
//        [manager stopMonitoring];
//      }
//      if (status == AFNetworkReachabilityStatusNotReachable) {
//
//          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"无网络，请查看联网情况。" confirmTitle:@"确定" handler:^{
//              MCLog(@"sure1");
//          }];
//          [manager stopMonitoring];
//          return;
////          NSLog(@"未连接网络");
//      }
//      if (status == AFNetworkReachabilityStatusReachableViaWWAN) {
//
//          NSLog(@"3G/4G网络");
//          [weakSelf gotoDownloadVideo:@"当前为移动网络，确定下载？"];
//          [manager stopMonitoring];
//      }
//      if (status == AFNetworkReachabilityStatusReachableViaWiFi) {
//
//          NSLog(@"Wifi网络");
//          [weakSelf gotoDownloadVideo:@"当前为Wifi网络，确定下载？"];
//          [manager stopMonitoring];
//
//      }
//
//    }];
//
//
//
//
//}
//
//#pragma mark 提示下载
//-(void)gotoDownloadVideo:(NSString *)typestr{
//
//  UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:typestr preferredStyle:(UIAlertControllerStyleAlert)];
//  UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
//
//  }];
//
//  [alertController addAction:cancelAction];
//  WEAKSELFS
////    gzz20200414
//  UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
//      [weakSelf showNeedHowmuchScore]; //gzz20200507
////      [weakSelf getSystemTimeFromServer:@"getwalfare"];
//  }];
//  [alertController addAction:sureAction];
//  [self presentViewController:alertController animated:YES completion:nil];
//
//}
//
//#pragma mark  显示需要多少积分 gzz20200414
//-(void)showNeedHowmuchScore{
//
//        if ([isVideoStorestr isEqualToString:@"1"]) {// 下载过 无需重复支付
//            if (![DicRemove isBlankString:self.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
//                [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
////                [cacheBtn setTitle:@"视频缓存中" forState:0];
//                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
//                     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];
//              [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                 coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//               scorelaebl.hidden = YES;
//               [rihgtStorePicBtn sizeToFit];
//               rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
//
//                [self ddownloadddVideos:self.polyv_uuidStr];
//            }
//    }else{
//
//
//        NSString *showContent  = [NSString stringWithFormat:@"该视频需%@积分兑换，若删除，可以再次免费缓存",self.pointStr];
//
//           UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"下载提示" message:showContent preferredStyle:(UIAlertControllerStyleAlert)];
//           UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
//
//           }];
//
//           [alertController addAction:cancelAction];
//           WEAKSELFS
//           UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
////               gzz20200414
//               [weakSelf getSystemTimeFromServer:@"payVideoDown"];
//
//           }];
//           [alertController addAction:sureAction];
//           [self presentViewController:alertController animated:YES completion:nil];
//
//    }
//
//}
//
////我的福利-查询福利剩余次数
////地址：expertAPI/getWelfareNum //gzz20200414
////参数type (1视频2课件3精品4万方5U盘)
//
////我的福利-使用福利操作
////地址：expertAPI/useWelfareNum
////参数type (1视频2课件3精品4万方5U盘)
//
//#pragma mark getWelfareNum 查询福利剩余次数
//-(void)getWelfareNumRequest{
//      [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        NSString *Strurl = [NSString stringWithFormat:@"%@getWelfareNum",expertAPI];
//        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//        if (sysTimestr.length>2) {
//            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//        }else{
//
//            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//        }
//        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//        dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];
//
//
//        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
//
//        MCLog(@"=====%@",dicM);
//        WEAKSELFS
//        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//            NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
//            if ([code isEqualToString:@"1"]) {
//
//                NSString *num = [NSString stringWithFormat:@"%@",data[@"WelfareNum"]];
//                if (![DicRemove isBlankString:num]) {
//                    NSInteger numCount = [num integerValue];
//                    if (numCount >0) {
//                        [weakSelf getSystemTimeFromServer:@"usewalfare"];
//                    }else{
////                        积分那里
//                    }
//                }
//
//            }else{
//
//                [self showHint:data[@"message"]];
//            }
//
//           [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        } failure:^(NSError *error) {
//            [self showHint:@"请求失败"];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//        }];
//
//
//}
//
//
//#pragma mark useWelfareNum 使用福利操作
//-(void)useWelfareNumRequest{
//
//         [MBProgressHUD hideHUDForView:self.view animated:YES];
//            NSString *Strurl = [NSString stringWithFormat:@"%@useWelfareNum",expertAPI];
//            NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//            dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//            NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//            dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//            NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//            if (sysTimestr.length>2) {
//                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//            }else{
//
//                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//            }
//            dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//            dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];
//
//
//            NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
//
//            MCLog(@"=====%@",dicM);
//            WEAKSELFS
//            [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//                NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
//                if ([code isEqualToString:@"1"]) {
////                    使用成功 之后的操作 gzz20200429
////              isVideoStorestr =   @"1";
////                 if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
////                      [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
////        //             [cacheBtn setTitle:@"视频缓存中" forState:0];
////                     NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"缓存中"];
////                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
////                    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
////                      coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
////                      scorelaebl.hidden = YES;
////                      [rihgtStorePicBtn sizeToFit];
////                      rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
////                 [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
////
//
//                }else{
//
//                    [self showHint:data[@"message"]];
//                }
//
//               [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//            } failure:^(NSError *error) {
//                [self showHint:@"请求失败"];
//                [MBProgressHUD hideHUDForView:self.view animated:YES];
//            }];
//}
//
//
//
//
//
//
//#pragma  mark tableview
//-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
//    if (isLeft == 1) {
//
//    if (_dataMarryDetail.count>0) {
//
//        NSDictionary *cellDic = [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexPath.row]];
//
//        NSString *str = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
//
//
//        NSString *strUrl = [str stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
//        //            strUrl = [NSString stringWithFormat:@"%@:%@",[cellDic objectForKey:@"realname"],strUrl];
//        NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
//
//
//        //gzz170622
//        CGSize sizee = [self checTheStringWithHight:strUrla font:14 float:15];
//        CGFloat heigith = sizee.height +10 +40 +10 +8+3+4;
//
//        return heigith;
//
//
//    }else{
//
//        return 0;
//    }
//       }else if (isLeft == 2){
//           return 95;
//
//       }else{
//           return 0.01;
//       }
//
//}
//-(CGSize)checTheStringWithHight:(NSString *)theStr font:(float)font  float:(CGFloat)floatt
//{
//
//    CGFloat xxx;
//    xxx  = floatt;
//    //gzz1026
//    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(SCREEN_WIDTH-xxx*2, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:font]} context:nil].size;
//    return  sixx;
//
//}
//
//- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
//    if (isLeft == 1) {
//    return _dataMarryDetail.count;
//    }else if (isLeft == 2){
//
//
//        if ([isHaveDownload isEqualToString:@"yes"]) {
//            for (int i=0; i<self.downloadInfos.count; i++) {
//                       PLVVodDownloadInfo *info = self.downloadInfos[i];
//                       if ([info.vid isEqualToString:self.polyv_uuidStr]) {
//                             indexInInfos = i;
//                             return 1;
//                       }
//                   }
//         return 0;
//        }else if ([isHaveDownload isEqualToString:@"compeleteYES"])
//            return 1;
//         }
//      return 0;
//
//}
//
//- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
//
//    if (isLeft == 1) {
//         static NSString *strint = @"cellVideoDetail";
//            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:strint];
//            if (!cell) {
//                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strint];
//
//            }else{//gzz170407
//                for (UIView *view in cell.contentView.subviews) {
//                    [view removeFromSuperview];
//                }
//            }
//            cell.selectionStyle = UITableViewCellSelectionStyleNone;
//            cell.backgroundColor = [UIColor whiteColor];
//        //    cell.textLabel.text = @"ddddd";
//            if (_dataMarryDetail.count>0) {
//
//                [cell.contentView addSubview:[self addViewss:indexPath.row]];
//            }
//
//            return cell;
//    }else if (isLeft == 2){
//        if ([isHaveDownload isEqualToString:@"yes"]) {
//            PLVVodDownloadInfo *info = self.downloadInfos[indexInInfos];
//              VideoNewDetailDownCompeleteCell *cell = [VideoNewDetailDownCompeleteCell cellWithTableView:tableView];
//
//              cell.selectionStyle = UITableViewCellSelectionStyleNone;
//
//            //        查询
//                    NSString *vid = self.polyv_uuidStr;
//                    PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:vid];
//                            cell.indexpaths = indexPath;
//                             cell.dataDic = [NSDictionary dictionary];
//                              cell.titleLable.text = inf0.CusCourseName;//info.title;
//                                 NSInteger filesize = info.filesize;
//                                 cell.videoSizeLabel.text = [self.class formatFilesize:filesize];
//                                 cell.videoDurationTime.text = [self.class timeFormatStringWithTime:info.duration];
//                                 cell.nameLable.text =  inf0.CusCatagoryName;;
//                                 cell.backgroundColor = self.downloadtableview.backgroundColor;
//                              WEAKSELFS
//                             cell.deleteComDownloadBlock = ^(NSInteger rowindex) {
//                                 [weakSelf deleDownload:indexInInfos];
//
//                             };
//            return cell;
////                      PLVVodDownloadInfo *info = self.downloadInfos[indexInInfos];
////                       videoNewDetailDownLoadCell *cell =  self.downloadItemCellDic[info.identifier];
////                               cell.selectionStyle = UITableViewCellSelectionStyleNone;
////
////                               PLVVodVideo *video = info.video;
////               //        查询
////                       NSString *vid = self.polyv_uuidStr;
////               //      + (PLVVodExtendVideoInfo *)getExtendInfoWithVid:(NSString *)vid;
////                       PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:vid];
////               //        MCLog(@"=====%@",inf0.CusCatagoryName);
////
////
////
////                               cell.indexpaths = indexPath;
////                                cell.dataDic = [NSDictionary dictionary];
////                               if (video){
////                                   float receivedSize = info.progress * info.filesize;
////                                   if (receivedSize >= info.filesize){
////                                       receivedSize = info.filesize;
////                                   }
////                                   NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
////                                   cell.progressLable.text = downloadProgressStr;
////
////                                   if (info.fileType == PLVDownloadFileTypeAudio){
////                                       cell.titleLable.text = [NSString stringWithFormat:@"[音频] %@", video.title];
////                                   }
////                                   else{
////                                       cell.titleLable.text = inf0.CusCourseName;//video.title;
////                                   }
////                               }
////                               else{
////                                   // 取info数据@"最多两行的标题";// @"进度。。。";//
////                                   cell.titleLable.text = inf0.CusCourseName;//info.title;
////
////                                   float receivedSize = info.progress * info.filesize;
////                                   if (receivedSize >= info.filesize){
////                                       receivedSize = info.filesize;
////                                   }
////                                   NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
////                                   cell.progressLable.text = downloadProgressStr;
////
////                               }
////                       cell.nameLable.text  =  inf0.CusCatagoryName;
////                       cell.downloadStateImageview.image = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
////
////                           WEAKSELFS
////                               cell.typeDownloadBlock = ^(NSInteger rowindex) {
////                                   [weakSelf showType:indexInInfos];
////                               };
////                               cell.deleteDownloadBlock = ^(NSInteger rowindex) {
////                                   [weakSelf deleDownload:indexInInfos];
////
////                               };
////                    return cell;
//        }else if ([isHaveDownload isEqualToString:@"compeleteYES"]){
//                VideoNewDetailDownCompeleteCell *cell = [VideoNewDetailDownCompeleteCell cellWithTableView:tableView];
//
//                   cell.dataDic = [NSDictionary dictionary];
//            PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:self.completeDownloadInfo.vid];
//
//
//               cell.titleLable.text =  inf0.CusCourseName;;//self.completeDownloadInfo.title;
//
//
//                   NSInteger filesize = self.completeDownloadInfo.filesize;
//                   cell.videoSizeLabel.text = [self.class formatFilesizeaa:filesize];
//                   cell.videoDurationTime.text = [self.class timeFormatStringWithTime:self.completeDownloadInfo.duration];
//                   cell.nameLable.text =  inf0.CusCatagoryName;;
//                   cell.backgroundColor = self.downloadtableview.backgroundColor;
//                 WEAKSELFS
//                cell.deleteComDownloadBlock = ^(NSInteger rowindex) {
//                    [weakSelf delecomDownload:indexInInfos];
//
//                };
//                   return cell;
//
//         }
//
//
//    }
//    return nil;
//
//}
//
////pragma mark 横线到最左边2
//- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath{
//    if (tableView == self.downloadtableview) {
//
//        if ([cell respondsToSelector:@selector(setSeparatorInset:)])
//        {
//            [cell setSeparatorInset:UIEdgeInsetsZero];//UIEdgeInsetsMake(0, 0, 0, 15)
//        }
//        if ([cell respondsToSelector:@selector(setLayoutMargins:)])
//        {
//            [cell setLayoutMargins:UIEdgeInsetsZero];
//        }
//    }
//
//}
//#pragma mark 自定义cell
//-(UIView *)addViewss:(NSInteger)indexx{
//
//    UIView *vieww =[[UIView alloc]init];
//    vieww.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80);
//
//
//
//    NSDictionary *cellDic= [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexx]];
//    NSString  *imgesss=[cellDic objectForKey:@"photo"];
//    NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageUrl,imgesss];
//    UIImageView *imagevview1=[[UIImageView alloc]initWithFrame:CGRectMake(15, 10,40,40)];
//    imagevview1.layer.cornerRadius = 20;
//    imagevview1.layer.masksToBounds = YES;
//    [imagevview1 sd_setImageWithURL:[NSURL URLWithString:imagename] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
//    [vieww addSubview:imagevview1];
//
//
//    UILabel* nameLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10,10,100, 18)];
//    [vieww addSubview:nameLabel];
//    nameLabel.textColor = RGB11(146, 60, 53);
//    NSString *realNamee = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"realname"]];
//    //    realNamee  = [realNamee stringByReplacingCharactersInRange:NSMakeRange(1, realNamee.length-1) withString:@"**"];
//    nameLabel.text = realNamee;
//    nameLabel.font = SYSTEMFONT(16);
//    nameLabel.textAlignment = NSTextAlignmentLeft;
//    [nameLabel sizeToFit];
//
//
//    UILabel* dateLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(nameLabel.frame)+5,150, 18)];
//    if (!nameLabel || nameLabel.text.length <= 0) {
//        dateLabel.frame = CGRectMake(dateLabel.x, 31, dateLabel.width, dateLabel.height);
//    }
//    [vieww addSubview:dateLabel];
//    NSString *dateStr = [cellDic objectForKey:@"create_date"];
//    dateStr = [dateStr substringToIndex:16];
//    dateStr = [dateStr substringWithRange:NSMakeRange(5, 11)];
//    dateLabel.text = dateStr;
//    dateLabel.font = SYSTEMFONT(14);
//    dateLabel.textColor = [UIColor lightGrayColor];
//    dateLabel.textAlignment = NSTextAlignmentLeft;
//
//
//    //    Dlpontlerexple *dlp = [Dlpontlerexple shareIndence];
//    NSString *zijiUUId = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
//    NSString *getUuid = [cellDic objectForKey:@"expert_uuid"];
//    UILabel *replyLabel = [[UILabel alloc]init];
//    UIImageView *DeleteImage= [[UIImageView alloc]init];
//    replyLabel.userInteractionEnabled = YES;
//    DeleteImage.userInteractionEnabled = YES;
//    if ([zijiUUId isEqualToString:getUuid]) {
//        //说明是删除
//        DeleteImage.frame = CGRectMake(kMainScreenWidth-35, 10, 20, 20);
//        DeleteImage.centerYy = nameLabel.centerYy;
//        DeleteImage.image = [UIImage imageNamed:@"delet_case"];
//        [vieww addSubview:DeleteImage];
//
//        UIImageView *coverImage = [[UIImageView alloc]init];
//        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
//        [vieww addSubview:coverImage];
//        coverImage.userInteractionEnabled = YES;
//        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(imageTouchVideo:)];
//        ges.cancelsTouchesInView = NO;
//        [coverImage addGestureRecognizer:ges];
//        UIView *singleTapView = [ges view];
//        singleTapView.tag = 8011+indexx+2+1;
//
//    }else{
//        //说明是回复
//        //        replyLabel.frame = CGRectMake(kMainScreenWidth-50, 10, 35, 20);
//        //        replyLabel.text = @"回复";
//        //        replyLabel.textAlignment = NSTextAlignmentRight;
//        //        replyLabel.textColor = [UIColor blackColor];
//        //        replyLabel.font = SYSTEMFONT(16);
//        replyLabel.frame = CGRectMake(SCREEN_WIDTH-65, 10, 50, 25);
//        //        replyLabel.centerY = nameLabel.centerY;
//        replyLabel.text = @"回复";
//        replyLabel.textAlignment = NSTextAlignmentCenter;
//        replyLabel.layer.cornerRadius = 10;
//        replyLabel.layer.borderColor = RGB11(146, 60, 53).CGColor;
//        replyLabel.layer.borderWidth = 1;
//        replyLabel.layer.masksToBounds = YES;
//        replyLabel.textColor = RGB11(102, 102, 102);
//        replyLabel.font = [UIFont systemFontOfSize:16.0];
//        [vieww addSubview:replyLabel];
//
//        UIImageView *coverImage = [[UIImageView alloc]init];
//        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
//        [vieww addSubview:coverImage];
//        coverImage.userInteractionEnabled = YES;
//
//
//        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(replyTouchVideo:)];
//        ges.cancelsTouchesInView = NO;
//        [coverImage addGestureRecognizer:ges];
//
//        UIView *singleTapView = [ges view];
//        singleTapView.tag = 8011+indexx+2+1;
//    }
//
//
//
//    UILabel* commentLabel = [[UILabel alloc] initWithFrame: CGRectMake(15,CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, 32)];
//    [vieww addSubview:commentLabel];
//
//
//    commentLabel.numberOfLines = 0;
//    commentLabel.lineBreakMode = NSLineBreakByTruncatingTail;// NSLineBreakByWordWrapping;
//
//    NSMutableString * mulStr = [cellDic objectForKey:@"comment"];
//    NSRange range;
//    NSRange range1;
//
//    NSMutableAttributedString *str=[[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]]];
//
//    if ([mulStr hasPrefix:@"回复"]) {
//
//        range = [mulStr rangeOfString:@"："];
//
//
//
//        if (range.location != NSNotFound) {
//            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(0, 2)];
//
//            [str addAttribute:NSForegroundColorAttributeName value:RGB11(146, 60, 53) range:NSMakeRange(2, range.location-2)];
//
//            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range.location+1, str.length-range.location-1)];
//            commentLabel.attributedText =  str;
//            commentLabel.font = [UIFont systemFontOfSize:14.0];
//            commentLabel.attributedText =  str;
//            commentLabel.textColor = QGreyColor;
//
//        }else{
//
//            NSLog(@"没找到");
//            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
//            commentLabel.font = [UIFont systemFontOfSize:14.0];
//            commentLabel.textColor = QGreyColor;
//
//
//        }
//
//    }else{
//
//        //        range1 = [mulStr rangeOfString:@"||"];
//        //        if (range1.location != NSNotFound) {
//        //
//        //            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
//        //            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
//        //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
//        //            commentLabel.attributedText = str;
//        //            commentLabel.font = [UIFont systemFontOfSize:14.0];
//
//
//        range1 = [mulStr rangeOfString:@"||"];
//        if (range1.location != NSNotFound) {
//
//            //            NSLog(@"%ld  %ld",range.location,range.length);
//            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
//            [str addAttribute:NSForegroundColorAttributeName value:QGreyColor range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
//            //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
//
//
//            NSArray *arr=[mulStr componentsSeparatedByString:@"||"];
//
//            NSInteger m;
//            m=0;
//
//            for(int i=0;i<[arr count]-1;i++)
//            {
//                m=m+[arr[i] length];
//                [str addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(m, 2)];
//                m=m+2;
//            }
//            commentLabel.font = [UIFont systemFontOfSize:14.0];
//            commentLabel.attributedText = str;
//            commentLabel.textColor = QGreyColor;;
//
//        }else{
//
//            NSLog(@"没找到");
//            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
//            commentLabel.font = [UIFont systemFontOfSize:14.0];
//            commentLabel.textColor = QGreyColor;;
//
//
//        }
//
//    }
//
//
//    //    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
//    //    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, size.height);
//    //    [commentLabel sizeToFit];
//    //    commentLabel.backgroundColor = [UIColor clearColor];
//
//    NSString *strUrl = [commentLabel.text stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
//
//
//    //    strUrl = [NSString stringWithFormat:@" %@:%@",[cellDic objectForKey:@"realname"],strUrl];
//    NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
//    commentLabel.text = strUrla;
//
//
//    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
//    //    commentLabel.frame =CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-10-40-10-10, size.height+8);
//    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-30, size.height+8);
//
//
//    [commentLabel sizeToFit];
//    commentLabel.backgroundColor = [UIColor clearColor];
//
//    //第一条评论变色
//    NSMutableAttributedString *str1 =[[NSMutableAttributedString alloc]initWithString:strUrla];
//    NSString *string ;
//    NSRange range3 = [commentLabel.text rangeOfString:@"\n\n"];//匹配得到的下标
//
//    if (range3.location != NSNotFound) {
//        NSLog(@"找到了@“zhu”这个字符串！");
//        NSLog(@"rang:%@",NSStringFromRange(range3));
//        string  = [commentLabel.text substringWithRange:range3];//截取范围类的字符串
//        NSLog(@"截取的值为：%@",string);
//        [str1 addAttribute:NSForegroundColorAttributeName value:JISECOLOR range:NSMakeRange(0, range3.location)];
//        commentLabel.attributedText =  str1;
//    }
//    else{
//        NSLog(@"没找到！");
//        commentLabel.textColor = QGreyColor;
//    }
//
//
//
//
//
//
//
//    //背景
//    UIView *bgCommentView = [[UIView alloc]init];
//    bgCommentView.frame = CGRectMake(commentLabel.x-4, commentLabel.y-2, SCREEN_WIDTH-10-10-6, commentLabel.height+4);
//    bgCommentView.backgroundColor = RGB11(241, 245, 244);
//    bgCommentView.layer.cornerRadius = 3;
//    bgCommentView.layer.masksToBounds = YES;
//
//    [vieww insertSubview:bgCommentView belowSubview:commentLabel];
//
//
//    UIView *lineview = [[UIView alloc]init];
//    lineview.frame = CGRectMake(0, CGRectGetMaxY(commentLabel.frame)+9.5, kMainScreenWidth, 0.5);
//    lineview.backgroundColor = RGB11(188, 188, 188);
//    [vieww addSubview:lineview];
//    vieww.frame = CGRectMake(vieww.x, vieww.y, vieww.width, CGRectGetMaxY(commentLabel.frame)+10);
//
//    return vieww;
//}
//#pragma mark tableview结束
//#pragma mark 手势事件  删除评论 自己的评论以及回复别人的
//-(void)imageTouchVideo:(UITapGestureRecognizer *)ges{
//
//    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
//    whichTouchInt = [singleTap view].tag - 8011-2-1;
//    UIAlertView *delAlert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"确定要删除评论？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
//    [delAlert show];
//
//}
//
//#pragma mark 手势事件 回复手势
//-(void)replyTouchVideo:(UITapGestureRecognizer *)ges{
//
//    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
//    whichTouchInt = [singleTap view].tag - 8011-2-1;
//    ReplyActivityController *rep = [ReplyActivityController  new];
//    rep.hidesBottomBarWhenPushed = YES;
//    NSString *nameStr = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"realname"];
//    //    nameStr  = [nameStr stringByReplacingCharactersInRange:NSMakeRange(1, nameStr.length-1) withString:@"**"];
//    NSString *commentStr = _videoCommentUuid;
//    rep.commentStr = commentStr;
//    rep.nameStr = nameStr;
//    rep.isVideoStr = @"yes";
//    rep.replyContent = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment"];
//    [self.navigationController pushViewController:rep animated:YES];
//
//}
//#pragma mark 底部的评论按钮
//-(void)barToolVideo{
//
//    bottomView = [[UIView alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height-49-SafeAreaBottomHeight, self.view.frame.size.width, 49)];
//    bottomView.backgroundColor = [UIColor whiteColor];//RGB(180, 170, 179);//;[UIColor whiteColor];
//    bottomView.hidden = YES;
//    [self.view addSubview:bottomView];
//
//    fideld = [[UITextField alloc]init];
//    fideld.frame = CGRectMake(10, 4.5, SCREEN_WIDTH-85, 40);
//    fideld.delegate = self;
//    fideld.placeholder = @"我也说一句";
//    fideld.borderStyle = UITextBorderStyleRoundedRect;
//    fideld.backgroundColor = [UIColor whiteColor];
//    [bottomView addSubview:fideld];
//
//
//    commitBtn =[UIButton new];
//    [bottomView addSubview:commitBtn];
//    commitBtn.frame = CGRectMake(kMainScreenWidth-65, 10, 55, 40);
//    commitBtn.centerYy = fideld.centerYy;
//    commitBtn.backgroundColor = RGB11(146, 60, 53);
//    commitBtn.layer.cornerRadius = 5 ;
//    commitBtn.layer.masksToBounds = YES;
//    [commitBtn setTitle:@"发送" forState:0];
//    [commitBtn setTitleColor:[UIColor whiteColor] forState:0];
//    [commitBtn addTarget:self action:@selector(commitAction:) forControlEvents:UIControlEventTouchUpInside];//gzz0811
//
//}
//
//#pragma mark textfield  keyBoard的收起弹出
//- (void)keyboardWillShow:(NSNotification *)notification {
//
//    //获取通知传递过来的信息
//    NSDictionary* info = [notification userInfo];
//    //获取键盘的size
//    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
//    //得到UIEdgeInsets
//    //    UIEdgeInsets contentInsets = UIEdgeInsetsMake(0.0, 0.0, kbSize.height, 0.0);
//
//
//    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);
//    //    if (DEVICE_IS_IPHONEX) {
//    //
//    //        smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);
//    //    }
//
//}
//
//- (void)keyboardWillHide:(NSNotification *)notification {
//
//    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-160, SCREEN_WIDTH, 160);
//
//
//}
//
//- (void)textFieldDidBeginEditing:(UITextField *)textField{
//    [textField becomeFirstResponder];
//}
//
//- (BOOL)textFieldShouldReturn:(UITextField *)textField
//{
//    [textField resignFirstResponder];
//
//    return YES;
//}
//-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
//
//    bagView.hidden = NO;
//    smallView.hidden = NO;
//    return NO;
//}
//
////创建一个半透明的view覆盖页面
//-(void)makeUiTextView{
//
//    bagView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, [[UIScreen mainScreen] bounds].size.height)];
//    bagView.backgroundColor = [UIColor blackColor];
//    bagView.alpha = 0.7;
//    bagView.hidden = YES;
//    [self.view addSubview:bagView];
//
//    smallView = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-160-SafeAreaBottomHeight, SCREEN_WIDTH, 160)];
//    smallView.backgroundColor = [UIColor colorWithRed:223/255.0 green:224/255.0 blue:225/255.0 alpha:1.0];
//    smallView.hidden = YES;
//    [self.view addSubview:smallView];
//
//    cancleBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 50, 30)];
//    [cancleBtn setTitle:@"取消" forState:(UIControlStateNormal)];
//    [cancleBtn setTitleColor:[UIColor lightGrayColor] forState:(UIControlStateNormal)];
//    [cancleBtn addTarget:self action:@selector(hideBagView) forControlEvents:(UIControlEventTouchUpInside)];
//    [smallView addSubview:cancleBtn];
//
//    enSureBtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-50, 0, 50, 30)];
//    [enSureBtn setTitle:@"确定" forState:(UIControlStateNormal)];
//    //    [enSureBtn setTitleColor:[UIColor colorWithRed:146/255.0 green:60/255.0 blue:53/255.0 alpha:1.0] forState:(UIControlStateNormal)];
//    [enSureBtn setTitleColor:RGB11(146, 60, 53) forState:(UIControlStateNormal)];
//
//
//    [enSureBtn addTarget:self action:@selector(hideBagViewAnd) forControlEvents:(UIControlEventTouchUpInside)];
//    [smallView addSubview:enSureBtn];
//
//    showLB = [[UILabel alloc]initWithFrame:CGRectMake((SCREEN_WIDTH-60)/2, 0, 60, 30)];
//    showLB.text = @"写评论";
//    [smallView addSubview:showLB];
//
//    textView = [[UITextView alloc]initWithFrame:CGRectMake(20, 35, SCREEN_WIDTH-40, 115)];
//    textView.backgroundColor = [UIColor whiteColor];
//    textView.font = [UIFont systemFontOfSize:16.0];
//
//    [smallView addSubview:textView];
//
//}
//-(void)hideBagViewAnd{
//
//    bagView.hidden = YES;
//    smallView.hidden = YES;
//    fideld.text = textView.text;
//    [textView resignFirstResponder];
//}
//-(void)hideBagView{
//
//    bagView.hidden = YES;
//    smallView.hidden = YES;
//    fideld.text = @"";
//    [textView resignFirstResponder];
//}
//#pragma mark  发送  提交按钮点击
//-(void)commitAction:(UIButton *)btn{
//
//    [fideld resignFirstResponder];
//    //    MCLog(@"commit click  %@",fideld.text);
//    comContent = fideld.text;
//    if (comContent.length <=0 ||[comContent isEqualToString:@"(null)"] ||[comContent isEqualToString:@"<null>"]) {
//        [self showHint:@"请输入评论内容"];
//        return;
//    }
//    [self addCommentRequestVideo];
//    [fideld setText:@""];//清空里面的内容
//}
//#pragma mark 收藏的按钮
//-(void)storeClick{
//
//    //先讲之前的收藏隐藏起来，做个分享功能测试
//    if ([_isCollection isEqualToString:@"0"]) {
//        [self storeRequestVideo];
//    }else if([_isCollection isEqualToString:@"1"]){
//
//        [self undoStoreRequestVideo];
//
//    }else{
//
//    }
//}
//
//#pragma mark 新友盟分享
//- (void)shareAction
//{
//
//    NSString *descr = _videoDescribeStr;
//    NSString *title =[NSString stringWithFormat:@"%@",self.titleName];
//
//   //    gzz20200330
////    NSString *weburl = [NSString stringWithFormat:@"%@%@",ImageUrl,_videoPath];
//
////    NSString *weburl = [NSString stringWithFormat:@"%@%@",videodetailURL,_videoCommentUuid];
//
//    NSString *weburl = [NSString stringWithFormat:@"%@%@&expertshare=videoshare",videodetailURL,_videoCommentUuid];
//
//    NSString *imageUrl = [NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath];
//    NSLog(@"分享出去的链接%@",weburl);
//    NSDictionary *dic =[[NSDictionary alloc]init];
//    if ([DicRemove isBlankString:self.contentID]) {
//
//          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl};
//
//    }else{
//
//          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl,@"contentID":self.contentID};
//    }
//    UmengEnclosed *umeng = [UmengEnclosed sharedUmengEnclosed];
//    [umeng customWebShareWithVC:self SocialType:SType_sina_wx_qq shareType:ShareWebPages webData:dic];
//}
//
//#pragma mark  read接口
//-(void)readAddRequest{
//
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//
//    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
//    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
//    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
//    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
//    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
//    dicer[@"news_article_uuid"] = _videoCommentUuid;
//    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//
//        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([codee isEqualToString:@"1"]) {
//            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
//            self.isCollection = Collection;
//            if ([_isCollection isEqualToString:@"0"]) {
//                //        [rightItem setBackgroundColor:[UIColor redColor]];
//                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
//                right1.image = [UIImage imageNamed:@"circollec2@2x"];
//            }else{
//                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
//                right1.image = [UIImage imageNamed:@"circollec1@2x"];
//
//            }
//
//        }else{
//
//            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
//
//        }
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//    }];
//
//}
//
//#pragma mark 收藏视频接口
//-(void)storeRequestVideo{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//    NSString *Srurl = [NSString stringWithFormat:@"%@collection",IMaUrl];
//    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
//    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
//
//    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
//    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
//    dicm[@"title"] = [NSString stringWithFormat:@"%@",_titleName];
//    dicm[@"path"] = [NSString stringWithFormat:@"%@",_videoPath];
//    dicm[@"readnum"] = [NSString stringWithFormat:@"%@",_readnum];
//    //    dicm[@"readnum"] = @"300";
//    dicm[@"imgpath"] = [NSString stringWithFormat:@"%@",_imagePath];
//    dicm[@"public_name"] = [NSString stringWithFormat:@"%@",_public_name];
//    dicm[@"type"] = @"5";
//    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([coder isEqualToString:@"1"]) {
//            //            [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
//
//            //             right1.image = [UIImage imageNamed:@"circollec1@2x"];
//
//            //             [searchBtn setBackgroundImage: [UIImage imageNamed:@"circollec1@2x"] forState:UIControlStateNormal];
//            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
//
//            //            [rightItem setBackgroundColor:[UIColor blueColor]];
//            _isCollection = [NSString stringWithFormat:@"%d",1];
//
//            [self showHint:@"收藏成功"];
//
//
//        }else{
//
//            [self showHint:[dic  objectForKey:@"message"]];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//        }
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//
//        NSLog(@"%@",error);
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    }];
//}
//#pragma mark 取消收藏视频接口
//-(void)undoStoreRequestVideo{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//    NSString *Srurl = [NSString stringWithFormat:@"%@discollection",IMaUrl];
//    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
//    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
//
//    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
//    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
//    dicm[@"type"] = @"5";
//    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([coder isEqualToString:@"1"]) {
//            //            [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
//
//            //            right1.image = [UIImage imageNamed:@"circollec2@2x"];
//            //             [searchBtn setBackgroundImage: [UIImage imageNamed:@"circollec2@2x"] forState:UIControlStateNormal];
//            storeImg.image = [UIImage imageNamed:@"circollec2@2x"];
//            //            [rightItem setBackgroundColor:[UIColor redColor]];
//            _isCollection = [NSString stringWithFormat:@"%d",0];
//
//            if ([self.isStore isEqualToString:@"yes"]) {
//
//            }else{
//
//                GDXZLog(@"那就是不掉取block");
//            }
//
//            [self showHint:@"取消收藏成功"];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        }else{
//
//            [self showHint:[dic  objectForKey:@"message"]];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//        }
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    }];
//}
//#pragma  接口添加评论
//-(void)addCommentRequestVideo{
//
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//    NSString *Srurl = [NSString stringWithFormat:@"%@addComment",IMAURLAPP];
//    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
//    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
//
//    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
//    dicm[@"article_uuid"]= [NSString stringWithFormat:@"%@",_videoCommentUuid];
//    dicm[@"comment"] =[NSString stringWithFormat:@"%@",comContent];
//    dicm[@"type"] = @"8";
//    pageNum = 1;//gzz1121
//    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];//gzz1121!
//    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([coder isEqualToString:@"1"]) {
//
//            NSMutableArray * arr = [dic objectForKey:@"data"];
//            if (arr.count>0) {
//                [_dataMarryDetail  removeAllObjects];
//
//                [_dataMarryDetail addObjectsFromArray:arr];
//
//                [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//                [_videodetailTabview reloadData];
//                textView.text = @"";//gzz1025
//                [self showHint:@"发表评论成功"];
//
//            }
//
//        }else{
//
//            [self showHint:[dic  objectForKey:@"message"]];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//        }
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    }];
//}
//#pragma mark 视频评论列表的接口
//-(void)dataRequestInterfaceDetail{
//
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//    NSString *Srurl = [NSString stringWithFormat:@"%@commentList",IMAURLAPP];//待gzz1108
//
//    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
//    dicm[@"uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
//    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];
//    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([coder isEqualToString:@"1"]) {
//
//            NSMutableArray * arr = [dic objectForKey:@"data"];
//            if (arr.count>0) {
//
//                [_dataMarryDetail addObjectsFromArray:arr];
//                [_videodetailTabview reloadData];
//            }else{
//                [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//                [_videodetailTabview reloadData];
//            }
//
//        }else{
//            [self showHint:[dic  objectForKey:@"message"]];
//        }
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    }];
//
//
//
//}
//- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
//    if (buttonIndex == 1) {
//        [self delelPinglunVideo];
//    }else{
//
//        //        MCLog(@"取消了");
//    }
//
//}
//#pragma mark  删除评论接口
//-(void)delelPinglunVideo{
//
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//    NSString *Srurl = [NSString stringWithFormat:@"%@deleteComment",IMAURLAPP];
//    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
//    NSString *commandUuid = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment_uuid"];
//    dicm[@"uuid"] = commandUuid;
//
//    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
//        if ([coder isEqualToString:@"1"]) {
//            //            [MBProgressHUD hideHUDForView:self.view animated:YES];
//            //            [_dataMarryDetail  removeAllObjects];
//            //            __weak typeof(self) wakeself = self;
//            //            [wakeself dataRequestInterfaceDetail];
//            //            [self showHint:@"删除评论成功"];
//            [_dataMarryDetail  removeObjectAtIndex:whichTouchInt];
//            __weak typeof(self) wakeself = self;
//            [wakeself.videodetailTabview reloadData];//gzz1122R
//
//            [self showHint:@"删除评论成功"];
//
//        }else{
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//            [self showHint:[dic objectForKey:@"message"]];
//        }
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    }];
//
//}
//#pragma mark 获取后台的系统时间
//-(void)getSystemTimeFromServer:(NSString *)str{
//    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
//    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
//    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
//    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
//
//    WEAKSELFS
//    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
//
//        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
//
//        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
//
//         if ([str isEqualToString:@"liulan"]) {
//                      [weakSelf watchHistoryRequest];
//
//              }else if([str isEqualToString:@"detail"]){
//                  [weakSelf docDatialRequest];
//
//              }else if([str isEqualToString:@"isVideoStore"]){
//                  [weakSelf isVideoDownloadRecordRequest];
////                  payVideoDown
//              }else if([str isEqualToString:@"payVideoDown"]){
//                  [weakSelf payVideoDownload];
//
//              }else if([str isEqualToString:@"getwalfare"]){
//                  [weakSelf getWelfareNumRequest];
//
//              }else if([str isEqualToString:@"usewalfare"]){
//                  [weakSelf useWelfareNumRequest];
//
//              }
//
//
//    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
//        sysTimestr = @"";
//
//               if ([str isEqualToString:@"liulan"]) {
//                   [weakSelf watchHistoryRequest];
//
//               }else if([str isEqualToString:@"detail"]){
//                   [weakSelf docDatialRequest];
//
//               }else if([str isEqualToString:@"isVideoStore"]){
//                   [weakSelf isVideoDownloadRecordRequest];
//
//               }else if([str isEqualToString:@"payVideoDown"]){
//                   [weakSelf payVideoDownload];
//
//               }else if([str isEqualToString:@"getwalfare"]){
//                   [weakSelf getWelfareNumRequest];
//
//               }else if([str isEqualToString:@"usewalfare"]){
//                   [weakSelf useWelfareNumRequest];
//
//               }
//
//    }];
//
//}
//
//#pragma mark s视频x详情接口
//-(void)docDatialRequest{
//
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    NSString *Strurl = [NSString stringWithFormat:@"%@videoDetail",expertAPI];
//    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//    if (sysTimestr.length>2) {
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//
//    }else{
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//    }
//    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
//
//    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
//    WEAKSELFS
//    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//
//        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
//        NSDictionary *dicd =[NSDictionary dictionaryWithDictionary:data[@"video"]];
//        if ([coder isEqualToString:@"200"]) {
//            weakSelf.videoPath = [NSString stringWithFormat:@"%@",dicd[@"path"]];
//            weakSelf.videoDescribeStr = [NSString stringWithFormat:@"%@",dicd[@"note"]];
//            weakSelf.isCollection = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
//            weakSelf.titleName = [NSString stringWithFormat:@"%@",dicd[@"name"]];
//             weakSelf.imagePath = [NSString stringWithFormat:@"%@",dicd[@"imgpath"]];
//            weakSelf.public_name = [NSString stringWithFormat:@"%@",dicd[@"public_name"]];
//            weakSelf.readnum = [NSString stringWithFormat:@"%@",dicd[@"readnum"]];
//            weakSelf.isStore = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
//            weakSelf.contentID = [NSString stringWithFormat:@"%@",dicd[@"content"]];
//            weakSelf.polyv_uuidStr = [NSString stringWithFormat:@"%@",dicd[@"polyv_uuid"]];
//
//            weakSelf.pointStr = [NSString stringWithFormat:@"%@",dicd[@"point"]];
//
//            if ([DicRemove  isBlankString:weakSelf.polyv_uuidStr]) {
//
//                NSString *str = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
//                 NSRange range = [str rangeOfString:@"vid\""];
//
//            if (range.location != NSNotFound) {
//                MCLog(@"早到了");
//                NSString *str2 = [str substringFromIndex:(range.location+3)];
//                  NSArray *array = [str2 componentsSeparatedByString:@"\""];
//                  if (arr.count>1) {
//                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
//                      weakSelf.polyv_uuidStr = str3;
//                  }
//            }else{
//                MCLog(@"没找到");
//                NSString *str11 = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
//                NSRange range1 = [str11 rangeOfString:@"vid'"];
//                if (range1.location != NSNotFound) {
//                NSString *str2 = [str11 substringFromIndex:(range1.location+3)];
//                  NSArray *array = [str2 componentsSeparatedByString:@"'"];
//                  if (arr.count>1) {
//                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
//                      weakSelf.polyv_uuidStr = str3;
//                  }
//                }
//
//            }
//
//
//            }
//
//
//            if ([self.isCollection isEqualToString:@"0"]) {
//                storeImg.image = [UIImage imageNamed:@"circollec2"];
//            }else{
//                storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
//            }
//            [weakSelf bottomActionVideo:leftBtnVideo];
//            [weakSelf makeUIVideoDetail];
//            [weakSelf barToolVideo];
//            [weakSelf makeUiTextView];
////   gzz20200509
//            [weakSelf getStates];
//
//        }else{
//
//            [self showHint:message];
//        }
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    } failure:^(NSError *error) {
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        [self showHint:@"请求失败"];
//
//    }];
//}
//
//#pragma mark  是否缓存过该视频
//-(void)isVideoDownloadRecordRequest{
//    [MBProgressHUD hideHUDForView:self.view animated:YES];
//
////    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    NSString *Strurl = [NSString stringWithFormat:@"%@isVideoDownloadRecord",expertAPI];
//    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//    if (sysTimestr.length>2) {
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//
//    }else{
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//    }
//    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
//
//    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
// WEAKSELFS
//    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//
//        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
//        if ([coder isEqualToString:@"200"]) {
//            isVideoStorestr = [NSString stringWithFormat:@"%@",data[@"result"]];
//            [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//           [weakSelf getSystemTimeFromServer:@"detail"];
//        }else{
//
//            [self showHint:message];
//        }
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    } failure:^(NSError *error) {
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        [self showHint:@"请求失败"];
//
//    }];
//}
//#pragma mark  支付积分
//-(void)payVideoDownload{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    NSString *Strurl = [NSString stringWithFormat:@"%@payVideoDownload",expertAPI];
//    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//    if (sysTimestr.length>2) {
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//
//    }else{
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//    }
//    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
//
//    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
// WEAKSELFS
//    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//
//        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
////        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
//        if ([coder isEqualToString:@"200"]) {
//
//            isVideoStorestr =   @"1";
//         if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
//              [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
////             [cacheBtn setTitle:@"视频缓存中" forState:0];
//             NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"缓存中"];
//                    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
//            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//              coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//              scorelaebl.hidden = YES;
//              [rihgtStorePicBtn sizeToFit];
//              rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//
//             [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
//
//          }
//
//        }else{
//            if ([coder isEqualToString:@"106"]) {
////                [self showHint:@"您的积分不够，请赚取积分或购买后来支付！"];
//
//
//                UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"您的积分不足，是否购买积分？" preferredStyle:(UIAlertControllerStyleAlert)];
//                UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
//
//                }];
//
//                [alertController addAction:cancelAction];
//                WEAKSELFS
//                UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
//                    [weakSelf buybounds];
//                }];
//                [alertController addAction:sureAction];
//                [self presentViewController:alertController animated:YES completion:nil];
//
//            }
//
//        }
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//    } failure:^(NSError *error) {
//
//        [MBProgressHUD hideHUDForView:self.view animated:YES];
//
//        [self showHint:@"请求失败"];
//
//    }];
//}
//-(void)buybounds{
//    bugBonusVC *vc = [[bugBonusVC alloc]init];
//    [self.navigationController pushViewController:vc animated:YES];
//}
//
//
//#pragma mark  专家端 - 添加视频浏览记录
//-(void)watchHistoryRequest{
//
//    NSString *Strurl = [NSString stringWithFormat:@"%@addVideoWatchRecord",expertAPI];
//    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
//    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//    if (sysTimestr.length>2) {
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//
//    }else{
//
//        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//    }
//    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
//
//    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
//
//    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//
//        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
//
//        if ([coder isEqualToString:@"200"]) {
//
//
//        }else{
//
//            [self showHint:message];
//        }
//
//    } failure:^(NSError *error) {
//
//        [self showHint:@"请求失败"];
//
//    }];
//}
//#pragma mark navbar及返回
//-(void)navBarVideoDetail{
////    gzz191101
//    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClickVideoDetail)];
//    self.navigationItem.leftBarButtonItem=backItem;
//
//    UIView *rightView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 70, 40)];
//    rightView.backgroundColor = [UIColor clearColor];
//
//    UIImageView *shareImag = [UIImageView creatImageviewWithFrame:CGRectMake(0, 10, 20, 20) imaged:[UIImage imageNamed:@"分享@2x"]];
//    [rightView addSubview:shareImag];
//
//    UIButton * shareButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 34, 40)];
//    [rightView addSubview:shareButton];
//    shareButton.backgroundColor = [UIColor clearColor];
//    [shareButton addTarget:self action:@selector(shareAction) forControlEvents:UIControlEventTouchUpInside];
//
//
//    UIImageView *btnImag = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(shareImag.frame)+20, 7.5, 25, 25) imaged:[UIImage imageNamed:@"icodd"]];
//    [rightView addSubview:btnImag];
//    storeImg = btnImag;
//
//    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
//    btn.frame = CGRectMake(CGRectGetMaxX(shareButton.frame)+1, 0, 34, 40);
//    btn.backgroundColor = [UIColor clearColor];
//    rightItem = btn;
//    [rightView addSubview:btn];
//    [rightItem addTarget:self action:@selector(storeClick) forControlEvents:UIControlEventTouchUpInside];
//
//    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:rightView];
//    self.navigationItem.rightBarButtonItem = pulish;
//
//
////
////    if ([_isCollection isEqualToString:@"0"]) {
////        //        [rightItem setBackgroundImage:[UIImage imageNamed:@"unstoreVideo"] forState:0];
////        storeImg.image = [UIImage imageNamed:@"circollec2"];
////    }else{
////        //        [rightItem setBackgroundImage:[UIImage imageNamed:@"storeVideo"] forState:0];
////        storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
////
////    }
//
//
//
//}
//-(void)backClickVideoDetail{
//    [self.player destroyPlayer];
//    if ([self.isStore isEqualToString:@"yes"]) {
//
//        self.reloadBlock(_isCollection);
//    }
//
//    if ([_typesVideo isEqualToString:@"type"]) {//gzz1124
//
//        self.reloadBlock(_videoCommentUuid);
//
//    }else if([_typesVideo isEqualToString:@"videoHome"])//videoHome
//    {
//        self.reloadBlock(_videoCommentUuid);
//
//    }else{
//
//
//    }
//
//    [viewWeb reload];
//
//    //gzz170216   111111
//    NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
//    [des setObject:@"isVideo" forKey:@"jingxuan_video"];
//
//
//    NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
//    [dess setObject:_videoCommentUuid forKey:@"jingxuan_videoUUID"]; // jingxuan_videoUUID 11
//
//    if ([_isJingxuanInDetail isEqualToString:@"yes"]) {
//        NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
//        [des setObject:@"isJingxuanInDe" forKey:@"isJingxuanInDetail"];
//    } //gzz170216  111111  isJingxuanInDetail
//
//
//    [self.navigationController popViewControllerAnimated:YES];
//}
//
//
//-(NSDictionary *)clearErrorDataDateil:(NSMutableDictionary *)dictionary{
//
//    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
//    ;
//    NSArray * allkeys = [newDict allKeys];
//    for (int i = 0; i < [allkeys count]; i ++) {
//        // 获取下标对应的key
//        NSString * key = [allkeys objectAtIndex:i];
//        // 根据key获取value
//        NSString * value = [newDict objectForKey:key];
//
//        if ((NSNull *)value == [NSNull null]) {
//            newDict[key] = @"";
//        }
//    }
//    return newDict;
//}
//- (void)didReceiveMemoryWarning {
//    [super didReceiveMemoryWarning];
//
//
//}
//
//
//
//
//#pragma mark - util
//
//+ (NSString *)formatFilesize:(NSInteger)filesize {
//    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
//}
//- (NSString *)downloadStateImgFromState:(PLVVodDownloadState )state{
//    NSString *imageName = nil;
//    switch (state) {
//        case PLVVodDownloadStateReady:
//        case PLVVodDownloadStatePreparing:
//            imageName = @"plv_icon_download_will";
//            break;
//        case PLVVodDownloadStateStopped:
//        case PLVVodDownloadStateStopping:
//            imageName = @"plv_icon_download_stop";
//            break;
//        case PLVVodDownloadStatePreparingStart:
//        case PLVVodDownloadStateRunning:
//            imageName = @"plv_icon_download_processing";
//            break;
//        case PLVVodDownloadStateSuccess:
//            imageName = @"plv_icon_download_will";
//            break;
//        case PLVVodDownloadStateFailed:
//            imageName = @"plv_icon_download_fail";
//            break;
//    }
//
//    return imageName;
//}
//#pragma mark -- handle
//- (void)handleStopDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
//
//#ifndef PLVSupportDownloadAudio
//    [[PLVVodDownloadManager sharedManager] stopDownloadWithVid:info.vid];
//#else
//    // 使用音频下载功能的客户，调用如下方法
//    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
//    [[PLVVodDownloadManager sharedManager] stopDownloadWithVideoParams:params];
//#endif
//}
//
//- (void)handleStartDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
//
//#ifndef PLVSupportDownloadAudio
//    [[PLVVodDownloadManager sharedManager] startDownloadWithVid:info.vid];
//#else
//    // 使用音频下载功能的客户，调用如下方法
//    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
//    [[PLVVodDownloadManager sharedManager] startDownloadWithVideoParams:params];
//#endif
//
//    if ([PLVVodDownloadManager sharedManager].isDownloading){
//        //
////        self.queueDownloadButton.selected = YES;
//    }
//}
//#pragma mark  下载状态的改变
//-(void)showType:(NSInteger)row{
//    // 播放本地缓存视频
//     PLVVodDownloadInfo *info = self.downloadInfos[row];
//     if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
//         // 暂停下载
//         [self  handleStopDownloadVideo:info index:row ];
//     } else {
//         // 开始下载
//         [self handleStartDownloadVideo:info index:row];
//     }
//}
//#pragma mark  删除下载 正在下载的
//-(void)deleDownload:(NSInteger)index{
//       PLVVodDownloadInfo *info = self.downloadInfos[index];
//       if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
//           // 暂停下载
//           [self  handleStopDownloadVideo:info index:index];
//       } else {
////           // 开始下载
////           [self handleStartDownloadVideo:info index:row];
//       }
//  WEAKSELFS
//    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
//
//       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
//
//           [weakSelf handleStartDownloadVideo:info index:index];
//       }];
//
//       [alert addAction:picKepu];
//
//       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
//
//          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
//              PLVVodDownloadInfo *downloadInfo = self.downloadInfos[index];
//
//          #ifndef PLVSupportDownloadAudio
//              [downloadManager removeDownloadWithVid:downloadInfo.video.vid error:nil];
//          #else
//              // 使用音频下载功能的客户，调用如下方法
//              PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:downloadInfo.vid fileType:downloadInfo.fileType];
//              [downloadManager removeDownloadWithVideoParams:params error:nil];
//          #endif
//
//              [self.downloadInfos removeObject:downloadInfo];
//
////           删除专家名字
////           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
//           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
//
//           isHaveDownload = @"no";
//           [downloadbtn setTitle:@"未下载" forState:0];
//           [rihgtStorePicBtn setTitle:@"缓存" forState:0];
//
//           [self.downloadtableview reloadData];
//
//
//         }];
//
//         [alert addAction:videoKepu];
//
//       [self presentViewController:alert animated:YES completion:nil];
//
//
//
//}
//
//#pragma mark  删除下载 已经完成的
//-(void)delecomDownload:(NSInteger)index{
//
//  WEAKSELFS
//    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
//
//       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
//
//
//       }];
//
//       [alert addAction:picKepu];
//
//       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
//
//        PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
//
//        [downloadManager removeDownloadWithVid:self.polyv_uuidStr error:nil];
//        [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
////           删除专家名字
////           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
//           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
//
//            isHaveDownload = @"no";
//            [downloadbtn setTitle:@"未下载" forState:0];
//           [rihgtStorePicBtn setTitle:@"缓存" forState:0];
//           [weakSelf.downloadtableview reloadData];
//         }];
//
//         [alert addAction:videoKepu];
//
//       [self presentViewController:alert animated:YES completion:nil];
//
//
//
//}
//
//
//#pragma mark - util  tool
//
//+ (NSString *)formatFilesizeaa:(NSInteger)filesize {
//    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
//}
//+ (NSString *)timeFormatStringWithTime:(NSTimeInterval )time{
//
//    NSInteger hour = time/60/60;
//    NSInteger minite = (time - hour*60*60)/60;
//    NSInteger second = (time - hour*60*60 - minite*60);
//
//    NSString *timeStr =[NSString stringWithFormat:@"%02d:%02d:%02d", (int)hour, (int)minite,(int)second];
//
//    return timeStr;
//}
/////expertAPI/videoDetail
//#pragma mark 禁用手势
//
//-(void)viewDidAppear:(BOOL)animated {
//[super viewDidAppear:animated];
////if([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
////    self.navigationController.interactivePopGestureRecognizer.enabled = NO;
////}
//    [self popGestureChange:self enable:NO];
//}
//
//
//
//-(void)popGestureChange:(UIViewController *)vc enable:(BOOL)enable{
//    if ([vc.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
//        //遍历所有的手势
//        for (UIGestureRecognizer *popGesture in vc.navigationController.interactivePopGestureRecognizer.view.gestureRecognizers) {
//            popGesture.enabled = enable;
//        }
//    }
//}
//
//@end






================================视频详情======================






//

===============课件详情=======================

//  wpsViewController.m
//  肝胆相照
//
//  Created by yzxin on 2017/12/29.
//  Copyright © 2017年 sy. All rights reserved.
//
#import "wpsViewController.h"

#import "kejianPayVC.h"
#import "SecurityUtil.h"

@interface wpsViewController ()<UIWebViewDelegate,UIAlertViewDelegate,UIDocumentInteractionControllerDelegate>{
    
    UIImageView * imageview;
    UIButton *rightItem;
    UIImageView *storeImg;
    UIView * yiyingView;
    UILabel * showLabel;
    UIImageView * downImg;
    UIButton * downBtn;
    UILabel * allLabel;
    NSString *sysTimestr;//gzz170904
    NSString *orderStr;//gzz170904
    FMDatabase * yzDB;
    NSString * fileNameStr;
    NSString * downLoaded;
    NSString * downLoadFilePath;
    NSString * freeStr;
    NSString * typessTR;
    NSString * freeRecord;
    NSString * FreeStr;
    NSString * FileMD5;
    
    
    NSString * rightNow;//返回时判断下载是否完全
    NSString * showWhat;//显示什么提示文字
    NSString * strType;
    //下载状态
    NSString * downloadState;
    
    NSURLSessionDownloadTask *downloadTask;
    
    NSString * fileSTR;
}

@property(nonatomic,strong)UIDocumentInteractionController *documentInteractionController;
@property(nonatomic,copy)NSString *isCollection;
@end

@implementation wpsViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.title = @"课件详情";
    self.view.backgroundColor = [UIColor whiteColor];
    NSLog(@"文件类型%@",self.wpsType);
    rightNow = @"no";
    showWhat = @"no";
    fileSTR = [[NSString alloc]init];
    strType = [[NSString alloc]init];
    downLoaded = [[NSString alloc]init];
    downLoadFilePath = [[NSString alloc]init];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    fileNameStr = [NSString stringWithFormat:@"%@",[paths objectAtIndex:0]];
    NSString *dbPath = [fileNameStr stringByAppendingPathComponent:@"wpsFile.db"];
    yzDB = [FMDatabase databaseWithPath:dbPath] ;
    if ([yzDB open]) {
        
        NSString * sql =[NSString stringWithFormat:@"SELECT * FROM WPSFILELIST where fileID = '%@'",self.wpsUuid ];
        FMResultSet * rs = [yzDB executeQuery:sql];
        if ([rs next]) {
            
            NSString * sty4 = [rs stringForColumn:@"downLoadType"];
            NSString * sty5 = [rs stringForColumn:@"fileID"];
            
            NSLog(@"下载的类型为%@================下载的文章ID为%@",sty4,sty5);
            
            if ([sty4 isEqualToString:@"downloaded"] ) {
                
                NSLog(@"这个wps下载过了，在数据库里存着呢");
                downLoaded = @"yes";
                NSString * sty = [rs stringForColumn:@"filePath"];
                downLoadFilePath = [NSString stringWithFormat:@"%@",sty];
                //                return;
            }else if ([sty4 isEqualToString:@"downloading"]){
                
                NSLog(@"这个wps正在下载，稍安勿躁");
                downLoaded = @"noing";
            }
            
        }else{
            
            NSLog(@"这个wps未下载，数据库无记录");
            downLoaded = @"no";
        }
        
        NSLog(@"打印一下%@",rs);
        
        [yzDB close];
    }

    [self getSystemTimeFromServer];
    [self setupItem];
    [self requestData ];
    [self setupWebview];
    [self yiyingView];
 
}

-(void)yiyingView{
    
    
    allLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, 44)];
    allLabel.backgroundColor = [UIColor blackColor];
    allLabel.alpha = 0.4;
    
    downBtn  = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, 44)];
    downBtn.backgroundColor = [UIColor clearColor];
    [downBtn setTitle:@" " forState:(UIControlStateNormal)];
    [downBtn setImage:[UIImage imageNamed:@" "] forState:(UIControlStateNormal)];
    [downBtn addTarget:self action:@selector(areyouSure) forControlEvents:(UIControlEventTouchUpInside)];
    
}

//gzz20200511 肝胆课件
-(void)areyouSure{
    
    if ([downLoaded isEqualToString:@"yes"]) {
        
        [self read];
        return;
        
    }else{
        
        if ([downBtn.titleLabel.text isEqualToString:@" 本课件不支持下载"]) {
            
            return;
        }
        
        if ([downBtn.titleLabel.text isEqualToString:@"重新下载本课件"]) {
            
            
            [self afnManger];
            return;
        }
        
        if ([freeStr isEqualToString:@"FREE"]) {
            
            UIAlertView * alt = [[UIAlertView alloc]initWithTitle:@"提示" message:@"您确定要下载该课件吗" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
            alt.tag = 951478;
            [alt show];
            
        }else{
//            gzz20200520
            if ([freeRecord isEqualToString:@"0"]) {

                UIAlertView * alt = [[UIAlertView alloc]initWithTitle:@"提示" message:@"您确定要下载该课件吗" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
                alt.tag = 951478;
                [alt show];

            }else{


//
                NSString * str = [NSString stringWithFormat:@"感谢您的课件分享，您还有%@次免费下载机会，希望本次下载免费吗？",freeRecord];
                UIAlertView * alt = [[UIAlertView alloc]initWithTitle:@"提示" message:str delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
                alt.tag = 951499;
                [alt show];
            }
        }
        //
    }
    
}
//gzz20200511
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    
    if (alertView.tag == 951478) {
        if (buttonIndex == 0) {
            
            GDXZLog(@"取消操作");
            
        }else{
            
            if ([freeStr isEqualToString:@"FREE"]) {
                
                [self afnManger];
                
            }else{
//                gzz20200429
//  判断福利次数是不是大于0  免费下载 gzz20200507
//                [self getSystemTimeFromServerss:@"getWelfareNum"];
                GDXZLog(@"创建订单");
                [self createOrder];
            }
            
            
        }
    }else if(alertView.tag == 951499){
        
        if (buttonIndex == 0) {
            
//            [self createOrder]; gzz20200520
            
        }else{
            
            if ([freeStr isEqualToString:@"FREE"]) {
                
                [self afnManger];
                
            }else{
                
                FreeStr = @"yes";
                //                [self downLoad];
                [self testDownload];
                
            }
            
        }
        
    }else if (alertView.tag == 955499){
        
        if (buttonIndex == 0) {
            
            GDXZLog(@"取消操作");
            
        }else{
            
            GDXZLog(@"取消下载，离开页面");
            
            
            if ([yzDB open]) {
                
                NSString * sql =[NSString stringWithFormat:@"SELECT * FROM WPSFILELIST where fileID = '%@'",self.wpsUuid ];
                
                FMResultSet * rs = [yzDB executeQuery:sql];
                
                
                if ([rs next]) {
                    
                    NSString * sty4 = [rs stringForColumn:@"downLoadType"];
                    //                    NSString * sty5 = [rs stringForColumn:@"fileID"];
                    
                    //                    NSLog(@"下载的类型为%@================下载的文章ID为%@",sty4,sty5);
                    
                    if ([sty4 isEqualToString:@"downloaded"] ) {
                        
                        [self showHint:@"下载完成"];
                        
                    }else{
                        
                        showWhat = @"yes";
                        [downloadTask cancel];
                        
                        NSString * aPath  = [NSString stringWithFormat:@"%@/%@.%@",fileNameStr,self.wpsUuid,self.wpsType];
                        NSFileManager * filemanager = [NSFileManager defaultManager];
                        
                        NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
                        [yzDB open];
                        
                        BOOL result = [yzDB executeUpdate:insertSql1];
                        if (result) {
                            
                            NSLog(@"delete from 't_student' success");
                            
                        } else {
                            
                        }
                        [yzDB close];
                        
                        [filemanager removeItemAtPath:aPath error:nil];
                        
                        [self.navigationController popViewControllerAnimated:YES];
                        
                    }
                    
                    
                    
                }else{
                    
                    showWhat = @"yes";
                    [downloadTask cancel];
                    
                    NSString * aPath  = [NSString stringWithFormat:@"%@/%@.%@",fileNameStr,self.wpsUuid,self.wpsType];
                    NSFileManager * filemanager = [NSFileManager defaultManager];
                    
                    NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
                    [yzDB open];
                    
                    BOOL result = [yzDB executeUpdate:insertSql1];
                    if (result) {
                        
                        NSLog(@"delete from 't_student' success");
                        
                    } else {
                        
                    }
                    [yzDB close];
                    
                    [filemanager removeItemAtPath:aPath error:nil];
                    
                    [self.navigationController popViewControllerAnimated:YES];
                }
                
                [yzDB close];
            }
            
            
            
        }
        
    }else{
        
        if (buttonIndex == 0) {
            
            GDXZLog(@"取消操作");
            
        }else{
            
            GDXZLog(@"开始下载");
            //            [self downLoad];
            [self testDownload];
        }
    }
    
    
    
    
    
}

#pragma mark 创建订单
-(void)createOrder{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString * urlstr = [NSString stringWithFormat:@"%@createGanDanFileOrder",IMaUrlPing];
    AFHTTPSessionManager * manger = [AFHTTPSessionManager manager];
    manger.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    manger.responseSerializer = [AFJSONResponseSerializer serializer];
    
    NSString * expertUid = [[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"];
    
    NSArray *KeyArr = @[@"file_uuid",@"expert_uuid"];
    NSArray *ValueArr = @[self.wpsUuid,expertUid];
    NSDictionary *dic = [[NSDictionary alloc]initWithObjects:ValueArr forKeys:KeyArr];
    
    NSLog(@"chuan%@",dic);
    
    [manger POST:urlstr parameters:dic progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSLog(@"创建订单返回值===%@",responseObject);
        
        NSString *code = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"message"]];
        
        NSLog(@"%@",message);
        if ([code isEqualToString:@"1"]) {
            
            kejianPayVC * payVC = [[kejianPayVC alloc]init];
            payVC.orderIDStr = [[responseObject objectForKey:@"data"]objectForKey:@"id"] ;
            orderStr = [[responseObject objectForKey:@"data"]objectForKey:@"id"];
            payVC.amountStr = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"price"] ];
            
            NSString * yzBalance = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"availablebalance"]];
            payVC.balanceMoney = [yzBalance floatValue];
            payVC.providername = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"providername"]];
            payVC.backBlock = ^{
                
                
                [self afnManger];
                
            };
            [self.navigationController pushViewController:payVC animated:YES];
            
            
            
        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        NSLog(@"%@",error);
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}


-(void)afnManger{
    
    //创建网络监听管理者对象
   __weak AFNetworkReachabilityManager *manager = [AFNetworkReachabilityManager sharedManager];
     [manager startMonitoring];
    [manager setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        switch (status) {
            case AFNetworkReachabilityStatusUnknown:
                NSLog(@"未识别的网络");
                //开始监听
                [manager stopMonitoring];
                break;
                
            case AFNetworkReachabilityStatusNotReachable:{
                
                NSLog(@"不可达的网络(未连接)");
                [downloadTask cancel];
                UIAlertView * alteView =[[ UIAlertView alloc]initWithTitle:@"提示" message:@"未连接网络,请设置" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                
                [alteView show];
                 [manager stopMonitoring];
                break;
            }
                
            case AFNetworkReachabilityStatusReachableViaWWAN:{
                
                NSLog(@"2G,3G,4G...的网络");
                
                UIAlertView * alteView =[[ UIAlertView alloc]initWithTitle:@"提示" message:@"您当前正使用手机网络，是否继续下载？" delegate:self cancelButtonTitle:@"否" otherButtonTitles:@"是", nil];
                
                [alteView show];
                 [manager stopMonitoring];
                break;
            }
                
                
            case AFNetworkReachabilityStatusReachableViaWiFi:
                NSLog(@"wifi的网络");
                //               [self downLoad];
                [self testDownload]; //下载gzz20200507 操作
                 [manager stopMonitoring];
                break;
            default:
                break;
        }
    }];
    
    
}

#pragma mark 获取后台的系统时间 getSystemTimeStamp
-(void)getSystemTimeFromServer{
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTime",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"system_time"]];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        MCLog(@"dddddddddd");
        
    }];
    
}

-(void)aujuestDownload{
    
    NSString * downLong = [[NSString alloc]init];
    downLong = @"downloadIng";
    
    //增加操作
    if ([yzDB open]) {
        
        NSString *insertSql1= [NSString stringWithFormat:@"INSERT INTO WPSFILELIST (filePath, fileTitle, fileID,fileType,downLoadType) VALUES ('%@', '%@', '%@', '%@', '%@')",downLong, self.wpsTitle, self.wpsUuid,self.wpsType,downLong];
        BOOL res = [yzDB executeUpdate:insertSql1];
        
        if (!res) {
            
            NSLog(@"插入失败");
            
        } else {
            
            NSLog(@"强势插入");
            
        }
        [yzDB close];
        
    }
    //以上为新增内容
    if ([downloadState isEqualToString:@"downloading"]) {
        
        [self showHint:@"正在下载，请勿重复点击"];
        
        return;
    }
    
    downloadState = @"downloading";
    
    [self showHint:@"开始下载，请勿重复点击"];
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString * expertUid = [[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"];
    
    int x = 10;
    int valueINTT = (arc4random() % x) + 1;
    
    int NUMBER_OF_CHARS = valueINTT;
    char data[NUMBER_OF_CHARS];
    for (int x=0;x<NUMBER_OF_CHARS;data[x++] = (char)('A' + (arc4random_uniform(26))));
    NSString *stringValue =[[NSString alloc]initWithBytes:data length:NUMBER_OF_CHARS encoding:NSUTF8StringEncoding];
    
    NSMutableDictionary *parma = [NSMutableDictionary dictionary];
    
    NSLog(@"%@",sysTimestr);
    
    NSString  *daiJiami = [[NSString alloc]init];
    
    if ([freeStr isEqualToString:@"FREE"]) {
        
        daiJiami = [NSString stringWithFormat:@"%@|%@|%@|%@",self.wpsUuid,freeStr,expertUid,sysTimestr];
        
    }else{
        
        daiJiami = [NSString stringWithFormat:@"%@|%@|%@|%@",self.wpsUuid,orderStr,expertUid,sysTimestr];
    }
    
    if ([FreeStr isEqualToString:@"yes"]) {
        
        NSString * str = @"FREERECORD";
        daiJiami = [NSString stringWithFormat:@"%@|%@|%@|%@",self.wpsUuid,str,expertUid,sysTimestr];
    }
    
    
    NSLog(@"待加密的字符串%@",daiJiami);
    
    NSData *data1  = [SecurityUtil encryptAESData:daiJiami key:@"deoep09_klodLdAo"];
    NSString *signstr = [NSString stringWithFormat:@"%@",[SecurityUtil encodeBase64Data:data1]];
    
    parma[@"gdf"] = [NSString stringWithFormat:@"%@%@",stringValue,signstr];
    parma[@"a"] = [NSString stringWithFormat:@"%d",valueINTT];
    
    NSLog(@"%@",parma);
    
    NSString * pinStr = [NSString stringWithFormat:@"%@%@",stringValue,signstr];
    
    //TEMPAPP    NSString * url = [NSString stringWithFormat:@"%@downloadGanDanFile",IMAURLAPP];
    
    NSString * allUrl = [NSString stringWithFormat:@"%@downloadGanDanFile?&gdf=%@&a=%d",IMAURLAPP,pinStr,valueINTT];
    //     NSString * allUrl = [NSString stringWithFormat:@"%@downloadGanDanFile?&gdf=%@&a=%d",TEMPAPP,pinStr,valueINTT];
    
    if ([self.fromCollection isEqualToString:@"yes"]) {
        
        self.wpsType = typessTR;
    }
    
    //存放的path路径
    NSString * aPath  = [NSString stringWithFormat:@"%@/%@.%@",fileNameStr,self.wpsUuid,self.wpsType];
    
    /*************断点续传*****************/
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:allUrl]];
    
    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];
    AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];
    downloadTask   = [manager downloadTaskWithRequest:request progress:^(NSProgress * _Nonnull downloadProgress){
        
        //打印下下载进度
        //        GDXZLog(@"%lf",1.0 * downloadProgress.completedUnitCount / downloadProgress.totalUnitCount);

    } destination:^NSURL *(NSURL *targetPath, NSURLResponse *response) {
        
        unsigned long long _currentLength = 0;
        
        NSFileHandle *fileHandld = [NSFileHandle fileHandleForUpdatingAtPath:aPath];
        
        if ([[NSFileManager defaultManager] fileExistsAtPath:aPath]) {
            _currentLength = [fileHandld seekToEndOfFile];
        }
        [request setValue:[NSString stringWithFormat:@"bytes=%llu-",_currentLength] forHTTPHeaderField:@"Range"];
        
        NSURL *documentsDirectoryURL = [NSURL fileURLWithPath:aPath];
        return documentsDirectoryURL;

    } completionHandler:^(NSURLResponse *response, NSURL *filePath, NSError *error) {
        
        
        NSHTTPURLResponse *res = (NSHTTPURLResponse *)response;
        //        self.totalLength = res.expectedContentLength;
        NSLog(@"code===%ld",(long)res.statusCode);
        
        //        NSLog(@"拿出返回的东西%@",response.statusCode);
        NSLog(@"%lld",response.expectedContentLength);
        NSLog(@"File downloaded to: %@", filePath);
        
        
        NSFileManager * filemanager = [NSFileManager defaultManager];
        
        NSLog(@"%llu", [[filemanager attributesOfItemAtPath:aPath error:nil] fileSize]);
        
        
        if (error) {
            
            downLoaded = @"no";
            downloadState = @"downloadFalse";
            NSLog(@"走了错误的方法了吗%@",error);
            
            NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
            [yzDB open];
            
            BOOL result = [yzDB executeUpdate:insertSql1];
            if (result) {
                
                NSLog(@"delete from 't_student' success");
                
            } else {
                
            }
            [yzDB close];
            
            [filemanager removeItemAtPath:aPath error:nil];
            [self getSystemTimeFromServer];
            
            if ([showWhat isEqualToString:@"yes"]) {
                
                [self showHint:@"下载请求已取消"];
            }else{
                
                [self showHint:@"请求失败，请重试"];
            }
            
            
            [MBProgressHUD hideHUDForView:self.view animated:YES];
  
        }else{
            
            if (res.statusCode == 200) {
                
                //               NumVersionVariant
                NSString *str_MD5 = [self md5HashOfPath:aPath];
                
                NSLog(@"下载后文件的md5值 = %@",str_MD5);
                NSLog(@"后台返回的md5值 = %@",FileMD5);
                if ([str_MD5 isEqualToString:FileMD5]) {

                    NSString * yzdd = [[NSString alloc]init];
                    yzdd = @"downloaded";
                    
                    //增加操作
                    if ([yzDB open]) {

                        NSString *insertSql1= [NSString stringWithFormat:@"UPDATE  WPSFILELIST  set downLoadType = '%@' where fileID = '%@'",yzdd, self.wpsUuid];
                        BOOL res = [yzDB executeUpdate:insertSql1];
                        
                        if (!res) {
                            NSLog(@"error when insert db table");
                            downLoaded = @"no";
                            downloadState = @"downloadFalse";
                            NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
                            [yzDB open];
                            
                            BOOL result = [yzDB executeUpdate:insertSql1];
                            if (result) {
                                
                                NSLog(@"delete from 't_student' success");
                                
                            } else {
                                
                            }
                            [yzDB close];
                            
                            //下载不完全，删除本地课件
                            [filemanager removeItemAtPath:aPath error:nil];
                             [self getSystemTimeFromServer];
                            [self showHint:@"下载失败请重试"];
                            [MBProgressHUD hideHUDForView:self.view animated:YES];
                            
                        } else {
                            
                            NSString * name = @"查看课件";
                            NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                            [mAttribute addAttribute:NSForegroundColorAttributeName
                                               value:[UIColor whiteColor]
                                               range:NSMakeRange(0, name.length)];
                            [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
                            [downBtn setImage:[UIImage imageNamed:@" "] forState:(UIControlStateNormal)];
                            
                            NSLog(@"该条数据成功加入wps数据库表");
                            downLoaded = @"yes";
                            downloadState = @"downloadtrue";
                            rightNow = @"yes";
                            [self showHint:@"下载完成"];
                            [MBProgressHUD hideHUDForView:self.view animated:YES];
                       
                        }
                        
                        [yzDB close];
                        
                    }
                    
                    
                }else{
                    
                    downLoaded = @"no";
                    downloadState = @"downloadFalse";
                    
                    NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
                    [yzDB open];
                    
                    BOOL result = [yzDB executeUpdate:insertSql1];
                    if (result) {
                        
                        NSLog(@"delete from 't_student' success");
                        
                    } else {
                        
                    }
                    [yzDB close];
                    
                    //下载不完全，删除本地课件
                    [filemanager removeItemAtPath:aPath error:nil];
                     [self getSystemTimeFromServer];
                    [self showHint:@"下载失败请重试"];
                    [MBProgressHUD hideHUDForView:self.view animated:YES];

                    
                }
                
                
            }else{
                
                downLoaded = @"no";
                downloadState = @"downloadFalse";
                
                NSString *insertSql1= [NSString stringWithFormat:@"delete from  WPSFILELIST where fileID = '%@'", self.wpsUuid];
                [yzDB open];
                
                BOOL result = [yzDB executeUpdate:insertSql1];
                if (result) {
                    
                    NSLog(@"delete from 't_student' success");
                    
                } else {
                    
                }
                [yzDB close];
                
                [filemanager removeItemAtPath:aPath error:nil];
                 [self getSystemTimeFromServer];
                [self showHint:@"下载失败请重试"];
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
            }
            
        }
        
    }];
    //    [downloadTask suspend];
    [downloadTask resume];
    
}

-(void)testDownload{
    
    if ([yzDB open]) {
        
        NSString * sql =[NSString stringWithFormat:@"SELECT * FROM WPSFILELIST where fileID = '%@'", self.wpsUuid];
        FMResultSet * rs = [yzDB executeQuery:sql];
        
        while ([rs next]) {
            
            NSString * sty = [rs stringForColumn:@"downLoadType"];
            strType = sty;
            NSLog(@"改文章的下载type值是%@",strType);
            
        }
        
        [yzDB close];
    }
    
    if (strType.length>1 && ![strType isEqualToString:@"downloaded"]) {
        
        UIAlertView * alt = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"正在下载中，请稍后" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alt show];
        return;
    }
    
    if ([strType isEqualToString:@"downloaded"]) {
        
        downLoaded = @"yes";
        NSString * name = @"查看课件";
        NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
        [mAttribute addAttribute:NSForegroundColorAttributeName
                           value:[UIColor whiteColor]
                           range:NSMakeRange(0, name.length)];
        [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
        
        [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
        
        return;
    }
    
    [self aujuestDownload];
    
}

-(void)setupWebview{
    
    UIWebView *viewWeb = [[UIWebView alloc] initWithFrame:CGRectMake(0, 0, ConentViewWidth, ConentViewHeight)];
    viewWeb.backgroundColor = [UIColor whiteColor];
    viewWeb.delegate =self;
    
    [self.view addSubview:viewWeb];
    //待会儿加个判断
    //老版本收藏有的链接没有拼接网址，先这样处理，过度俩版本
    NSString *url = [NSString stringWithFormat:@"%@%@",NETADRESS,self.wpsPath];
    if ([self.wpsPath hasPrefix:@"http"]) {
        url = self.wpsPath;
    }else{
        self.wpsPath = url;
    }
    [viewWeb loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:url]]];
}

#pragma mark 获取文件MD5标签
- (NSString *)md5HashOfPath:(NSString *)path
{
    NSFileManager *fileManager = [NSFileManager defaultManager];
    // Make sure the file exists
    if( [fileManager fileExistsAtPath:path isDirectory:nil] )
    {
        NSData *data = [NSData dataWithContentsOfFile:path];
        unsigned char digest[CC_MD5_DIGEST_LENGTH];
        CC_MD5( data.bytes, (CC_LONG)data.length, digest );
        
        NSMutableString *output = [NSMutableString stringWithCapacity:CC_MD5_DIGEST_LENGTH * 2];
        
        for( int i = 0; i < CC_MD5_DIGEST_LENGTH; i++ )
        {
            [output appendFormat:@"%02x", digest[i]];
        }
        
        return output;
    }
    else
    {
        return @"";
    }
}


//请求数据
#pragma mark gzz20200511
-(void)requestData{
    
    
    NSString * urlstr = [NSString stringWithFormat:@"%@ganDanFileDetials",IMAURLAPP];
    AFHTTPSessionManager * manger = [AFHTTPSessionManager manager];

    manger.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    manger.responseSerializer = [AFJSONResponseSerializer serializer];
    
    NSString * expertUid = [[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"];
    
    NSArray *KeyArr = @[@"file_uuid",@"expert_uuid"];
    NSArray *ValueArr = @[self.wpsUuid,expertUid];
    NSDictionary *dic = [[NSDictionary alloc]initWithObjects:ValueArr forKeys:KeyArr];
    
    NSLog(@"chuan%@",dic);
    
    
    
    [manger POST:urlstr parameters:dic progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSLog(@"===%@",responseObject);
        
        NSString *code = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"code"]];
        _isCollection = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"iscollection"]];
//        gzz20200511 剩余免费次数
        freeRecord = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"freeRecord"]];
        fileSTR = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"fileSize"]];
        FileMD5 = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"fileMD5"]];
        if ([_isCollection isEqualToString:@"0"]) {
      
            storeImg.image = [UIImage imageNamed:@"circollec2"];
        }else{
        
            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            
        }
        if ([code isEqualToString:@"1"]) {
            
            typessTR = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"type"]];
            
            if ([[responseObject objectForKey:@"data"] isKindOfClass:[NSNull class]]||[[responseObject objectForKey:@"data"] isEqual:[NSNull null]]) {
                
                NSString * priceStr =  [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"price"]];
                
                
                if ([priceStr floatValue]<0) {

                    NSString * name = @" 本课件不支持下载";
                    
                    NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                    
                    [mAttribute addAttribute:NSForegroundColorAttributeName
                                       value:[UIColor whiteColor]
                                       range:NSMakeRange(0, name.length)];
                    
                    
                    [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
                    [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
                    
                }
                
                if ([priceStr isEqualToString:@"0"]) {
                    
                    NSString * name = @" 本课件免费下载";
                    NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                    
                    [mAttribute addAttribute:NSForegroundColorAttributeName
                                       value:[UIColor whiteColor]
                                       range:NSMakeRange(0, name.length)];
                    
                    [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
      
                    freeStr = @"FREE";
                    [downBtn setImage:[UIImage imageNamed:@"kejianDownload@2x"] forState:(UIControlStateNormal)];
                    
                }
                
                if ([priceStr floatValue]>0) {
                    
                    float cashFloat = [priceStr floatValue]/100.00;
                    NSString * str88 = [NSString stringWithFormat:@"%.2f",cashFloat];
                    NSString * stra = [NSString stringWithFormat:@"本课件下载%.2f元",cashFloat];
                    [downBtn setImage:[UIImage imageNamed:@"kejianDownload@2x"] forState:(UIControlStateNormal)];
                    
                    [downBtn setTitle:stra forState:(UIControlStateNormal)];
                    
                    [self changeTextBtn:downBtn
                     
                            stringArray:@[str88] colorArray:@[[UIColor redColor]]
                     
                              fontArray:@[@"16"]];
   
                }
                
                GDXZLog(@"这个下载状态到底是个啥%@",downLoaded);
                
                if ([downLoaded isEqualToString:@"yes"]) {
                    NSString * name = @"查看课件";
                    NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                    [mAttribute addAttribute:NSForegroundColorAttributeName
                                       value:[UIColor whiteColor]
                                       range:NSMakeRange(0, name.length)];
                    [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
                    
                    [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
                    
                }
                 

                
            }else{
                
                GDXZLog(@"走的是不免费的这个下载状态到底是个啥%@",downLoaded);
                
                if ([downLoaded isEqualToString:@"yes"]) {
                  
                    NSString * name = @"查看课件";
                    NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                    [mAttribute addAttribute:NSForegroundColorAttributeName
                                       value:[UIColor whiteColor]
                                       range:NSMakeRange(0, name.length)];
                    [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
                    
                    [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
             
                    
                }else {
                  
                    NSString * rrStr =  [NSString stringWithFormat:@"%@",[[responseObject objectForKey:@"data"]objectForKey:@"order_id"] ];
                    
                    orderStr = [NSString stringWithFormat:@"%@&R",rrStr];
                    
                    NSString * name = @"重新下载本课件";
                    NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
                    [mAttribute addAttribute:NSForegroundColorAttributeName
                                       value:[UIColor whiteColor]
                                       range:NSMakeRange(0, name.length)];
                    [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
                    
                    [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
                    
                    
                }
                
            }
            
            
        }
        [self.view addSubview:allLabel];
        [self.view addSubview:downBtn];
    
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        NSLog(@"%@",error);
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}


-(void)changeTextBtn:(UIButton *)myBtn

         stringArray:(NSArray *)strArray

          colorArray:(NSArray *)colorArray

           fontArray:(NSArray *)fontArray {
    
    
    
    NSMutableAttributedString *mutAttStr = [[NSMutableAttributedString alloc] initWithString:myBtn.titleLabel.text];

    NSString* _str = nil;
    
    UIFont*  _font = nil;
    
    NSRange _range = NSMakeRange(0, 0);

    for (int i=0; i<strArray.count; i++) {
        
        //NSLog(@"---> strArray.count = %ld",strArray.count);
        
        _str = strArray[i];
        
        NSUInteger location = [[mutAttStr string] rangeOfString:_str].location;
        
        NSUInteger length   = [[mutAttStr string] rangeOfString:_str].length;
        
        _range = NSMakeRange(location, length);
        
        // 改变颜色
        
        if (colorArray.count >= (i+1)) {
            
            [mutAttStr addAttribute:NSForegroundColorAttributeName value:colorArray[i] range:_range];
            
        }
        
        // 改变字体大小
        
        if (fontArray.count >= (i+1)) {
            
            _font = [UIFont systemFontOfSize:[fontArray[i] floatValue]];
            
            [mutAttStr addAttribute:NSFontAttributeName value:_font range:_range];
            
        }
        
    }
    
    [myBtn setAttributedTitle:mutAttStr forState:UIControlStateNormal];
    
}

-(void)setupItem{
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClickVideoDetail)];
    
    self.navigationItem.leftBarButtonItem=backItem;
    
    UIView *rightView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 70, 40)];
    rightView.backgroundColor = [UIColor clearColor];
    
    UIImageView *shareImag = [UIImageView creatImageviewWithFrame:CGRectMake(0, 10, 20, 20) imaged:[UIImage imageNamed:@"分享@2x"]];
    [rightView addSubview:shareImag];
    
    UIButton * shareButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 34, 40)];
    [rightView addSubview:shareButton];
    shareButton.backgroundColor = [UIColor clearColor];
    [shareButton addTarget:self action:@selector(shareAction) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIImageView *btnImag = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(shareImag.frame)+20, 10, 20, 20) imaged:[UIImage imageNamed:@"icodd"]];
    [rightView addSubview:btnImag];
    storeImg = btnImag;
    
    UIButton *btn = [UIButton buttonWithType:0];
    btn.frame = CGRectMake(CGRectGetMaxX(shareButton.frame)+1, 0, 34, 40);
    btn.backgroundColor = [UIColor clearColor];
    rightItem = btn;
    [rightView addSubview:btn];
    [rightItem addTarget:self action:@selector(storeClick) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:rightView];
    self.navigationItem.rightBarButtonItem = pulish;
    
    if ([_isCollection isEqualToString:@"0"]) {
        storeImg.image = [UIImage imageNamed:@"circollec2"];
    }else{
        storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
        
    }
}

-(void)backClickVideoDetail{

    if ([yzDB open]) {
        
        NSString * sql =[NSString stringWithFormat:@"SELECT * FROM WPSFILELIST where fileID = '%@'",self.wpsUuid ];
        
        FMResultSet * rs = [yzDB executeQuery:sql];
        
        
        if ([rs next]) {
            
            NSString * sty4 = [rs stringForColumn:@"downLoadType"];
            NSString * sty5 = [rs stringForColumn:@"fileID"];
            
            NSLog(@"下载的类型为%@================下载的文章ID为%@",sty4,sty5);
            
            if ([sty4 isEqualToString:@"downloaded"] ) {
                
                [self.navigationController popViewControllerAnimated:YES];
                
            }else {
                
                NSString * str = @"当前有课件正在下载，您确定要取消下载吗?";
                UIAlertView * alt = [[UIAlertView alloc]initWithTitle:@"提示" message:str delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
                alt.tag = 955499;
                [alt show];
                
            }
            
            NSLog(@"打印一下%@",rs);
            
            
        }else{
            
            [self.navigationController popViewControllerAnimated:YES];
        }
        
        [yzDB close];
    }
   
}

#pragma mark 收藏的按钮
-(void)storeClick{
    
    //先讲之前的收藏隐藏起来，做个分享功能测试
    if ([_isCollection isEqualToString:@"0"]) {
        //收藏
        [self storeRequestVideo];
    }else if([_isCollection isEqualToString:@"1"]){
        
        //取消收藏
        [self undoStoreRequestVideo];
    }else{
        
    }
}


#pragma mark 收藏接口
-(void)storeRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@collection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",self.wpsUuid];
    dicm[@"title"] = [NSString stringWithFormat:@"%@",self.wpsTitle];
    dicm[@"path"] = [NSString stringWithFormat:@"%@",self.wpsPath];
    dicm[@"type"] = @"6";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {

            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            
            //            [rightItem setBackgroundColor:[UIColor blueColor]];
            _isCollection = [NSString stringWithFormat:@"%d",1];
            
            [self showHint:@"收藏成功"];
            if ([self.fromCollection isEqualToString:@"yes"]) {
                
                self.reloadBlock();
            }
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}

#pragma mark 取消收藏接口
-(void)undoStoreRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@discollection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",self.wpsUuid];
    dicm[@"type"] = @"6";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {

            storeImg.image = [UIImage imageNamed:@"circollec2@2x"];
            //            [rightItem setBackgroundColor:[UIColor redColor]];
            _isCollection = [NSString stringWithFormat:@"%d",0];
     
            [self showHint:@"取消收藏成功"];
            if ([self.fromCollection isEqualToString:@"yes"]) {
                
                self.reloadBlock();
            }
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 新友盟分享
- (void)shareAction
{
    NSString *descr =@"国内最大的肝胆课件共享平台";
    NSString *title =self.wpsTitle;
    NSString *weburl =[NSString stringWithFormat:@"%@",self.wpsPath];
    NSString *imageUrl = @"";
    NSDictionary *dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl};
    UmengEnclosed *umeng = [UmengEnclosed sharedUmengEnclosed];
    [umeng customWebShareWithVC:self SocialType:SType_sina_wx_qq shareType:ShareWebPages webData:dic];
}


-(void)read{
    
    if ([self.fromCollection isEqualToString:@"yes"]) {
        
        self.wpsType = typessTR;
    }
    NSString * str8 = [NSString stringWithFormat:@"%@/%@.%@",fileNameStr,self.wpsUuid,self.wpsType];
    NSFileManager * filemanager = [NSFileManager defaultManager];
    NSString *str_MD5 = [self md5HashOfPath:str8];
    
    GDXZLog(@"下载后文件的md5值 = %@",str_MD5);

    if ([str_MD5 isEqualToString:FileMD5])
    {
        NSURL *url = [NSURL fileURLWithPath:str8];
        self.documentInteractionController = [UIDocumentInteractionController interactionControllerWithURL:url];
        self.documentInteractionController.delegate = self;
        [self.documentInteractionController presentPreviewAnimated:YES];
        
    }else{
        
        //下载不完全，删除本地课件
        [filemanager removeItemAtPath:str8 error:nil];

        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
        
        fileNameStr = [NSString stringWithFormat:@"%@",[paths objectAtIndex:0]];
        
        NSString *dbPath = [fileNameStr stringByAppendingPathComponent:@"wpsFile.db"];
        
        yzDB = [FMDatabase databaseWithPath:dbPath] ;
        
        [yzDB open];
        

        NSString * fileIDd = [NSString stringWithFormat:@"%@",self.wpsUuid];
        
        if ([yzDB open]) {
            //7.27屏蔽
            //                NSString *deleteSql = [NSString stringWithFormat:@"delete from WFPDF where wfarticleID = '%@'", model.ArticleID];
            NSString *deleteSql = [NSString stringWithFormat:@"delete from WPSFILELIST where fileID = '%@'", fileIDd];
            BOOL res = [yzDB executeUpdate:deleteSql];
            
            if (!res) {
                NSLog(@"error when delete db table");
                
            } else {
                NSLog(@"success to delete db table");
                
                
            }
            [yzDB close];
        }
         [self showHint:@"请重新下载"];
         [self getSystemTimeFromServer];
        
        downLoaded = @"no";
        downloadState = @"downloadFalse";
        NSString * name = @"重新下载本课件";
        NSMutableAttributedString * mAttribute = [[NSMutableAttributedString alloc] initWithString:name];
        [mAttribute addAttribute:NSForegroundColorAttributeName
                           value:[UIColor whiteColor]
                           range:NSMakeRange(0, name.length)];
        [self getSystemTimeFromServer];
        [downBtn setAttributedTitle:mAttribute forState:UIControlStateNormal];
        
        [downBtn setImage:[UIImage imageNamed:@""] forState:(UIControlStateNormal)];
        
        
    }
    
    
    
}

#pragma mark -UIDocumentInteractionControllerDelegate代理方法
//这是必须实现的方法，否则不会显示
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)controller{
    return self;
}
//设置预览名称
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)controller{
    controller.name = @"附件预览";
}
//点击Done结束预览
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)controller{
    
}

















//==================
//我的福利-查询福利剩余次数 gzz20200429
//地址：expertAPI/getWelfareNum //gzz20200414
//参数type (1视频2课件3精品4万方5U盘)
//我的福利-使用福利操作
//地址：expertAPI/useWelfareNum
//参数type (1视频2课件3精品4万方5U盘)
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServerss:(NSString*)str{
        NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
        AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
        manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
        manager.responseSerializer = [AFHTTPResponseSerializer serializer];
        
        WEAKSELFS
        [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
            
            NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
            
            sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
                if ([str isEqualToString:@"getWelfareNum"]) {
                        [weakSelf getWelfareNumRequest];
                    }else if([str isEqualToString:@"usewalfare"]){
                        [weakSelf useWelfareNumRequest];
            
                    }
            
        } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
            sysTimestr = @"";
                    if ([str isEqualToString:@"getWelfareNum"]) {
                        [weakSelf getWelfareNumRequest];
                    }else if([str isEqualToString:@"usewalfare"]){
                        [weakSelf useWelfareNumRequest];
            
                    }
               
        }];
    

    
}

#pragma mark getWelfareNum 查询福利剩余次数
-(void)getWelfareNumRequest{
      [MBProgressHUD hideHUDForView:self.view animated:YES];

        NSString *Strurl = [NSString stringWithFormat:@"%@getWelfareNum",expertAPI];
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        }else{

            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
        }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        dicM[@"type"] = [NSString stringWithFormat:@"%@",@"2"];

        
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
        
        MCLog(@"=====%@",dicM);
        WEAKSELFS
        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
            if ([code isEqualToString:@"1"]) {
                
                NSString *num = [NSString stringWithFormat:@"%@",data[@"WelfareNum"]];
                if (![DicRemove isBlankString:num]) {
                    NSInteger numCount = [num integerValue];
                    if (numCount >0) {
                        [weakSelf getSystemTimeFromServerss:@"usewalfare"];
                    }else{
//                        积分那里
                    }
                }

            }else{

                [self showHint:data[@"message"]];
            }
          
           [MBProgressHUD hideHUDForView:self.view animated:YES];
             
        } failure:^(NSError *error) {
            [self showHint:@"请求失败"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }];
    
    
}

#pragma mark useWelfareNum 使用福利操作
-(void)useWelfareNumRequest{
    
         [MBProgressHUD hideHUDForView:self.view animated:YES];
            NSString *Strurl = [NSString stringWithFormat:@"%@useWelfareNum",expertAPI];
            NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
            dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
            NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
            dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
            NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
            if (sysTimestr.length>2) {
                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
            }else{

                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
            }
            dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
            dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

            
            NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
            
            MCLog(@"=====%@",dicM);
//            WEAKSELFS
            [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
                NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
                if ([code isEqualToString:@"1"]) {
//                    使用成功 之后的操作 gzz20200429


                }else{

                    [self showHint:data[@"message"]];
                }
              
               [MBProgressHUD hideHUDForView:self.view animated:YES];
                 
            } failure:^(NSError *error) {
                [self showHint:@"请求失败"];
                [MBProgressHUD hideHUDForView:self.view animated:YES];
            }];
}




- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
===============课件详情=======================


//gzz20200511  肝胆视频详情 页面


#import "VideosDetailNewVC.h"
#import "VideoStoresController.h"
#import "ReplyActivityController.h"
#import "AboutGandanController.h"

#import "bugBonusVC.h"
#import "RightImageBtnOnly.h"
#import <PLVVodSDK/PLVVodSDK.h>
#import "PLVCourseNetworking.h"
#import "UIColor+PLVVod.h"
#import "PLVVodSkinPlayerController.h"
#import "PLVDownloadCompleteInfoModel.h"
#import "PLVDownLoaProcessingNewCell.h"
#import "videoNewDetailDownLoadCell.h"//缓存中

#import "VideoNewDetailDownCompeleteCell.h" //已完成

#import "PLVDownloadManagerNewVC.h"

//增加专家姓名
#import <PLVVodSDK/PLVVodDownloadManager+Database.h>
#import "PLVVodExtendVideoInfo+WCTTableCoding.h"
#import "PLVVodDBManager.h"
#import "PLVVodExtendVideoInfo.h"

#import "newbofangViewController.h"//播放
@interface VideosDetailNewVC ()<UIScrollViewDelegate,UITextFieldDelegate,UITableViewDelegate,UITableViewDataSource,UIAlertViewDelegate,UIWebViewDelegate,UIWebViewDelegate>{
    UIScrollView *scrollv;
    UIScrollView *ziScrollv;
    
    UIImageView *headImageview;
    UIView *headView;
    UIView *bottomViewDownload;//底部xiazaiviwe
    
   UIButton *leftBtnVideo;//视频简介
   UIButton *rightBtnVideo;//评论 现在z是在中间

 

   
   NSInteger isLeft;// 左0 中 1  右 2
   
   UIView *leftLine;
   UIView *middleLine;
   UIView *rightLine;
       
    
    UILabel *desLabel;
    
    
    UIImageView *imagershuju;
    UILabel *tiwuxianLab;//提示无数据时
    
    
    UITextField *fideld;
    UIView *bottomView;
    BOOL keyBoardIsUp;
    UIButton *commitBtn;
    UIView *webBottomView;
    UILabel *mountLabel;
    NSString *comContent;
    NSInteger whichTouchInt;
    
    UIView * bagView;//评论覆盖的背景view
    UIView * smallView;//小view
    UIButton * cancleBtn;//取消按钮
    UIButton * enSureBtn;//确定按钮
    UILabel * showLB;//写评论标签
    UITextView * textView;
    UIWebView  *gdWebview;
    
    NSInteger pageNum;//gzz1121!
    UIButton *rightItem;
    UIBarButtonItem *right1;
    UIImageView * shareimaView ;
    UIButton *searchBtn;
    
    UIImageView *storeImg;
    
    NSString *sysTimestr;//系统时间
    
    //    保利威视
    UIButton *cacheBtn;
    UIImageView *imageBag;//
    
    NSString*isHaveDownload;// 是不是已经存在下载队列中  no 没下载；yes下载中；compeleteYES已缓存；

    NSString *isVideoStorestr;//是不是缓存过该视频 o0没有。1 有的
    
}
@property(nonatomic,strong)UITableView *videodetailTabview;
@property(nonatomic,strong)NSMutableArray *dataMarryDetail;

//保利威视
@property (nonatomic,strong) NSMutableArray *dataArr;
@property (nonatomic, strong) PLVVodSkinPlayerController *player;//gzz190327
@property (nonatomic, strong) UIView *playerPlaceholder;
@property (nonatomic, strong) NSMutableArray<PLVVodDownloadInfo *> *downloadInfos;
@property (nonatomic, strong) NSMutableDictionary<NSString *, videoNewDetailDownLoadCell *> *downloadItemCellDic;
//当前视频现在完成后的信息 展示在cell中
@property(nonatomic,strong)PLVVodDownloadInfo *completeDownloadInfo;

/*剩余次数 我的福利gzz20200509*/
@property (nonatomic, copy) NSString *RemainingCountstr;

@end

@implementation VideosDetailNewVC
//懒加载
- (PLVVodDownloadInfo *)completeDownloadInfo{
    if (!_completeDownloadInfo) {
        _completeDownloadInfo = [[PLVVodDownloadInfo alloc]init];
    }
    return _completeDownloadInfo;
}


#pragma mark  property
- (void)setDownloadInfos:(NSMutableArray<PLVVodDownloadInfo *> *)downloadInfos {
    _downloadInfos = downloadInfos;
    // 设置单元格字典
    NSMutableDictionary *downloadItemCellDic = [NSMutableDictionary dictionary];
//    for (PLVVodDownloadInfo *info in downloadInfos) {
//        videoNewDetailDownLoadCell *cell = [videoNewDetailDownLoadCell cellWithTableView:self.downloadtableview];
//          downloadItemCellDic[info.identifier] = cell;
//    }
    self.downloadItemCellDic = downloadItemCellDic;
    // 设置回调
    __weak typeof(self) weakSelf = self;
    for (PLVVodDownloadInfo *info in downloadInfos) {
        // 下载状态改变回调
        info.stateDidChangeBlock = ^(PLVVodDownloadInfo *info) {
            dispatch_async(dispatch_get_main_queue(), ^{
                if (info.state == PLVVodDownloadStateSuccess){ //下载成功，从列表中删除
                    [weakSelf handleDownloadSuccess:info];
                }
                [weakSelf updateCellWithDownloadInfo:info];
            });
        };
        
    // 下载进度回调
    info.progressDidChangeBlock = ^(PLVVodDownloadInfo *info) {
        //NSLog(@"vid: %@, progress: %f", info.vid, info.progress);
        videoNewDetailDownLoadCell *cell = weakSelf.downloadItemCellDic[info.identifier];
        float receivedSize = MIN(info.progress, 1) * info.filesize;
        NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
        dispatch_async(dispatch_get_main_queue(), ^{
            cell.progressLable.text = downloadProgressStr;
        });
    };
  }
}
- (void)updateCellWithDownloadInfo:(PLVVodDownloadInfo *)info {
    videoNewDetailDownLoadCell *cell = self.downloadItemCellDic[info.identifier];
    cell.backgroundColor = RGB(244, 244, 244);

    NSString *title  = NSStringFromPLVVodDownloadState(info.state);
    UIImage *images = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
    cell.downloadStateImageview.image = images;
    cell.videoStateLable.text = title;

    switch (info.state) {
        case PLVVodDownloadStatePreparing:
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
           cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x4A90E2];
          cell.videoStateLable.textColor = [UIColor colorWithHex:0x4A90E2];
        } break;
        case PLVVodDownloadStateSuccess:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
            cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStateFailed:{
            cell.progressLable.textColor = [UIColor redColor];
             cell.videoStateLable.textColor = [UIColor redColor];
        } break;
    }
}

#pragma mark  下载视频
-(void)ddownloadddVideos:(NSString*)vid_Str{
      WEAKSELFS
         [PLVVodVideo requestVideoPriorityCacheWithVid:vid_Str completion:^(PLVVodVideo *video, NSError *error) {
             if (video.available){
                 [weakSelf downloadVideo:video];
             }
         }];
    
}

#pragma mark   监听下载的状态更新UI
-(void)listenDownload{
    

    WEAKSELFS
      PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
         
      [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
             dispatch_async(dispatch_get_main_queue(), ^{
                 for (PLVVodDownloadInfo *info in downloadInfos) {
                     if ([info.vid isEqualToString:self.polyv_uuidStr]) {
//                         weakSelf.downloadtableview.hidden =  NO;//gzz20191107
                        weakSelf.downloadInfos = downloadInfos.mutableCopy;
//                        [weakSelf.downloadtableview reloadData];
                     }
                 }

             });
         }];
}

#pragma mark 下载的代理
- (void)downloadVideo:(PLVVodVideo *)video{
           
       PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
       PLVVodDownloadInfo *info = [downloadManager downloadVideo:video];
       // info.quality = 2;
        #ifdef PLVSupportDownloadAudio
            // 音频下载测试入口，需要音频下载功能客户，放开注释
        [downloadManager downloadAudio:video];
            
        #endif
           if (info) NSLog(@"%@ - %zd 已加入下载队列", info.video.vid, info.quality);
      
//      插入
        [PLVVodDownloadManager createExtendTableWithClass:[PLVVodExtendVideoInfo class]];
        PLVVodExtendVideoInfo *extendInfo = [PLVVodExtendVideoInfo new];
        extendInfo.vid = self.polyv_uuidStr;
            extendInfo.CusCatagoryName =  self.public_name;
            extendInfo.CusCourseName = self.titleName;//课题名字
        [PLVVodDownloadManager insertOrUpdateWithExtendInfo:extendInfo];

//      }
        dispatch_async(dispatch_get_main_queue(), ^{
        });
        isHaveDownload = @"yes";
       [self listenDownload];
    
//    };
}

#pragma mark -- 下载完成 handle
- (void)handleDownloadSuccess:(PLVVodDownloadInfo *)downloadInfo{
    isHaveDownload = @"compeleteYES";
    
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
    [self.downloadInfos removeObject:downloadInfo];
    [self.downloadItemCellDic removeObjectForKey:downloadInfo.identifier];
    
    self.completeDownloadInfo = [[PLVVodDownloadManager sharedManager] requestDownloadInfoWithVid:self.polyv_uuidStr];
    
    
}

- (BOOL)prefersStatusBarHidden {
    return self.player.prefersStatusBarHidden;
}
- (UIStatusBarStyle)preferredStatusBarStyle {
    return self.player.preferredStatusBarStyle;
}




-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
    
    if (isLeft == 0) {
        [self getStates];
    }
    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
          delegate.allowRotation = 1;
        
        if (isLeft == 1) {
            [_dataMarryDetail removeAllObjects];
            pageNum = 1;
            [self dataRequestInterfaceDetail];
        }
    
    
    [theUserDefaultGcc setObject:@"yes" forKey:@"videoAdsToAbout"];
    
    
    
}

#pragma mark  已缓存 缓存中 待缓存的状态
-(void)getStates{
   WEAKSELFS
    isHaveDownload = @"no";  //进来就置为 点击缓存状态
                    dispatch_group_t group = dispatch_group_create();
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                      
                              NSArray<PLVVodDownloadInfo *> *dbInfos = [[PLVVodDownloadManager sharedManager] requestDownloadCompleteList];
                              NSMutableDictionary *dbCachedDics = [[NSMutableDictionary alloc] init];
                              [dbInfos enumerateObjectsUsingBlock:^(PLVVodDownloadInfo * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
                                  [dbCachedDics setObject:obj forKey:obj.vid];
                                  if ([obj.vid isEqualToString:self.polyv_uuidStr]) {
                                        isHaveDownload = @"compeleteYES";
                                      dispatch_async(dispatch_get_main_queue(), ^{
                                          weakSelf.completeDownloadInfo = obj;//
                                          [weakSelf.downloadInfos removeAllObjects];
                                          [weakSelf.downloadItemCellDic removeObjectForKey:obj.identifier];
                               NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                                           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                      });
                                     }
                      
                              }];
                       });
                        
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                      //    正在下载的
                          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
                                 
                              [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
                                     dispatch_async(dispatch_get_main_queue(), ^{
                                         for (PLVVodDownloadInfo *info in downloadInfos) {
                                             if ([info.vid isEqualToString:self.polyv_uuidStr]) {
                                               weakSelf.downloadInfos = downloadInfos.mutableCopy;
                                                 isHaveDownload = @"yes";
                                                 
                                                 NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                                                  [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                             }
                                         }
                                         if ([isHaveDownload isEqualToString:@"yes"] || [isHaveDownload isEqualToString:@"compeleteYES"]) {
                                             
                                         }else{
                                              isHaveDownload = @"no";
                                         }
                                         
                                     });
                               }];
                      });
                    
                    dispatch_group_notify(group, dispatch_get_main_queue(), ^{
                        if ([isHaveDownload isEqualToString:@"no"]) {

                            if ([isVideoStorestr isEqualToString:@"1"]) {
//已经下载过
                                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                
                             
                            }else{
                            
                                
                                NSInteger points = [weakSelf.pointStr integerValue];
                                if (points >0) {
                          
                                     NSString *jifenstr  = [NSString stringWithFormat:@"点击下载（%ld积分）",(long)points];
                                    NSMutableAttributedString * attriStr2 = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                    [attriStr2 addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                    [cacheBtn setAttributedTitle:attriStr2 forState:(UIControlStateNormal)];
                                    
                                    if (points==25) {
                                       jifenstr  = [NSString stringWithFormat:@"点击下载（限时5折,仅需%ld积分)",(long)points];
                
                                        NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                         [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                        [attriStr addAttribute:NSForegroundColorAttributeName value:RGB11(225, 255, 0) range:NSMakeRange(7, 1)];
                                        [attriStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:25] range:NSMakeRange(7, 1)];
                                        [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                    }
                             NSInteger num = [weakSelf.RemainingCountstr integerValue];
                              if (num >0) {
                                  
                                  NSString *restCountstr = [NSString stringWithFormat:@"免费剩余%ld次",(long)num];
                                  [cacheBtn setTitle:restCountstr forState:0];
                                  
                                  NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:restCountstr];
                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, restCountstr.length)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];

                              }else{
                                  
                              }
           
                                 }else{

                   
                                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载（限时免费）"];
                                      [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 10)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                 }
 
                                
                            }

                            
                      
                        }
                        
                        if ([isHaveDownload isEqualToString:@"compeleteYES"]) {
                        
                            NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                      [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                         }
                        
                    });

}







-(void)viewWillDisappear:(BOOL)animated{
    
    
    [super viewWillDisappear:YES];
    
//    [self.player destroyPlayer];
    
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    
    
    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
       delegate.allowRotation = 0;
       if ([[UIDevice currentDevice]    respondsToSelector:@selector(setOrientation:)]) {
           SEL selector = NSSelectorFromString(@"setOrientation:");
           NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
           [invocation setSelector:selector];
           [invocation setTarget:[UIDevice currentDevice]];
           int val = UIInterfaceOrientationPortrait;
           [invocation setArgument:&val atIndex:2];
           [invocation invoke];
    }
    
    
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    //    navigaTionBar
    self.title = @"视频详情";
    self.navigationController.navigationBar.barTintColor = GreyColor;
    navigaTionBar
    IOS_Frame
    if ([self.isShouYe isEqualToString:@"yes"]) {
        
        [self readAddRequest];
    }
    
    shareimaView =[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 100, 100)];
    
    
    [shareimaView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath]] placeholderImage:[UIImage imageNamed:@"patientLogo.png"]];
    
    [self navBarVideoDetail];
    [self dataOpenDetail];
     [self middleThreeBtn];
    

//    浏览记录 @ liulnan ; @detial 详情  isVideoStore是缓存过该视频  payVideoDown 支付积分
    [self getSystemTimeFromServer:@"liulan"];
    [self getSystemTimeFromServer:@"isVideoStore"];

    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(begainFullScreen) name:UIWindowDidBecomeVisibleNotification object:nil];//进入全屏
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(endFullScreen) name:UIWindowDidBecomeHiddenNotification object:nil];//退出全屏
    
    [_dataMarryDetail removeAllObjects];
    pageNum = 1;
    [self dataRequestInterfaceDetail];
}
#pragma mark 显示视频
-(void)makeplayer{
    
    self.playerPlaceholder = [[UIView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 200)];
    [scrollv addSubview:self.playerPlaceholder];
    // 初始化播放器
    PLVVodSkinPlayerController *player = [[PLVVodSkinPlayerController alloc] initWithNibName:nil bundle:nil];
    [player addPlayerOnPlaceholderView:self.playerPlaceholder rootViewController:self];
    player.rememberLastPosition = YES;
    player.enableBackgroundPlayback = NO;
    player.autoplay = NO;
    player.reachEndHandler = ^(PLVVodPlayerViewController *player) {
        NSLog(@"%@ finish handler.", player.video.vid);
    };
    self.player = player;
    
   imageBag = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200)];
    imageBag.image = [UIImage imageNamed:@"morenyz"];

    [scrollv addSubview:imageBag];
    NSString * freeVideoUuid = self.polyv_uuidStr;
    if (freeVideoUuid.length>2) {

        imageBag.hidden = YES;
        self.player.autoplay = NO;
        __weak typeof(self) weakSelf = self;
        NSString * str = [NSString stringWithFormat:@"%@",freeVideoUuid];
        [PLVVodVideo requestVideoWithVid:str completion:^(PLVVodVideo *video, NSError *error) {
            if (!video.available) return;
            weakSelf.player.video = video;

            dispatch_async(dispatch_get_main_queue(), ^{
              
            });
        }];
    }
    
    
}

#pragma - mark  进入全屏
-(void)begainFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = YES;
}
#pragma - mark 退出全屏
-(void)endFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = NO;
    //强制归正：
    if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {
        SEL selector = NSSelectorFromString(@"setOrientation:");
        NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
        [invocation setSelector:selector];
        [invocation setTarget:[UIDevice currentDevice]];
        int val =UIInterfaceOrientationPortrait;
        [invocation setArgument:&val atIndex:2];
        [invocation invoke];
    }
}

//下拉刷新
-(void)DownFreshVideodetail{
    __weak VideosDetailNewVC *puad = self;
    [puad.videodetailTabview addHeaderWithCallback:^{
        [puad.dataMarryDetail removeAllObjects];
        pageNum = 1;
        [puad dataRequestInterfaceDetail];
        [puad.videodetailTabview headerEndRefreshing];
    }];
}
//上拉加载
-(void)upFreshVideodetail{
    __weak VideosDetailNewVC *pudb = self;
    [pudb.videodetailTabview addFooterWithCallback:^{
        pageNum++;
        [pudb dataRequestInterfaceDetail];
        [pudb.videodetailTabview footerEndRefreshing];
    }];
}

#pragma mark  中间的2个按钮
-(void)middleThreeBtn{
       scrollv = [[UIScrollView alloc]init];
       scrollv.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
       scrollv.delegate = self;
       scrollv.showsVerticalScrollIndicator = NO;
       scrollv.showsHorizontalScrollIndicator = NO;
       scrollv.contentOffset = CGPointMake(0, 0);
       scrollv.backgroundColor = [UIColor whiteColor];// RGB(228, 228, 228);//[UIColor clearColor];
       scrollv.contentSize = CGSizeMake(0, SCREEN_HEIGHT);
       scrollv.scrollEnabled = NO;
       [self.view addSubview:scrollv];
    
    
    
    NSArray * titArr =@[@"视频简介",@"评论"];
      UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, 200, SCREEN_WIDTH, 10) bgColor:RGB(239, 239, 239)];
      [scrollv addSubview:lineview];
      
      headView =[[UIView alloc]initWithFrame:CGRectMake(0, 200+10, SCREEN_WIDTH ,44)];
      [scrollv addSubview:headView];

      
      for (int i = 0; i< 2; i++) {
        
              CGFloat width;

              width= SCREEN_WIDTH/2.0;
               UIButton * bottomBtn =[UIButton buttonWithType:UIButtonTypeCustom];
                 bottomBtn.frame =CGRectMake(SCREEN_WIDTH/2*i , 0, width, 44);
                 [bottomBtn setTitle: titArr[i] forState:UIControlStateNormal];
                 [bottomBtn addTarget:self action:@selector(bottomActionVideo:) forControlEvents:UIControlEventTouchUpInside];
                 bottomBtn.tag = 1110+i;
                 bottomBtn.titleLabel.font = SYSTEMFONT(16.0);
                 [bottomBtn setBackgroundColor:[UIColor whiteColor]];
                 [bottomBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
                 
                 if (bottomBtn.tag == 1110) {
                     leftBtnVideo = bottomBtn;
                     leftBtnVideo.tag = 1110;
                 }else{
                     rightBtnVideo = bottomBtn;
                     rightBtnVideo.tag = 1111;
                 }
                 [headView addSubview:bottomBtn];
  
         
      }
      UIView *lineALl = [UIView createViewWithFrame:CGRectMake(0, 43, SCREEN_WIDTH, 1) bgColor:[UIColor lightGrayColor]];
      [headView addSubview:lineALl];
      
      leftLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2, 42.9, 30, 1.4)];
      leftLine.backgroundColor = JISECOLOR;
      [headView addSubview:leftLine];
      leftLine.hidden = NO;
      
      middleLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2+SCREEN_WIDTH/2.0, 42.9, 30,1.4)];
      middleLine.backgroundColor = JISECOLOR;
      [headView addSubview:middleLine];
      middleLine.hidden = YES;



}

#pragma mark 数据的初始化
-(void)dataOpenDetail{
    isVideoStorestr = @"0";
   

   sysTimestr = @""; //gzz181225
   isHaveDownload = @"no";
   isLeft = 0;
   whichTouchInt = 0;
   self.dataMarryDetail = [NSMutableArray array];
}


#pragma mark 界面
-(void)makeUIVideoDetail{
    

    //这里是直播视频的
    [self makeplayer];

    ziScrollv = [[UIScrollView alloc]init];
    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10-SafeAreaBottomHeight-45);

    [scrollv addSubview:ziScrollv];
    ziScrollv.delegate = self;
    ziScrollv.showsVerticalScrollIndicator = NO;
    ziScrollv.showsHorizontalScrollIndicator = NO;
    ziScrollv.backgroundColor = [UIColor whiteColor];
    ziScrollv.scrollEnabled = YES;
    [self bottomActionVideo:leftBtnVideo];
    
    
    _videodetailTabview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-CGRectGetMaxY(headView.frame)-49) style:UITableViewStylePlain];
    _videodetailTabview.backgroundColor = [UIColor clearColor];
    _videodetailTabview.delegate = self;
    _videodetailTabview.dataSource = self;
    _videodetailTabview.tableFooterView = [[UIView alloc]init];
    _videodetailTabview.separatorStyle = UITableViewCellSeparatorStyleNone;
    _videodetailTabview.hidden = YES;
    [scrollv addSubview:_videodetailTabview];
    
    
    [self DownFreshVideodetail];
    [self upFreshVideodetail];
       
    cacheBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
       cacheBtn.backgroundColor = PATIENTJISECOLOR;
       [self.view addSubview:cacheBtn];

       [cacheBtn addTarget:self action:@selector(cacheBtnClick) forControlEvents:UIControlEventTouchUpInside];
    

}


#pragma mark 点击底部缓存。。。   //gzz20200414
-(void)cacheBtnClick{
    
    if ([isHaveDownload isEqualToString:@"compeleteYES"] || [isHaveDownload isEqualToString:@"yes"]) {
          [self.player pause];

          PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
          vc.hidesBottomBarWhenPushed = YES;
        if ( [isHaveDownload isEqualToString:@"compeleteYES"]) {
            vc.typeStr = @"completeStr";
        }else{
            vc.typeStr = @"processingStr";

        }
          [self.navigationController pushViewController:vc animated:YES];
        
       }else if([isHaveDownload isEqualToString:@"no"]){
           [self getNetworkTypeNB];
       }
}

#pragma mark  跳转到离线缓存
-(void)beforeeDdownloadVideos{
    
    [self.player pause];
  
    isHaveDownload = @"no";
    PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}



#pragma mark  前两个按钮的点击事件
-(void)bottomActionVideo:(UIButton *)btn{

 if (btn.tag == 1110) {
          cacheBtn.hidden = NO;
          [UIView animateWithDuration:0.4 animations:^{
           
              self.videodetailTabview.hidden = YES;
              
              leftLine.hidden = NO;
              middleLine.hidden = YES;
              rightLine.hidden = YES;
              isLeft = 0;
              _videodetailTabview.hidden = YES;
              bottomView.hidden = YES;
              ziScrollv.hidden = NO;
              
              [desLabel removeFromSuperview];
              desLabel = nil;
              
              
              desLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 15, SCREEN_WIDTH-30, 100)];
              desLabel.backgroundColor = [UIColor whiteColor];// [UIColor purpleColor];
              [ziScrollv addSubview:desLabel];
              desLabel.numberOfLines = 0;
              desLabel.lineBreakMode = NSLineBreakByWordWrapping;
              desLabel.text = [NSString stringWithFormat:@"%@",_videoDescribeStr];
              CGSize size = [desLabel sizeThatFits:CGSizeMake(desLabel.frame.size.width, MAXFLOAT)];
              desLabel.frame =CGRectMake(desLabel.x , desLabel.y ,desLabel.width, size.height);
              desLabel.font = [UIFont systemFontOfSize:14];
              desLabel.textColor = [UIColor blackColor];
              [desLabel sizeToFit];
              ziScrollv.contentSize = CGSizeMake(0, CGRectGetMaxY(desLabel.frame)+10);
              [btn setTitleColor:JISECOLOR forState:0];
              [rightBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];

          }];
          
      }else{
          cacheBtn.hidden = YES;

          [UIView animateWithDuration:0.4 animations:^{
               isLeft = 1;
             
              ziScrollv.hidden = YES;
              bottomView.hidden = NO;
              desLabel.hidden = YES;
           
             leftLine.hidden = YES;
             middleLine.hidden = NO;
             rightLine.hidden = YES;
              
             
              [btn setTitleColor:JISECOLOR forState:0];
              [leftBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
              

               _videodetailTabview.hidden = NO;
             
              [self.videodetailTabview reloadData];
          }];
          
       
       
      }
    
}



#pragma mark 获取l网络类型
-(void)getNetworkTypeNB{
    
 
  __weak  AFNetworkReachabilityManager *manager = [AFNetworkReachabilityManager sharedManager];
   // 提示：要监控网络连接状态，必须要先调用单例的startMonitoring方法
   [manager startMonitoring];
    WEAKSELFS
    [manager setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        
    if (status == AFNetworkReachabilityStatusUnknown) {
          
          NSLog(@"未识别网络");
        [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusNotReachable) {
        
          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"无网络，请查看联网情况。" confirmTitle:@"确定" handler:^{
              MCLog(@"sure1");
          }];
          [manager stopMonitoring];
          return;

      }
      if (status == AFNetworkReachabilityStatusReachableViaWWAN) {
          
          NSLog(@"3G/4G网络");
          [weakSelf gotoDownloadVideo:@"当前为移动网络，确定下载？"];
          [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusReachableViaWiFi) {
          
          NSLog(@"Wifi网络");
          [weakSelf gotoDownloadVideo:@"当前为Wifi网络，确定下载？"];
          [manager stopMonitoring];

      }
        
    }];
    
    
 
   
}

#pragma mark 提示下载
-(void)gotoDownloadVideo:(NSString *)typestr{
    
  UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:typestr preferredStyle:(UIAlertControllerStyleAlert)];
  UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
      
  }];
  
  [alertController addAction:cancelAction];
  WEAKSELFS

  UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
    
             [weakSelf showNeedHowmuchScore];


  }];
  [alertController addAction:sureAction];
  [self presentViewController:alertController animated:YES completion:nil];
    
}

#pragma mark  显示需要多少积分 gzz20200414
-(void)showNeedHowmuchScore{
    
        if ([isVideoStorestr isEqualToString:@"1"]) {// 下载过 无需重复支付
            if (![DicRemove isBlankString:self.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {

                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];
              [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
              [self ddownloadddVideos:self.polyv_uuidStr];
            }
    }else{
        
        //    gzz20200509
        NSInteger num = [self.RemainingCountstr integerValue];
        if (num >0) {
            [self getSystemTimeFromServer:@"usewalfare"];
            return;
            
        }else{
            
        }
        
        
        NSString *showContent  = [NSString stringWithFormat:@"该视频需%@积分兑换，若删除，可以再次免费缓存",self.pointStr];

           UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"下载提示" message:showContent preferredStyle:(UIAlertControllerStyleAlert)];
           UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
               
           }];
           
           [alertController addAction:cancelAction];
           WEAKSELFS
           UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
//               gzz20200414
               [weakSelf getSystemTimeFromServer:@"payVideoDown"];
             
           }];
           [alertController addAction:sureAction];
           [self presentViewController:alertController animated:YES completion:nil];
           
    }
    
}

//我的福利-查询福利剩余次数
//地址：expertAPI/getWelfareNum //gzz20200414
//参数type (1视频2课件3精品4万方5U盘)

//我的福利-使用福利操作
//地址：expertAPI/useWelfareNum
//参数type (1视频2课件3精品4万方5U盘)

#pragma mark getWelfareNum 查询福利剩余次数
-(void)getWelfareNumRequest{
      [MBProgressHUD hideHUDForView:self.view animated:YES];

        NSString *Strurl = [NSString stringWithFormat:@"%@getWelfareNum",expertAPI];
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        }else{

            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
        }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

        
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
        
        MCLog(@"=====%@",dicM);
        WEAKSELFS
        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
            if ([code isEqualToString:@"1"]) {
                
                NSString *num = [NSString stringWithFormat:@"%@",data[@"WelfareNum"]];
                if (![DicRemove isBlankString:num]) {
                    weakSelf.RemainingCountstr  = num;
                }else{
                    weakSelf.RemainingCountstr  = @"0";
                }
                MCLog(@"剩余次数==%@",weakSelf.RemainingCountstr);

            }else{

                [self showHint:data[@"message"]];
            }
            [weakSelf getStates];
           [MBProgressHUD hideHUDForView:self.view animated:YES];
             
        } failure:^(NSError *error) {
            [self showHint:@"请求失败"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }];
    
    
}


#pragma mark useWelfareNum 使用福利操作
-(void)useWelfareNumRequest{
    
         [MBProgressHUD hideHUDForView:self.view animated:YES];
            NSString *Strurl = [NSString stringWithFormat:@"%@useWelfareNum",expertAPI];
            NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
            dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
            NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
            dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
            NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
            if (sysTimestr.length>2) {
                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
            }else{

                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
            }
            dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
            dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

            
            NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
            
            MCLog(@"=====%@",dicM);
            WEAKSELFS
            [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
                NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
                if ([code isEqualToString:@"1"]) {
                    isVideoStorestr =   @"1";
                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                   [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
                    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                    [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
                    NSInteger num = [weakSelf.RemainingCountstr integerValue];
                    num = num -1;
                    weakSelf.RemainingCountstr = [NSString stringWithFormat:@"%ld",(long)num];
                    
                }else{

                    [self showHint:data[@"message"]];
                }
              
               [MBProgressHUD hideHUDForView:self.view animated:YES];
                 
            } failure:^(NSError *error) {
                [self showHint:@"请求失败"];
                [MBProgressHUD hideHUDForView:self.view animated:YES];
            }];
}






#pragma  mark tableview
-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (isLeft == 1) {

    if (_dataMarryDetail.count>0) {
      
        NSDictionary *cellDic = [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexPath.row]];
        
        NSString *str = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
        
        
        NSString *strUrl = [str stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
        //            strUrl = [NSString stringWithFormat:@"%@:%@",[cellDic objectForKey:@"realname"],strUrl];
        NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
        
        
        //gzz170622
        CGSize sizee = [self checTheStringWithHight:strUrla font:14 float:15];
        CGFloat heigith = sizee.height +10 +40 +10 +8+3+4;
        
        return heigith;
        
        
    }else{
        
        return 0;
    }
       }else if (isLeft == 2){
           return 95;
           
       }else{
           return 0.01;
       }
    
}
-(CGSize)checTheStringWithHight:(NSString *)theStr font:(float)font  float:(CGFloat)floatt
{
    
    CGFloat xxx;
    xxx  = floatt;
    //gzz1026
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(SCREEN_WIDTH-xxx*2, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
  
    return _dataMarryDetail.count;
 
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
  
         static NSString *strint = @"cellVideoDetail";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:strint];
            if (!cell) {
                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strint];
                
            }else{//gzz170407
                for (UIView *view in cell.contentView.subviews) {
                    [view removeFromSuperview];
                }
            }
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor = [UIColor whiteColor];
            if (_dataMarryDetail.count>0) {
                
                [cell.contentView addSubview:[self addViewss:indexPath.row]];
            }

            return cell;
   
   
}


#pragma mark 自定义cell
-(UIView *)addViewss:(NSInteger)indexx{
    
    UIView *vieww =[[UIView alloc]init];
    vieww.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80);
    
    
    
    NSDictionary *cellDic= [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexx]];
    NSString  *imgesss=[cellDic objectForKey:@"photo"];
    NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageUrl,imgesss];
    UIImageView *imagevview1=[[UIImageView alloc]initWithFrame:CGRectMake(15, 10,40,40)];
    imagevview1.layer.cornerRadius = 20;
    imagevview1.layer.masksToBounds = YES;
    [imagevview1 sd_setImageWithURL:[NSURL URLWithString:imagename] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
    [vieww addSubview:imagevview1];
    
    
    UILabel* nameLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10,10,100, 18)];
    [vieww addSubview:nameLabel];
    nameLabel.textColor = RGB11(146, 60, 53);
    NSString *realNamee = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"realname"]];
    //    realNamee  = [realNamee stringByReplacingCharactersInRange:NSMakeRange(1, realNamee.length-1) withString:@"**"];
    nameLabel.text = realNamee;
    nameLabel.font = SYSTEMFONT(16);
    nameLabel.textAlignment = NSTextAlignmentLeft;
    [nameLabel sizeToFit];
    
    
    UILabel* dateLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(nameLabel.frame)+5,150, 18)];
    if (!nameLabel || nameLabel.text.length <= 0) {
        dateLabel.frame = CGRectMake(dateLabel.x, 31, dateLabel.width, dateLabel.height);
    }
    [vieww addSubview:dateLabel];
    NSString *dateStr = [cellDic objectForKey:@"create_date"];
    dateStr = [dateStr substringToIndex:16];
    dateStr = [dateStr substringWithRange:NSMakeRange(5, 11)];
    dateLabel.text = dateStr;
    dateLabel.font = SYSTEMFONT(14);
    dateLabel.textColor = [UIColor lightGrayColor];
    dateLabel.textAlignment = NSTextAlignmentLeft;
    
    
    //    Dlpontlerexple *dlp = [Dlpontlerexple shareIndence];
    NSString *zijiUUId = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    NSString *getUuid = [cellDic objectForKey:@"expert_uuid"];
    UILabel *replyLabel = [[UILabel alloc]init];
    UIImageView *DeleteImage= [[UIImageView alloc]init];
    replyLabel.userInteractionEnabled = YES;
    DeleteImage.userInteractionEnabled = YES;
    if ([zijiUUId isEqualToString:getUuid]) {
        //说明是删除
        DeleteImage.frame = CGRectMake(kMainScreenWidth-35, 10, 20, 20);
        DeleteImage.centerYy = nameLabel.centerYy;
        DeleteImage.image = [UIImage imageNamed:@"delet_case"];
        [vieww addSubview:DeleteImage];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(imageTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
        
    }else{
        //说明是回复
        //        replyLabel.frame = CGRectMake(kMainScreenWidth-50, 10, 35, 20);
        //        replyLabel.text = @"回复";
        //        replyLabel.textAlignment = NSTextAlignmentRight;
        //        replyLabel.textColor = [UIColor blackColor];
        //        replyLabel.font = SYSTEMFONT(16);
        replyLabel.frame = CGRectMake(SCREEN_WIDTH-65, 10, 50, 25);
        //        replyLabel.centerY = nameLabel.centerY;
        replyLabel.text = @"回复";
        replyLabel.textAlignment = NSTextAlignmentCenter;
        replyLabel.layer.cornerRadius = 10;
        replyLabel.layer.borderColor = RGB11(146, 60, 53).CGColor;
        replyLabel.layer.borderWidth = 1;
        replyLabel.layer.masksToBounds = YES;
        replyLabel.textColor = RGB11(102, 102, 102);
        replyLabel.font = [UIFont systemFontOfSize:16.0];
        [vieww addSubview:replyLabel];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        
        
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(replyTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
    }
    
    
    
    UILabel* commentLabel = [[UILabel alloc] initWithFrame: CGRectMake(15,CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, 32)];
    [vieww addSubview:commentLabel];
    
    
    commentLabel.numberOfLines = 0;
    commentLabel.lineBreakMode = NSLineBreakByTruncatingTail;// NSLineBreakByWordWrapping;
    
    NSMutableString * mulStr = [cellDic objectForKey:@"comment"];
    NSRange range;
    NSRange range1;
    
    NSMutableAttributedString *str=[[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]]];
    
    if ([mulStr hasPrefix:@"回复"]) {
        
        range = [mulStr rangeOfString:@"："];
        
        
        
        if (range.location != NSNotFound) {
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(0, 2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(146, 60, 53) range:NSMakeRange(2, range.location-2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range.location+1, str.length-range.location-1)];
            commentLabel.attributedText =  str;
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText =  str;
            commentLabel.textColor = QGreyColor;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;
            
            
        }
        
    }else{
        
        //        range1 = [mulStr rangeOfString:@"||"];
        //        if (range1.location != NSNotFound) {
        //
        //            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
        //            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
        //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
        //            commentLabel.attributedText = str;
        //            commentLabel.font = [UIFont systemFontOfSize:14.0];
        
        
        range1 = [mulStr rangeOfString:@"||"];
        if (range1.location != NSNotFound) {
            
            //            NSLog(@"%ld  %ld",range.location,range.length);
            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
            [str addAttribute:NSForegroundColorAttributeName value:QGreyColor range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
            //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
            
            
            NSArray *arr=[mulStr componentsSeparatedByString:@"||"];
            
            NSInteger m;
            m=0;
            
            for(int i=0;i<[arr count]-1;i++)
            {
                m=m+[arr[i] length];
                [str addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(m, 2)];
                m=m+2;
            }
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText = str;
            commentLabel.textColor = QGreyColor;;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;;
            
            
        }
        
    }
    
    
    //    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, size.height);
    //    [commentLabel sizeToFit];
    //    commentLabel.backgroundColor = [UIColor clearColor];
    
    NSString *strUrl = [commentLabel.text stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
    
    
    //    strUrl = [NSString stringWithFormat:@" %@:%@",[cellDic objectForKey:@"realname"],strUrl];
    NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
    commentLabel.text = strUrla;
    
    
    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-10-40-10-10, size.height+8);
    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-30, size.height+8);
    
    
    [commentLabel sizeToFit];
    commentLabel.backgroundColor = [UIColor clearColor];
    
    //第一条评论变色
    NSMutableAttributedString *str1 =[[NSMutableAttributedString alloc]initWithString:strUrla];
    NSString *string ;
    NSRange range3 = [commentLabel.text rangeOfString:@"\n\n"];//匹配得到的下标
    
    if (range3.location != NSNotFound) {
        NSLog(@"找到了@“zhu”这个字符串！");
        NSLog(@"rang:%@",NSStringFromRange(range3));
        string  = [commentLabel.text substringWithRange:range3];//截取范围类的字符串
        NSLog(@"截取的值为：%@",string);
        [str1 addAttribute:NSForegroundColorAttributeName value:JISECOLOR range:NSMakeRange(0, range3.location)];
        commentLabel.attributedText =  str1;
    }
    else{
        NSLog(@"没找到！");
        commentLabel.textColor = QGreyColor;
    }
    
    
    
    
    
    
    
    //背景
    UIView *bgCommentView = [[UIView alloc]init];
    bgCommentView.frame = CGRectMake(commentLabel.x-4, commentLabel.y-2, SCREEN_WIDTH-10-10-6, commentLabel.height+4);
    bgCommentView.backgroundColor = RGB11(241, 245, 244);
    bgCommentView.layer.cornerRadius = 3;
    bgCommentView.layer.masksToBounds = YES;
    
    [vieww insertSubview:bgCommentView belowSubview:commentLabel];
    
    
    UIView *lineview = [[UIView alloc]init];
    lineview.frame = CGRectMake(0, CGRectGetMaxY(commentLabel.frame)+9.5, kMainScreenWidth, 0.5);
    lineview.backgroundColor = RGB11(188, 188, 188);
    [vieww addSubview:lineview];
    vieww.frame = CGRectMake(vieww.x, vieww.y, vieww.width, CGRectGetMaxY(commentLabel.frame)+10);
    
    return vieww;
}
#pragma mark tableview结束
#pragma mark 手势事件  删除评论 自己的评论以及回复别人的
-(void)imageTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    UIAlertView *delAlert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"确定要删除评论？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    [delAlert show];
    
}

#pragma mark 手势事件 回复手势
-(void)replyTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    ReplyActivityController *rep = [ReplyActivityController  new];
    rep.hidesBottomBarWhenPushed = YES;
    NSString *nameStr = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"realname"];
    //    nameStr  = [nameStr stringByReplacingCharactersInRange:NSMakeRange(1, nameStr.length-1) withString:@"**"];
    NSString *commentStr = _videoCommentUuid;
    rep.commentStr = commentStr;
    rep.nameStr = nameStr;
    rep.isVideoStr = @"yes";
    rep.replyContent = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment"];
    [self.navigationController pushViewController:rep animated:YES];
    
}
#pragma mark 底部的评论按钮
-(void)barToolVideo{
    
    bottomView = [[UIView alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height-49-SafeAreaBottomHeight, self.view.frame.size.width, 49)];
    bottomView.backgroundColor = [UIColor whiteColor];//RGB(180, 170, 179);//;[UIColor whiteColor];
    bottomView.hidden = YES;
    [self.view addSubview:bottomView];
    
    fideld = [[UITextField alloc]init];
    fideld.frame = CGRectMake(10, 4.5, SCREEN_WIDTH-85, 40);
    fideld.delegate = self;
    fideld.placeholder = @"我也说一句";
    fideld.borderStyle = UITextBorderStyleRoundedRect;
    fideld.backgroundColor = [UIColor whiteColor];
    [bottomView addSubview:fideld];
    
    
    commitBtn =[UIButton new];
    [bottomView addSubview:commitBtn];
    commitBtn.frame = CGRectMake(kMainScreenWidth-65, 10, 55, 40);
    commitBtn.centerYy = fideld.centerYy;
    commitBtn.backgroundColor = RGB11(146, 60, 53);
    commitBtn.layer.cornerRadius = 5 ;
    commitBtn.layer.masksToBounds = YES;
    [commitBtn setTitle:@"发送" forState:0];
    [commitBtn setTitleColor:[UIColor whiteColor] forState:0];
    [commitBtn addTarget:self action:@selector(commitAction:) forControlEvents:UIControlEventTouchUpInside];//gzz0811
    
}

#pragma mark textfield  keyBoard的收起弹出
- (void)keyboardWillShow:(NSNotification *)notification {
    
    //获取通知传递过来的信息
    NSDictionary* info = [notification userInfo];
    //获取键盘的size
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
  
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);

    
}

- (void)keyboardWillHide:(NSNotification *)notification {
    
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-160, SCREEN_WIDTH, 160);
    
    
}

- (void)textFieldDidBeginEditing:(UITextField *)textField{
    [textField becomeFirstResponder];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    
    return YES;
}
-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    
    bagView.hidden = NO;
    smallView.hidden = NO;
    return NO;
}

//创建一个半透明的view覆盖页面
-(void)makeUiTextView{
    
    bagView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, [[UIScreen mainScreen] bounds].size.height)];
    bagView.backgroundColor = [UIColor blackColor];
    bagView.alpha = 0.7;
    bagView.hidden = YES;
    [self.view addSubview:bagView];
    
    smallView = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-160-SafeAreaBottomHeight, SCREEN_WIDTH, 160)];
    smallView.backgroundColor = [UIColor colorWithRed:223/255.0 green:224/255.0 blue:225/255.0 alpha:1.0];
    smallView.hidden = YES;
    [self.view addSubview:smallView];
    
    cancleBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 50, 30)];
    [cancleBtn setTitle:@"取消" forState:(UIControlStateNormal)];
    [cancleBtn setTitleColor:[UIColor lightGrayColor] forState:(UIControlStateNormal)];
    [cancleBtn addTarget:self action:@selector(hideBagView) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:cancleBtn];
    
    enSureBtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-50, 0, 50, 30)];
    [enSureBtn setTitle:@"确定" forState:(UIControlStateNormal)];
    //    [enSureBtn setTitleColor:[UIColor colorWithRed:146/255.0 green:60/255.0 blue:53/255.0 alpha:1.0] forState:(UIControlStateNormal)];
    [enSureBtn setTitleColor:RGB11(146, 60, 53) forState:(UIControlStateNormal)];
    
    
    [enSureBtn addTarget:self action:@selector(hideBagViewAnd) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:enSureBtn];
    
    showLB = [[UILabel alloc]initWithFrame:CGRectMake((SCREEN_WIDTH-60)/2, 0, 60, 30)];
    showLB.text = @"写评论";
    [smallView addSubview:showLB];
    
    textView = [[UITextView alloc]initWithFrame:CGRectMake(20, 35, SCREEN_WIDTH-40, 115)];
    textView.backgroundColor = [UIColor whiteColor];
    textView.font = [UIFont systemFontOfSize:16.0];
    
    [smallView addSubview:textView];
    
}


-(void)hideBagViewAnd{

    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = textView.text;
    [textView resignFirstResponder];
}
-(void)hideBagView{
    
    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = @"";
    [textView resignFirstResponder];
}
#pragma mark  发送  提交按钮点击
-(void)commitAction:(UIButton *)btn{
    
    [fideld resignFirstResponder];
    //    MCLog(@"commit click  %@",fideld.text);
    comContent = fideld.text;
    if (comContent.length <=0 ||[comContent isEqualToString:@"(null)"] ||[comContent isEqualToString:@"<null>"]) {
        [self showHint:@"请输入评论内容"];
        return;
    }
    [self addCommentRequestVideo];
    [fideld setText:@""];//清空里面的内容
}
#pragma mark 收藏的按钮
-(void)storeClick{
    
    //先讲之前的收藏隐藏起来，做个分享功能测试
    if ([_isCollection isEqualToString:@"0"]) {
        [self storeRequestVideo];
    }else if([_isCollection isEqualToString:@"1"]){
        
        [self undoStoreRequestVideo];
        
    }else{
        
    }
}

#pragma mark 新友盟分享
- (void)shareAction
{

    NSString *descr = _videoDescribeStr;
    NSString *title =[NSString stringWithFormat:@"%@",self.titleName];
    
    NSString *weburl = [NSString stringWithFormat:@"%@%@&expertshare=videoshare",videodetailURL,_videoCommentUuid];
    
    NSString *imageUrl = [NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath];
    NSLog(@"分享出去的链接%@",weburl);
    NSDictionary *dic =[[NSDictionary alloc]init];
    if ([DicRemove isBlankString:self.contentID]) {
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl};
        
    }else{
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl,@"contentID":self.contentID};
    }
    UmengEnclosed *umeng = [UmengEnclosed sharedUmengEnclosed];
    [umeng customWebShareWithVC:self SocialType:SType_sina_wx_qq shareType:ShareWebPages webData:dic];
}

#pragma mark  read接口
-(void)readAddRequest{
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = _videoCommentUuid;
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            self.isCollection = Collection;
            if ([_isCollection isEqualToString:@"0"]) {
                //        [rightItem setBackgroundColor:[UIColor redColor]];
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec2@2x"];
            }else{
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec1@2x"];
                
            }
            
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}

#pragma mark 收藏视频接口
-(void)storeRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@collection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"title"] = [NSString stringWithFormat:@"%@",_titleName];
    dicm[@"path"] = [NSString stringWithFormat:@"%@",_videoPath];
    dicm[@"readnum"] = [NSString stringWithFormat:@"%@",_readnum];
    //    dicm[@"readnum"] = @"300";
    dicm[@"imgpath"] = [NSString stringWithFormat:@"%@",_imagePath];
    dicm[@"public_name"] = [NSString stringWithFormat:@"%@",_public_name];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
          
            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            
            //            [rightItem setBackgroundColor:[UIColor blueColor]];
            _isCollection = [NSString stringWithFormat:@"%d",1];
            
            [self showHint:@"收藏成功"];
            
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        NSLog(@"%@",error);
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 取消收藏视频接口
-(void)undoStoreRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@discollection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
      
            storeImg.image = [UIImage imageNamed:@"circollec2@2x"];
            _isCollection = [NSString stringWithFormat:@"%d",0];
            
            if ([self.isStore isEqualToString:@"yes"]) {
                
            }else{
                
                GDXZLog(@"那就是不掉取block");
            }
            
            [self showHint:@"取消收藏成功"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma  接口添加评论
-(void)addCommentRequestVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@addComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"article_uuid"]= [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"comment"] =[NSString stringWithFormat:@"%@",comContent];
    dicm[@"type"] = @"8";
    pageNum = 1;//gzz1121
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];//gzz1121!
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                [_dataMarryDetail  removeAllObjects];
                
                [_dataMarryDetail addObjectsFromArray:arr];
                
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
                textView.text = @"";//gzz1025
                [self showHint:@"发表评论成功"];
                
            }
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 视频评论列表的接口
-(void)dataRequestInterfaceDetail{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@commentList",IMAURLAPP];//待gzz1108
    
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    dicm[@"uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                
                [_dataMarryDetail addObjectsFromArray:arr];
                [_videodetailTabview reloadData];
            }else{
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
            }
            
        }else{
            [self showHint:[dic  objectForKey:@"message"]];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
    
    
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 1) {
        [self delelPinglunVideo];
    }else{
        
        //        MCLog(@"取消了");
    }
    
}
#pragma mark  删除评论接口
-(void)delelPinglunVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@deleteComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    NSString *commandUuid = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment_uuid"];
    dicm[@"uuid"] = commandUuid;
    
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
     
            [_dataMarryDetail  removeObjectAtIndex:whichTouchInt];
            __weak typeof(self) wakeself = self;
            [wakeself.videodetailTabview reloadData];//gzz1122R
            
            [self showHint:@"删除评论成功"];
            
        }else{
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
            [self showHint:[dic objectForKey:@"message"]];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
}
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)str{
    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
         if ([str isEqualToString:@"liulan"]) {
                      [weakSelf watchHistoryRequest];

              }else if([str isEqualToString:@"detail"]){
                  [weakSelf docDatialRequest];

              }else if([str isEqualToString:@"isVideoStore"]){
                  [weakSelf isVideoDownloadRecordRequest];

              }else if([str isEqualToString:@"payVideoDown"]){
                  [weakSelf payVideoDownload];

              }else if([str isEqualToString:@"getwalfare"]){
                  [weakSelf getWelfareNumRequest];

              }else if([str isEqualToString:@"usewalfare"]){
                  [weakSelf useWelfareNumRequest];

              }

        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        
               if ([str isEqualToString:@"liulan"]) {
                   [weakSelf watchHistoryRequest];

               }else if([str isEqualToString:@"detail"]){
                   [weakSelf docDatialRequest];

               }else if([str isEqualToString:@"isVideoStore"]){
                   [weakSelf isVideoDownloadRecordRequest];
                   
               }else if([str isEqualToString:@"payVideoDown"]){
                   [weakSelf payVideoDownload];

               }else if([str isEqualToString:@"getwalfare"]){
                   [weakSelf getWelfareNumRequest];

               }else if([str isEqualToString:@"usewalfare"]){
                   [weakSelf useWelfareNumRequest];

               }
           
    }];
    
}

#pragma mark s视频x详情接口
-(void)docDatialRequest{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@videoDetail",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        NSDictionary *dicd =[NSDictionary dictionaryWithDictionary:data[@"video"]];
        if ([coder isEqualToString:@"200"]) {
            weakSelf.videoPath = [NSString stringWithFormat:@"%@",dicd[@"path"]];
            weakSelf.videoDescribeStr = [NSString stringWithFormat:@"%@",dicd[@"note"]];
            weakSelf.isCollection = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.titleName = [NSString stringWithFormat:@"%@",dicd[@"name"]];
             weakSelf.imagePath = [NSString stringWithFormat:@"%@",dicd[@"imgpath"]];
            weakSelf.public_name = [NSString stringWithFormat:@"%@",dicd[@"public_name"]];
            weakSelf.readnum = [NSString stringWithFormat:@"%@",dicd[@"readnum"]];
            weakSelf.isStore = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.contentID = [NSString stringWithFormat:@"%@",dicd[@"content"]];
            weakSelf.polyv_uuidStr = [NSString stringWithFormat:@"%@",dicd[@"polyv_uuid"]];

            weakSelf.pointStr = [NSString stringWithFormat:@"%@",dicd[@"point"]];

            if ([DicRemove  isBlankString:weakSelf.polyv_uuidStr]) {

                NSString *str = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                 NSRange range = [str rangeOfString:@"vid\""];

            if (range.location != NSNotFound) {
                MCLog(@"早到了");
                NSString *str2 = [str substringFromIndex:(range.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"\""];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
            }else{
                MCLog(@"没找到");
                NSString *str11 = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                NSRange range1 = [str11 rangeOfString:@"vid'"];
                if (range1.location != NSNotFound) {
                NSString *str2 = [str11 substringFromIndex:(range1.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"'"];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
                }

            }

                
            }
              
            if ([self.isCollection isEqualToString:@"0"]) {
                storeImg.image = [UIImage imageNamed:@"circollec2"];
            }else{
                storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            }
            [weakSelf bottomActionVideo:leftBtnVideo];
            [weakSelf makeUIVideoDetail];
            [weakSelf barToolVideo];
            [weakSelf makeUiTextView];
//   gzz20200509
//            [weakSelf getStates];
            [weakSelf getWelfareNumRequest];

        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}

#pragma mark  是否缓存过该视频
-(void)isVideoDownloadRecordRequest{
    [MBProgressHUD hideHUDForView:self.view animated:YES];

//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@isVideoDownloadRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            isVideoStorestr = [NSString stringWithFormat:@"%@",data[@"result"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];

           [weakSelf getSystemTimeFromServer:@"detail"];
        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark  支付积分
-(void)payVideoDownload{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@payVideoDownload",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            
            isVideoStorestr =   @"1";
         if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
             NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
         
             
             [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
             
          }
            
        }else{
            if ([coder isEqualToString:@"106"]) {
//                [self showHint:@"您的积分不够，请赚取积分或购买后来支付！"];
                
                
                UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"您的积分不足，是否购买积分？" preferredStyle:(UIAlertControllerStyleAlert)];
                UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
                    
                }];
                
                [alertController addAction:cancelAction];
                WEAKSELFS
                UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
                    [weakSelf buybounds];
                }];
                [alertController addAction:sureAction];
                [self presentViewController:alertController animated:YES completion:nil];
                
            }

        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
-(void)buybounds{
    bugBonusVC *vc = [[bugBonusVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}


#pragma mark  专家端 - 添加视频浏览记录
-(void)watchHistoryRequest{
    
    NSString *Strurl = [NSString stringWithFormat:@"%@addVideoWatchRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        
        if ([coder isEqualToString:@"200"]) {
          
            
        }else{
            
            [self showHint:message];
        }
        
    } failure:^(NSError *error) {
        
        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark navbar及返回
-(void)navBarVideoDetail{
//    gzz191101
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClickVideoDetail)];
    self.navigationItem.leftBarButtonItem=backItem;
    
    UIView *rightView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 70, 40)];
    rightView.backgroundColor = [UIColor clearColor];
    
    UIImageView *shareImag = [UIImageView creatImageviewWithFrame:CGRectMake(0, 10, 20, 20) imaged:[UIImage imageNamed:@"分享@2x"]];
    [rightView addSubview:shareImag];
    
    UIButton * shareButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 34, 40)];
    [rightView addSubview:shareButton];
    shareButton.backgroundColor = [UIColor clearColor];
    [shareButton addTarget:self action:@selector(shareAction) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIImageView *btnImag = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(shareImag.frame)+20, 7.5, 25, 25) imaged:[UIImage imageNamed:@"icodd"]];
    [rightView addSubview:btnImag];
    storeImg = btnImag;
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(CGRectGetMaxX(shareButton.frame)+1, 0, 34, 40);
    btn.backgroundColor = [UIColor clearColor];
    rightItem = btn;
    [rightView addSubview:btn];
    [rightItem addTarget:self action:@selector(storeClick) forControlEvents:UIControlEventTouchUpInside];
    
    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:rightView];
    self.navigationItem.rightBarButtonItem = pulish;
    
    
 
    
}
-(void)backClickVideoDetail{
    [self.player destroyPlayer];
    if ([self.isStore isEqualToString:@"yes"]) {
        
        self.reloadBlock(_isCollection);
    }
    
    if ([_typesVideo isEqualToString:@"type"]) {//gzz1124
        
        self.reloadBlock(_videoCommentUuid);
        
    }else if([_typesVideo isEqualToString:@"videoHome"])//videoHome
    {
        self.reloadBlock(_videoCommentUuid);
        
    }else{
        
        
    }
    
    

    NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
    [des setObject:@"isVideo" forKey:@"jingxuan_video"];
    
    
    NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
    [dess setObject:_videoCommentUuid forKey:@"jingxuan_videoUUID"]; // jingxuan_videoUUID 11
    
    if ([_isJingxuanInDetail isEqualToString:@"yes"]) {
        NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
        [des setObject:@"isJingxuanInDe" forKey:@"isJingxuanInDetail"];
    } //gzz170216  111111  isJingxuanInDetail
    
    
    [self.navigationController popViewControllerAnimated:YES];
}


-(NSDictionary *)clearErrorDataDateil:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
    
}




#pragma mark - util

+ (NSString *)formatFilesize:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
- (NSString *)downloadStateImgFromState:(PLVVodDownloadState )state{
    NSString *imageName = nil;
    switch (state) {
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStatePreparing:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:
            imageName = @"plv_icon_download_stop";
            break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:
            imageName = @"plv_icon_download_processing";
            break;
        case PLVVodDownloadStateSuccess:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateFailed:
            imageName = @"plv_icon_download_fail";
            break;
    }
    
    return imageName;
}
#pragma mark -- handle
- (void)handleStopDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVideoParams:params];
#endif
}

- (void)handleStartDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] startDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] startDownloadWithVideoParams:params];
#endif
    
    if ([PLVVodDownloadManager sharedManager].isDownloading){
        //
//        self.queueDownloadButton.selected = YES;
    }
}
#pragma mark  下载状态的改变
-(void)showType:(NSInteger)row{
    // 播放本地缓存视频
     PLVVodDownloadInfo *info = self.downloadInfos[row];
     if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
         // 暂停下载
         [self  handleStopDownloadVideo:info index:row ];
     } else {
         // 开始下载
         [self handleStartDownloadVideo:info index:row];
     }
}
#pragma mark  删除下载 正在下载的
-(void)deleDownload:(NSInteger)index{
       PLVVodDownloadInfo *info = self.downloadInfos[index];
       if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
           // 暂停下载
           [self  handleStopDownloadVideo:info index:index];
       } else {
//           // 开始下载
//           [self handleStartDownloadVideo:info index:row];
       }
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

           [weakSelf handleStartDownloadVideo:info index:index];
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
             
          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
              PLVVodDownloadInfo *downloadInfo = self.downloadInfos[index];
              
          #ifndef PLVSupportDownloadAudio
              [downloadManager removeDownloadWithVid:downloadInfo.video.vid error:nil];
          #else
              // 使用音频下载功能的客户，调用如下方法
              PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:downloadInfo.vid fileType:downloadInfo.fileType];
              [downloadManager removeDownloadWithVideoParams:params error:nil];
          #endif
              
              [self.downloadInfos removeObject:downloadInfo];
           
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
           isHaveDownload = @"no";
           
    

           
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}

#pragma mark  删除下载 已经完成的
-(void)delecomDownload:(NSInteger)index{
      
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

          
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
           
        PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];

        [downloadManager removeDownloadWithVid:self.polyv_uuidStr error:nil];
        [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
            isHaveDownload = @"no";
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}


#pragma mark - util  tool

+ (NSString *)formatFilesizeaa:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
+ (NSString *)timeFormatStringWithTime:(NSTimeInterval )time{
    
    NSInteger hour = time/60/60;
    NSInteger minite = (time - hour*60*60)/60;
    NSInteger second = (time - hour*60*60 - minite*60);
    
    NSString *timeStr =[NSString stringWithFormat:@"%02d:%02d:%02d", (int)hour, (int)minite,(int)second];
    
    return timeStr;
}
///expertAPI/videoDetail
#pragma mark 禁用手势

-(void)viewDidAppear:(BOOL)animated {
[super viewDidAppear:animated];
//if([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
//    self.navigationController.interactivePopGestureRecognizer.enabled = NO;
//}
    [self popGestureChange:self enable:NO];
}



-(void)popGestureChange:(UIViewController *)vc enable:(BOOL)enable{
    if ([vc.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        //遍历所有的手势
        for (UIGestureRecognizer *popGesture in vc.navigationController.interactivePopGestureRecognizer.view.gestureRecognizers) {
            popGesture.enabled = enable;
        }
    }
}

@end

































===================

#import <WebKit/WebKit.h>
WKUIDelegate,WKNavigationDelegate>
    WKWebView *wkkkwebView ;


 NSString *url = [NSString stringWithFormat:@"%@%@",NETADRESS,_strPath];
    // 自适应屏幕大小 iconShareMM //gzz180302 gzz180312 可以缩放了
    NSString *jScript = @"var meta = document.createElement('meta'); meta.setAttribute('name', 'viewport'); meta.setAttribute('content', 'width=device-width'); document.getElementsByTagName('head')[0].appendChild(meta);";
    
    WKUserScript *wkUScript = [[WKUserScript alloc] initWithSource:jScript injectionTime:WKUserScriptInjectionTimeAtDocumentEnd forMainFrameOnly:YES];
    
    WKUserContentController *wkUController = [[WKUserContentController alloc] init];
    
    [wkUController addUserScript:wkUScript];
    
    WKWebViewConfiguration *wkWebConfig = [[WKWebViewConfiguration alloc] init];
    
    wkWebConfig.userContentController = wkUController;
    
    wkkkwebView = [[WKWebView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-44) configuration:wkWebConfig];
    wkkkwebView.UIDelegate = self;
    wkkkwebView.navigationDelegate = self;
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:url]];
    //3.加载请求
    [wkkkwebView loadRequest:request];
    //4. 视图添加
    [self.view addSubview:wkkkwebView];
    


ragma mark --WKNavigationDelegate
-(void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler{
    
    
    decisionHandler(WKNavigationActionPolicyAllow);
    //跳转套你的控制器
    NSString *ContentStr0 = [NSString stringWithFormat:@"%@",webView.URL.absoluteString];
    
    NSLog(@"---ContentStr02222---%@",ContentStr0);
    if (didLoad == YES) {
        NSString *ContentStr = [NSString stringWithFormat:@"%@",navigationAction.request.URL.absoluteString];
        NSArray *strArray = [ContentStr componentsSeparatedByString:@"#"];
        if (strArray.count>1) {
            
            NSString *labelStr = [NSString stringWithFormat:@"%@",strArray[1]];
            GDXZLog(@"labelStr ===%@",labelStr);
            NSString *str = [labelStr stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
            GDXZLog(@"str ===%@",str);
            
            aboutKepuVC *ss = [aboutKepuVC new];
            ss.hidesBottomBarWhenPushed = YES;
            //        ss.topicName = @"news";//Well_news
            ss.topicName = @"Well_news";//Well_news
            //        ss.topicName = @"Well_kepu";//Well_news
            
            ss.keyWords = str;
            [self.navigationController pushViewController:ss animated:YES];
            
        }
        
    }
    
    
}

// 2.页面开始加载时调用
-(void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    
}

-(void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler{
    
    decisionHandler(WKNavigationResponsePolicyAllow);
    
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    
}

//3. 当内容开始返回时调用

-(void)webView:(WKWebView *)webView didCommitNavigation:(WKNavigation *)navigation{
    
    
    
}

// 4.页面加载完成之后调用

-(void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation{

    didLoad = YES;
    toolBar11View.hidden = NO;
    hengxiand.hidden = NO;
    [MBProgressHUD hideHUDForView:self.view animated:YES];
}


// 页面加载失败时调用
-(void)webView:(WKWebView *)webView didFailNavigation:(WKNavigation *)navigation withError:(NSError *)error{
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    
}


-(void)webView:(WKWebView *)webView didReceiveServerRedirectForProvisionalNavigation:(null_unspecified WKNavigation *)navigation{
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    
    
}







    UIView * view1 = [[UIView alloc]initWithFrame:CGRectMake(0,  ConentViewHeight-43-SafeAreaBottomHeight, kMainScreenWidth, 43)];




gzz20200509 肝胆视频详情


#import "VideosDetailNewVC.h"
#import "VideoStoresController.h"
#import "ReplyActivityController.h"
#import "AboutGandanController.h"

#import "bugBonusVC.h"
#import "RightImageBtnOnly.h"
#import <PLVVodSDK/PLVVodSDK.h>
#import "PLVCourseNetworking.h"
#import "UIColor+PLVVod.h"
#import "PLVVodSkinPlayerController.h"
#import "PLVDownloadCompleteInfoModel.h"
#import "PLVDownLoaProcessingNewCell.h"
#import "videoNewDetailDownLoadCell.h"//缓存中

#import "VideoNewDetailDownCompeleteCell.h" //已完成

#import "PLVDownloadManagerNewVC.h"

//增加专家姓名
#import <PLVVodSDK/PLVVodDownloadManager+Database.h>
#import "PLVVodExtendVideoInfo+WCTTableCoding.h"
#import "PLVVodDBManager.h"
#import "PLVVodExtendVideoInfo.h"

#import "newbofangViewController.h"//播放
@interface VideosDetailNewVC ()<UIScrollViewDelegate,UITextFieldDelegate,UITableViewDelegate,UITableViewDataSource,UIAlertViewDelegate,UIWebViewDelegate,UIWebViewDelegate>{
    UIScrollView *scrollv;
    UIScrollView *ziScrollv;
    
    UIImageView *headImageview;
    UIView *headView;
    UIView *bottomViewDownload;//底部xiazaiviwe
    
   UIButton *leftBtnVideo;//视频简介
   UIButton *rightBtnVideo;//评论 现在z是在中间

    UIView *coverRightView;//包裹带缓存的view
   RightImageBtnOnly  *rihgtStorePicBtn;//右边的缓存按钮带图片的
   
   NSInteger isLeft;// 左0 中 1  右 2
   
   UIView *leftLine;
   UIView *middleLine;
   UIView *rightLine;
       
    
    UILabel *desLabel;
    
    
    UIImageView *imagershuju;
    UILabel *tiwuxianLab;//提示无数据时
    
    
    UITextField *fideld;
    UIView *bottomView;
    BOOL keyBoardIsUp;
    UIButton *commitBtn;
    UIView *webBottomView;
    UILabel *mountLabel;
    NSString *comContent;
    NSInteger whichTouchInt;
    
    UIView * bagView;//评论覆盖的背景view
    UIView * smallView;//小view
    UIButton * cancleBtn;//取消按钮
    UIButton * enSureBtn;//确定按钮
    UILabel * showLB;//写评论标签
    UITextView * textView;
    UIWebView  *gdWebview;
    
    NSInteger pageNum;//gzz1121!
    UIButton *rightItem;
    UIWebView *viewWeb;
    UIBarButtonItem *right1;
    UIImageView * shareimaView ;
    UIButton *searchBtn;
    
    UIImageView *storeImg;
    
    NSString *sysTimestr;//系统时间
    
    //    保利威视
    UIButton *cacheBtn;
    UIImageView *imageBag;//
    
    NSString*isHaveDownload;// 是不是已经存在下载队列中  no 没下载；yes下载中；compeleteYES已缓存；
    UIButton *downloadbtn;//
    
    NSInteger indexInInfos;//是第几个
    
    BOOL isScore;//是否显示积分 默认yes
    
    UILabel *scorelaebl;//多少积分显示label
    
    NSString *isVideoStorestr;//是不是缓存过该视频 o0没有。1 有的
    
}
@property(nonatomic,strong)UITableView *videodetailTabview;
@property(nonatomic,strong)NSMutableArray *dataMarryDetail;

//保利威视
@property (nonatomic,strong) NSMutableArray *dataArr;
@property (nonatomic,strong) UITableView *downloadtableview;
@property (nonatomic, strong) PLVVodSkinPlayerController *player;//gzz190327
@property (nonatomic, strong) UIView *playerPlaceholder;
@property (nonatomic, strong) NSMutableArray<PLVVodDownloadInfo *> *downloadInfos;
@property (nonatomic, strong) NSMutableDictionary<NSString *, videoNewDetailDownLoadCell *> *downloadItemCellDic;

//当前视频现在完成后的信息 展示在cell中
@property(nonatomic,strong)PLVVodDownloadInfo *completeDownloadInfo;

@end

@implementation VideosDetailNewVC
//懒加载
- (PLVVodDownloadInfo *)completeDownloadInfo{
    if (!_completeDownloadInfo) {
        _completeDownloadInfo = [[PLVVodDownloadInfo alloc]init];
    }
    return _completeDownloadInfo;
}


#pragma mark  property
- (void)setDownloadInfos:(NSMutableArray<PLVVodDownloadInfo *> *)downloadInfos {
    _downloadInfos = downloadInfos;
    // 设置单元格字典
    NSMutableDictionary *downloadItemCellDic = [NSMutableDictionary dictionary];
    for (PLVVodDownloadInfo *info in downloadInfos) {
        videoNewDetailDownLoadCell *cell = [videoNewDetailDownLoadCell cellWithTableView:self.downloadtableview];
          downloadItemCellDic[info.identifier] = cell;
    }
    self.downloadItemCellDic = downloadItemCellDic;
    // 设置回调
    __weak typeof(self) weakSelf = self;
    for (PLVVodDownloadInfo *info in downloadInfos) {
        // 下载状态改变回调
        info.stateDidChangeBlock = ^(PLVVodDownloadInfo *info) {
            dispatch_async(dispatch_get_main_queue(), ^{
                if (info.state == PLVVodDownloadStateSuccess){ //下载成功，从列表中删除
                    [weakSelf handleDownloadSuccess:info];
                }
                [weakSelf updateCellWithDownloadInfo:info];
            });
        };
        
    // 下载进度回调
    info.progressDidChangeBlock = ^(PLVVodDownloadInfo *info) {
        //NSLog(@"vid: %@, progress: %f", info.vid, info.progress);
        videoNewDetailDownLoadCell *cell = weakSelf.downloadItemCellDic[info.identifier];
        float receivedSize = MIN(info.progress, 1) * info.filesize;
        NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
        dispatch_async(dispatch_get_main_queue(), ^{
            cell.progressLable.text = downloadProgressStr;
        });
    };
  }
}
- (void)updateCellWithDownloadInfo:(PLVVodDownloadInfo *)info {
    videoNewDetailDownLoadCell *cell = self.downloadItemCellDic[info.identifier];
    cell.backgroundColor = RGB(244, 244, 244);

    NSString *title  = NSStringFromPLVVodDownloadState(info.state);
    UIImage *images = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
    cell.downloadStateImageview.image = images;
    cell.videoStateLable.text = title;

    switch (info.state) {
        case PLVVodDownloadStatePreparing:
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
           cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x4A90E2];
          cell.videoStateLable.textColor = [UIColor colorWithHex:0x4A90E2];
        } break;
        case PLVVodDownloadStateSuccess:{
            cell.progressLable.textColor = [UIColor colorWithHex:0x666666];
            cell.videoStateLable.textColor = [UIColor colorWithHex:0x666666];
        } break;
        case PLVVodDownloadStateFailed:{
            cell.progressLable.textColor = [UIColor redColor];
             cell.videoStateLable.textColor = [UIColor redColor];
        } break;
    }
}

#pragma mark  下载视频
-(void)ddownloadddVideos:(NSString*)vid_Str{
      WEAKSELFS
         [PLVVodVideo requestVideoPriorityCacheWithVid:vid_Str completion:^(PLVVodVideo *video, NSError *error) {
             if (video.available){
                 [weakSelf downloadVideo:video];
             }
         }];
    
}

#pragma mark   监听下载的状态更新UI
-(void)listenDownload{
    

    WEAKSELFS
      PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
         
      [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
             dispatch_async(dispatch_get_main_queue(), ^{
                 for (PLVVodDownloadInfo *info in downloadInfos) {
                     if ([info.vid isEqualToString:self.polyv_uuidStr]) {
                         weakSelf.downloadtableview.hidden =  NO;//gzz20191107
                        weakSelf.downloadInfos = downloadInfos.mutableCopy;
                        [weakSelf.downloadtableview reloadData];
                     }
                 }

             });
         }];
}

#pragma mark 下载的代理
- (void)downloadVideo:(PLVVodVideo *)video{
           
       PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
       PLVVodDownloadInfo *info = [downloadManager downloadVideo:video];
       // info.quality = 2;
        #ifdef PLVSupportDownloadAudio
            // 音频下载测试入口，需要音频下载功能客户，放开注释
        [downloadManager downloadAudio:video];
            
        #endif
           if (info) NSLog(@"%@ - %zd 已加入下载队列", info.video.vid, info.quality);
           
        MCLog(@"=====%zd",info.quality);
    
//      插入
        [PLVVodDownloadManager createExtendTableWithClass:[PLVVodExtendVideoInfo class]];
        PLVVodExtendVideoInfo *extendInfo = [PLVVodExtendVideoInfo new];
        extendInfo.vid = self.polyv_uuidStr;
            extendInfo.CusCatagoryName =  self.public_name;
            extendInfo.CusCourseName = self.titleName;//课题名字
        [PLVVodDownloadManager insertOrUpdateWithExtendInfo:extendInfo];

//      }
        dispatch_async(dispatch_get_main_queue(), ^{
            [downloadbtn setTitle:@"下载---" forState: 0];
        });
        isHaveDownload = @"yes";
       [self listenDownload];
    
//    };
}

#pragma mark -- 下载完成 handle
- (void)handleDownloadSuccess:(PLVVodDownloadInfo *)downloadInfo{
    isHaveDownload = @"compeleteYES";
    [rihgtStorePicBtn setTitle:@"已缓存" forState:0];
    
//    [cacheBtn setTitle:@"查看缓存" forState:0];
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
    [self.downloadInfos removeObject:downloadInfo];
    [self.downloadItemCellDic removeObjectForKey:downloadInfo.identifier];
    
    self.completeDownloadInfo = [[PLVVodDownloadManager sharedManager] requestDownloadInfoWithVid:self.polyv_uuidStr];
    
    [self.downloadtableview reloadData];
    
    
}

- (BOOL)prefersStatusBarHidden {
    return self.player.prefersStatusBarHidden;
}
- (UIStatusBarStyle)preferredStatusBarStyle {
    return self.player.preferredStatusBarStyle;
}




-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
    
    if (isLeft == 0) {
        [self getStates];
    }
         AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
          delegate.allowRotation = 1;
        
        if (isLeft == 1) {
            [_dataMarryDetail removeAllObjects];
            pageNum = 1;
            [self dataRequestInterfaceDetail];
        }
    
    
    [theUserDefaultGcc setObject:@"yes" forKey:@"videoAdsToAbout"];
    
    
    
}

#pragma mark  已缓存 缓存中 待缓存的状态
-(void)getStates{
   WEAKSELFS
    isHaveDownload = @"no";  //进来就置为 点击缓存状态
                    dispatch_group_t group = dispatch_group_create();
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                           // 从数据库中读取已缓存视频详细信息
                              // TODO:也可以从开发者自定义数据库中读取数据,方便扩展
                              NSArray<PLVVodDownloadInfo *> *dbInfos = [[PLVVodDownloadManager sharedManager] requestDownloadCompleteList];
                              NSMutableDictionary *dbCachedDics = [[NSMutableDictionary alloc] init];
                              [dbInfos enumerateObjectsUsingBlock:^(PLVVodDownloadInfo * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
                                  [dbCachedDics setObject:obj forKey:obj.vid];
                                  if ([obj.vid isEqualToString:self.polyv_uuidStr]) {
                         //              weakSelf.downloadInfos = downloadInfos.mutableCopy;
                                        isHaveDownload = @"compeleteYES";
                                      dispatch_async(dispatch_get_main_queue(), ^{
                                          weakSelf.completeDownloadInfo = obj;//
                                           [rihgtStorePicBtn setTitle:@"已缓存" forState:0];
                                    
                                          coverRightView.x = SCREEN_WIDTH/3.0*2;
                                          coverRightView.width = SCREEN_WIDTH/3.0;
                                          scorelaebl.hidden = YES;
                                          [rihgtStorePicBtn sizeToFit];
                                          rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
                                          
                                          [rihgtStorePicBtn sizeToFit];
                                          rihgtStorePicBtn.frame = CGRectMake(SCREEN_WIDTH/3*2+(SCREEN_WIDTH/3-rihgtStorePicBtn.width)/2, rihgtStorePicBtn.y, rihgtStorePicBtn.width,44);//d


                                          [weakSelf.downloadInfos removeAllObjects];
                                          [weakSelf.downloadItemCellDic removeObjectForKey:obj.identifier];
                                             
//                                    [cacheBtn setTitle:@"查看缓存" forState:0];
                                          NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                                           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                      });
                                     }
                      
                              }];
                       });
                        
                    dispatch_group_async(group, dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                      //    正在下载的
                          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
                                 
                              [downloadManager requstDownloadProcessingListWithCompletion:^(NSArray<PLVVodDownloadInfo *> *downloadInfos) {
                                     dispatch_async(dispatch_get_main_queue(), ^{
                                         for (PLVVodDownloadInfo *info in downloadInfos) {
                                             if ([info.vid isEqualToString:self.polyv_uuidStr]) {
                                               weakSelf.downloadInfos = downloadInfos.mutableCopy;
                                                 isHaveDownload = @"yes";
//                                                 [downloadbtn setTitle:@"下载中1" forState:0];
                                                 [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
                                                 
//        coverRightView.frame = CGRectMake(SCREEN_WIDTH/3.0*2, coverRightView.y, SCREEN_WIDTH/3.0,44);
                                                  coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);

                                                 scorelaebl.hidden = YES;
                                                 [rihgtStorePicBtn sizeToFit];
                                                 rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
                                                 
        
                                                 [weakSelf.downloadtableview reloadData];
//                                                 [cacheBtn setTitle:@"视频缓存中" forState:0];
                                                 NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                                                  [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                             }
                                         }
                                         
                                     });
                               }];
                      });
                    
                    dispatch_group_notify(group, dispatch_get_main_queue(), ^{
                        if ([isHaveDownload isEqualToString:@"no"]) {
//                            [downloadbtn setTitle:@"未下载1" forState:0];
                             [rihgtStorePicBtn setTitle:@"缓存" forState:0];
                 
                            if ([isVideoStorestr isEqualToString:@"1"]) {

                                 coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
                             scorelaebl.hidden = YES;
                             [rihgtStorePicBtn sizeToFit];
                             rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
                             
//                            [cacheBtn setTitle:@"点击下载" forState:0];
                                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
                                 [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                                                                [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                
                             
                            }else{
                                CGFloat xx;
                                 CGFloat widhtt;
                                 CGFloat x3;
                                  xx=  0;
                         
                                widhtt = SCREEN_WIDTH;
                            
                                x3 = 0;
                                NSInteger points = [weakSelf.pointStr integerValue];
                                if (points >0) {
                                     scorelaebl.hidden = NO;
                                    
                                      [rihgtStorePicBtn sizeToFit];
                                      rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
                                    
                                    scorelaebl.x = CGRectGetMaxX(rihgtStorePicBtn.frame);
                                     NSString *jifenstr  = [NSString stringWithFormat:@"点击下载（%ld积分）",(long)points];
//                                     [cacheBtn setTitle:jifenstr forState:0];
                                    NSMutableAttributedString * attriStr2 = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                    [attriStr2 addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                    [cacheBtn setAttributedTitle:attriStr2 forState:(UIControlStateNormal)];
                                    if (points==25) {
                                       jifenstr  = [NSString stringWithFormat:@"点击下载（限时5折,仅需%ld积分)",(long)points];
                
                                        NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:jifenstr];
                                         [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, jifenstr.length)];
                                        [attriStr addAttribute:NSForegroundColorAttributeName value:RGB11(225, 255, 0) range:NSMakeRange(7, 1)];
                                        [attriStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:25] range:NSMakeRange(7, 1)];
                                        [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                    }
                                   
                                    

                                     scorelaebl.text = jifenstr;
                                     
                                     coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
                                     coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
                                    
                                             
                                 }else{
                                coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);

                                  scorelaebl.hidden = YES;
                                  [rihgtStorePicBtn sizeToFit];
                                  rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
                                    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载（限时免费）"];
                                      [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 10)];                                                                                                                            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                                 }
 
                                
                            }

                            
                             if (isLeft == 2) {
                                 [weakSelf.downloadInfos removeAllObjects];
                                 [weakSelf.downloadtableview reloadData];
                             }
                        }
                        
                        if ([isHaveDownload isEqualToString:@"compeleteYES"]) {
                             [rihgtStorePicBtn setTitle:@"已缓存" forState:0];

                             coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
                            scorelaebl.hidden = YES;
                            [rihgtStorePicBtn sizeToFit];
                            rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
 
                             if (isLeft == 2) {
                                 [weakSelf.downloadInfos removeAllObjects];
                                 [weakSelf.downloadtableview reloadData];
                                 
                             }
                            
//                            [cacheBtn setTitle:@"查看缓存" forState:0];
                            NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"查看缓存"];
                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];                                                                                                                                                                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                         }
                        
                    });
     
            
}







-(void)viewWillDisappear:(BOOL)animated{
    
    
    [super viewWillDisappear:YES];
    
//    [self.player destroyPlayer];
    
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    
    
    AppDelegate * delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
       delegate.allowRotation = 0;
       if ([[UIDevice currentDevice]    respondsToSelector:@selector(setOrientation:)]) {
           SEL selector = NSSelectorFromString(@"setOrientation:");
           NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
           [invocation setSelector:selector];
           [invocation setTarget:[UIDevice currentDevice]];
           int val = UIInterfaceOrientationPortrait;
           [invocation setArgument:&val atIndex:2];
           [invocation invoke];
    }
    
    
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    //    navigaTionBar
    self.title = @"视频详情";
    self.navigationController.navigationBar.barTintColor = GreyColor;
    navigaTionBar
    IOS_Frame
    if ([self.isShouYe isEqualToString:@"yes"]) {
        
        [self readAddRequest];
    }
    
    shareimaView =[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 100, 100)];
    
    
    [shareimaView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath]] placeholderImage:[UIImage imageNamed:@"patientLogo.png"]];
    
    [self navBarVideoDetail];
    [self dataOpenDetail];
     [self middleThreeBtn];
    
//
//    [self makeUIVideoDetail];
//    [self barToolVideo];
//    [self makeUiTextView];
//
    
    [self DownFreshVideodetail];//gzz1121!
    [self upFreshVideodetail];//gzz1121!
    
//    浏览记录 @ liulnan ; @detial 详情  isVideoStore是缓存过该视频  payVideoDown 支付积分
    [self getSystemTimeFromServer:@"liulan"];
//     [self getSystemTimeFromServer:@"detail"];
    [self getSystemTimeFromServer:@"isVideoStore"];

    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(begainFullScreen) name:UIWindowDidBecomeVisibleNotification object:nil];//进入全屏
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(endFullScreen) name:UIWindowDidBecomeHiddenNotification object:nil];//退出全屏
    
    [_dataMarryDetail removeAllObjects];
    pageNum = 1;
    [self dataRequestInterfaceDetail];
}
#pragma mark 显示视频
-(void)makeplayer{
    
    self.playerPlaceholder = [[UIView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 200)];
    [scrollv addSubview:self.playerPlaceholder];
    // 初始化播放器
    PLVVodSkinPlayerController *player = [[PLVVodSkinPlayerController alloc] initWithNibName:nil bundle:nil];
    [player addPlayerOnPlaceholderView:self.playerPlaceholder rootViewController:self];
    player.rememberLastPosition = YES;
    player.enableBackgroundPlayback = NO;
    player.autoplay = NO;
    player.reachEndHandler = ^(PLVVodPlayerViewController *player) {
        NSLog(@"%@ finish handler.", player.video.vid);
    };
    self.player = player;
    
   imageBag = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200)];
    imageBag.image = [UIImage imageNamed:@"morenyz"];
//    NSString *urlStr = [NSString stringWithFormat:@"%@%@",ImageUrl,[_dataDic objectForKey:@"img"]];
//    [imageBag sd_setImageWithURL:[NSURL URLWithString:urlStr] placeholderImage:[UIImage imageNamed:@"morenyz"]];
    [scrollv addSubview:imageBag];
    NSString * freeVideoUuid = self.polyv_uuidStr;
    if (freeVideoUuid.length>2) {

        imageBag.hidden = YES;
        self.player.autoplay = NO;
        __weak typeof(self) weakSelf = self;
        NSString * str = [NSString stringWithFormat:@"%@",freeVideoUuid];
        [PLVVodVideo requestVideoWithVid:str completion:^(PLVVodVideo *video, NSError *error) {
            if (!video.available) return;
            weakSelf.player.video = video;

            dispatch_async(dispatch_get_main_queue(), ^{
                //            weakSelf.title = video.title;
            });
        }];
    }
    
    
}

#pragma - mark  进入全屏
-(void)begainFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = YES;
}
#pragma - mark 退出全屏
-(void)endFullScreen
{
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.allowRotation = NO;
    //强制归正：
    if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) {
        SEL selector = NSSelectorFromString(@"setOrientation:");
        NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];
        [invocation setSelector:selector];
        [invocation setTarget:[UIDevice currentDevice]];
        int val =UIInterfaceOrientationPortrait;
        [invocation setArgument:&val atIndex:2];
        [invocation invoke];
    }
}

//下拉刷新
-(void)DownFreshVideodetail{
    __weak VideosDetailNewVC *puad = self;
    [puad.videodetailTabview addHeaderWithCallback:^{
        [puad.dataMarryDetail removeAllObjects];
        pageNum = 1;
        [puad dataRequestInterfaceDetail];
        [puad.videodetailTabview headerEndRefreshing];
    }];
}
//上拉加载
-(void)upFreshVideodetail{
    __weak VideosDetailNewVC *pudb = self;
    [pudb.videodetailTabview addFooterWithCallback:^{
        pageNum++;
        [pudb dataRequestInterfaceDetail];
        [pudb.videodetailTabview footerEndRefreshing];
    }];
}

#pragma mark  中间的三个按钮
-(void)middleThreeBtn{
       scrollv = [[UIScrollView alloc]init];
       scrollv.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
       scrollv.delegate = self;
       scrollv.showsVerticalScrollIndicator = NO;
       scrollv.showsHorizontalScrollIndicator = NO;
       scrollv.contentOffset = CGPointMake(0, 0);
       scrollv.backgroundColor = [UIColor whiteColor];// RGB(228, 228, 228);//[UIColor clearColor];
       scrollv.contentSize = CGSizeMake(0, SCREEN_HEIGHT);
       scrollv.scrollEnabled = NO;
       [self.view addSubview:scrollv];
    
    
    
    NSArray * titArr =@[@"视频简介",@"评论" ] ;//,@"缓存"];
      UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, 200, SCREEN_WIDTH, 10) bgColor:RGB(239, 239, 239)];
      [scrollv addSubview:lineview];
      
      headView =[[UIView alloc]initWithFrame:CGRectMake(0, 200+10, SCREEN_WIDTH ,44)];
      [scrollv addSubview:headView];

      
      for (int i = 0; i< 3; i++) {
          if (i<2) {
              CGFloat width;
//              if (i == 1) {
//                   if (SCREEN_WIDTH == 320) {
//                        width= SCREEN_WIDTH/3.0-10;
//                   }else{
//                       width= SCREEN_WIDTH/3.0;
//
//                   }
//              }else{
                  width= SCREEN_WIDTH/2.0;
//              }
                   UIButton * bottomBtn =[UIButton buttonWithType:UIButtonTypeCustom];
                     bottomBtn.frame =CGRectMake(SCREEN_WIDTH/2*i , 0, width, 44);
                     [bottomBtn setTitle: titArr[i] forState:UIControlStateNormal];
                     [bottomBtn addTarget:self action:@selector(bottomActionVideo:) forControlEvents:UIControlEventTouchUpInside];
                     bottomBtn.tag = 1110+i;
                     bottomBtn.titleLabel.font = SYSTEMFONT(16.0);
                     [bottomBtn setBackgroundColor:[UIColor whiteColor]];
                     [bottomBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
                     
                     if (bottomBtn.tag == 1110) {
                         leftBtnVideo = bottomBtn;
                         leftBtnVideo.tag = 1110;
                     }else{
                         rightBtnVideo = bottomBtn;
                         rightBtnVideo.tag = 1111;
                     }
                     [headView addSubview:bottomBtn];
        
          }else{
//              CGFloat xx;
//              CGFloat widhtt;
//              CGFloat x3;
//
//
//            if (SCREEN_WIDTH == 320) {
//                    xx=  SCREEN_WIDTH/3*i-10;
//                    widhtt = SCREEN_WIDTH/3.0+10;
//                   x3 = SCREEN_WIDTH/3.0*2-10;
//              }else{
//                     xx=  SCREEN_WIDTH/3*i;
//                     widhtt = SCREEN_WIDTH/3.0;
//                     x3 = SCREEN_WIDTH/3.0*2;
//             }
//
//
//
//              coverRightView = [UIView createViewWithFrame:CGRectMake(xx, 0, widhtt, 44) bgColor:[UIColor whiteColor]];
//              [headView addSubview:coverRightView];
//
//              rihgtStorePicBtn = [[RightImageBtnOnly alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH/3, 44)];
//              [coverRightView addSubview:rihgtStorePicBtn];
//
//              rihgtStorePicBtn.tag = 1112;
//              [rihgtStorePicBtn setTitle:@"缓存" forState:0];
//              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:0];
//              if (SCREEN_WIDTH == 320) {
//                 rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(15.0);
//
//              }else{
//                  rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(16.0);
//
//              }
//              [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];
//              rihgtStorePicBtn.backgroundColor = [UIColor whiteColor];
//              [rihgtStorePicBtn sizeToFit];
//              MCLog(@"rihgtStorePicBtn= %lf",rihgtStorePicBtn.width);
//              rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
//
//              NSString *jifenstr  = [NSString stringWithFormat:@"20积分"];
//
//              scorelaebl = [UILabel createLabelWithFrame:CGRectMake(CGRectGetMaxX(rihgtStorePicBtn.frame), 0, 60, 16) text:jifenstr titleColor:[UIColor redColor]
//                                                    textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:14.0]];
//
//              if(SCREEN_WIDTH == 320) {
//                  scorelaebl.font = SYSTEMFONT(12.0);
//                  scorelaebl.width = 50;
//                }else{
//                    scorelaebl.font = SYSTEMFONT(14.0);
//                    scorelaebl.width = 60;
//                }
//              [coverRightView addSubview:scorelaebl];
//              scorelaebl.centerY = rihgtStorePicBtn.centerY;
//              scorelaebl.layer.cornerRadius = 8.0;
//              scorelaebl.layer.masksToBounds = YES;
//              scorelaebl.layer.borderColor = [UIColor redColor].CGColor;
//              scorelaebl.layer.borderWidth = 1.0;
//
//
//             coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
//             coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
//            scorelaebl.hidden = YES;
//
//
//
//
//              UIView *bgNewAndHot = [UIView createViewWithFrame:CGRectMake(SCREEN_WIDTH/3*2,0, SCREEN_WIDTH/3.0, 44) bgColor:[UIColor clearColor]];
//              [headView addSubview:bgNewAndHot];
//              bgNewAndHot.userInteractionEnabled = YES;
//              UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(rihgtStorePicBtnClick)];
//              [bgNewAndHot addGestureRecognizer:ges];
//
        
          }
         
      }
      UIView *lineALl = [UIView createViewWithFrame:CGRectMake(0, 43, SCREEN_WIDTH, 1) bgColor:[UIColor lightGrayColor]];
      [headView addSubview:lineALl];
      
      leftLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2, 42.9, 30, 1.4)];
      leftLine.backgroundColor = JISECOLOR;//;//RGB(230, 230, 230);//gzz0707
      [headView addSubview:leftLine];
      leftLine.hidden = NO;
      
      middleLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/2.0-30)/2+SCREEN_WIDTH/2.0, 42.9, 30,1.4)];
      middleLine.backgroundColor = JISECOLOR;
      [headView addSubview:middleLine];
      middleLine.hidden = YES;

//      rightLine = [[UIView alloc]initWithFrame:CGRectMake((SCREEN_WIDTH/3.0-30)/2+SCREEN_WIDTH/3.0*2.0,42.9, 30, 1.4)];
//      rightLine.backgroundColor = JISECOLOR;
//      [headView addSubview:rightLine];
//      rightLine.hidden = YES;

}

#pragma mark 数据的初始化
-(void)dataOpenDetail{
    isVideoStorestr = @"0";
    isScore = YES;
   indexInInfos = 0;
   sysTimestr = @""; //gzz181225
   isHaveDownload = @"no";
   isLeft = 0;
   whichTouchInt = 0;
   self.dataMarryDetail = [NSMutableArray array];
}


#pragma mark 界面
-(void)makeUIVideoDetail{
    
   
    
    //这里是直播视频的
    [self makeplayer];

//    [self middleThreeBtn];
    
    ziScrollv = [[UIScrollView alloc]init];
//    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10);
    ziScrollv.frame = CGRectMake(0,CGRectGetMaxY(headView.frame)+0.5, SCREEN_WIDTH, SCREEN_HEIGHT-200-44-10-SafeAreaBottomHeight-45);

    [scrollv addSubview:ziScrollv];
    ziScrollv.delegate = self;
    ziScrollv.showsVerticalScrollIndicator = NO;
    ziScrollv.showsHorizontalScrollIndicator = NO;
    ziScrollv.backgroundColor = [UIColor whiteColor];
    ziScrollv.scrollEnabled = YES;
    [self bottomActionVideo:leftBtnVideo];
    
    
    _videodetailTabview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-CGRectGetMaxY(headView.frame)-49) style:UITableViewStylePlain];
    _videodetailTabview.backgroundColor = [UIColor clearColor];
    _videodetailTabview.delegate = self;
    _videodetailTabview.dataSource = self;
    _videodetailTabview.tableFooterView = [[UIView alloc]init];
    _videodetailTabview.separatorStyle = UITableViewCellSeparatorStyleNone;
    _videodetailTabview.hidden = YES;
    [scrollv addSubview:_videodetailTabview];
    
    
    
//    self.downloadtableview = [[UITableView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(headView.frame), SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-200-50-60-40) style:(UITableViewStylePlain)];
//          self.downloadtableview.delegate = self;
//          self.downloadtableview.dataSource = self;
//          self.downloadtableview.tableFooterView = [UIView new];
//          [scrollv addSubview: self.downloadtableview];
//        self.downloadtableview.backgroundColor = [UIColor whiteColor];
//       self.downloadtableview.hidden = YES;
//       //横线
//       if ([  self.downloadtableview respondsToSelector:@selector(setSeparatorInset:)]) {
//           // 如果tableView响应了setSeparatorInset: 这个方法,我们就将tableView分割线的内边距设为0.
//           [  self.downloadtableview setSeparatorInset:UIEdgeInsetsZero];
//       }
//       if ([ self.downloadtableview respondsToSelector:@selector(setLayoutMargins:)]) {
//           // 如果tableView响应了setLayoutMargins: 这个方法,我们就将tableView分割线的间距距设为0.
//           [  self.downloadtableview setLayoutMargins:UIEdgeInsetsZero];
//       }


       
       cacheBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
//       [cacheBtn setTitle:@"点击下载" forState:0];
    NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"点击下载"];
           [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 4)];
                 [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
       cacheBtn.backgroundColor = PATIENTJISECOLOR;
       [self.view addSubview:cacheBtn];
//       cacheBtn.hidden = YES;
       [cacheBtn addTarget:self action:@selector(cacheBtnClick) forControlEvents:UIControlEventTouchUpInside];
    
    
//      CGFloat xx;
//      CGFloat widhtt;
//      CGFloat x3;
//    if (SCREEN_WIDTH == 320) {
//            xx=  SCREEN_WIDTH/3*i-10;
//            widhtt = SCREEN_WIDTH/3.0+10;
//           x3 = SCREEN_WIDTH/3.0*2-10;
//      }else{
//             xx=  SCREEN_WIDTH/3*i;
//             widhtt = SCREEN_WIDTH/3.0;
//             x3 = SCREEN_WIDTH/3.0*2;
//     }
    
//    xx=  0;
//    widhtt = SCREEN_WIDTH;
//    x3 = 0;
//
//
//     bottomViewDownload = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45)];
//     [self.view addSubview:bottomViewDownload];
//    bottomViewDownload.backgroundColor  = PATIENTJISECOLOR;
//
//
//
//      coverRightView = [UIView createViewWithFrame:CGRectMake(xx, 0, widhtt, 45) bgColor:[UIColor whiteColor]];
//      [bottomViewDownload addSubview:coverRightView];
//
//      rihgtStorePicBtn = [[RightImageBtnOnly alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH/3, 44)];
//      [coverRightView addSubview:rihgtStorePicBtn];
//
//      rihgtStorePicBtn.tag = 1112;
//      [rihgtStorePicBtn setTitle:@"缓存" forState:0];
//      [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:0];
////      if (SCREEN_WIDTH == 320) {
////         rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(15.0);
////      }else{
//          rihgtStorePicBtn.titleLabel.font = SYSTEMFONT(16.0);
//
////      }
////      [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];
//      rihgtStorePicBtn.backgroundColor = [UIColor whiteColor];
//      [rihgtStorePicBtn sizeToFit];
//      rihgtStorePicBtn.frame = CGRectMake(0, 0, rihgtStorePicBtn.width, 44);
//
//      NSString *jifenstr  = [NSString stringWithFormat:@"20积分"];
//
//      scorelaebl = [UILabel createLabelWithFrame:CGRectMake(CGRectGetMaxX(rihgtStorePicBtn.frame), 0, 60, 16) text:jifenstr titleColor:[UIColor redColor]
//                                            textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:14.0]];
//
//
//        scorelaebl.font = SYSTEMFONT(14.0);
//        scorelaebl.width = 60;
//
//      [coverRightView addSubview:scorelaebl];
//      scorelaebl.centerY = rihgtStorePicBtn.centerY;
//      scorelaebl.layer.cornerRadius = 8.0;
//      scorelaebl.layer.masksToBounds = YES;
//      scorelaebl.layer.borderColor = [UIColor redColor].CGColor;
//      scorelaebl.layer.borderWidth = 1.0;
//
//
//     coverRightView.width = rihgtStorePicBtn.width+scorelaebl.width;
//     coverRightView.x = (widhtt- coverRightView.width)/2.0+x3;
//     scorelaebl.hidden = YES;


}


#pragma mark 点击底部缓存。。。   //gzz20200414
-(void)cacheBtnClick{
    
    if ([isHaveDownload isEqualToString:@"compeleteYES"] || [isHaveDownload isEqualToString:@"yes"]) {
          [self.player pause];
//          isHaveDownload = @"no";
        
          PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
          vc.hidesBottomBarWhenPushed = YES;
        if ( [isHaveDownload isEqualToString:@"compeleteYES"]) {
            vc.typeStr = @"completeStr";
        }else{
            vc.typeStr = @"processingStr";

        }
          [self.navigationController pushViewController:vc animated:YES];
        
       }else if([isHaveDownload isEqualToString:@"no"]){
           [self getNetworkTypeNB];
       }
}

#pragma mark  跳转到离线缓存
-(void)beforeeDdownloadVideos{
    
    [self.player pause];
  
    isHaveDownload = @"no";
    PLVDownloadManagerNewVC *vc = [PLVDownloadManagerNewVC new];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}





#pragma mark  前两个按钮的点击事件
-(void)bottomActionVideo:(UIButton *)btn{
//    [rihgtStorePicBtn setImage:[[UIImage imageNamed:@"downloadunDoing"] originalImage] forState:0];

 if (btn.tag == 1110) {
          cacheBtn.hidden = NO;

          [UIView animateWithDuration:0.4 animations:^{
               self.downloadtableview.hidden = YES;
              self.videodetailTabview.hidden = YES;
              
              leftLine.hidden = NO;
              middleLine.hidden = YES;
              rightLine.hidden = YES;
              isLeft = 0;
              _videodetailTabview.hidden = YES;
              bottomView.hidden = YES;
              ziScrollv.hidden = NO;
              
              [desLabel removeFromSuperview];
              desLabel = nil;
              
              
              desLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 15, SCREEN_WIDTH-30, 100)];
              desLabel.backgroundColor = [UIColor whiteColor];// [UIColor purpleColor];
              [ziScrollv addSubview:desLabel];
              desLabel.numberOfLines = 0;
              desLabel.lineBreakMode = NSLineBreakByWordWrapping;
              desLabel.text = [NSString stringWithFormat:@"%@",_videoDescribeStr];
              CGSize size = [desLabel sizeThatFits:CGSizeMake(desLabel.frame.size.width, MAXFLOAT)];
              desLabel.frame =CGRectMake(desLabel.x , desLabel.y ,desLabel.width, size.height);
              desLabel.font = [UIFont systemFontOfSize:14];
              desLabel.textColor = [UIColor blackColor];
              [desLabel sizeToFit];
              ziScrollv.contentSize = CGSizeMake(0, CGRectGetMaxY(desLabel.frame)+10);
              [btn setTitleColor:JISECOLOR forState:0];
              [rightBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];

          }];
          
      }else{
          cacheBtn.hidden = YES;

          [UIView animateWithDuration:0.4 animations:^{
               isLeft = 1;
             
              ziScrollv.hidden = YES;
              bottomView.hidden = NO;
              desLabel.hidden = YES;
           
             leftLine.hidden = YES;
             middleLine.hidden = NO;
             rightLine.hidden = YES;
              
             
              [btn setTitleColor:JISECOLOR forState:0];
              [leftBtnVideo setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];
              
              [rihgtStorePicBtn setTitleColor:QIANBLACKCOLOR forState:UIControlStateNormal];

               _videodetailTabview.hidden = NO;
              self.downloadtableview.hidden = YES;
              [self.videodetailTabview reloadData];
          }];
          
       
       
      }
    
}



#pragma mark 获取l网络类型
-(void)getNetworkTypeNB{
    
 
  __weak  AFNetworkReachabilityManager *manager = [AFNetworkReachabilityManager sharedManager];
   // 提示：要监控网络连接状态，必须要先调用单例的startMonitoring方法
   [manager startMonitoring];
    WEAKSELFS
    [manager setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        
    if (status == AFNetworkReachabilityStatusUnknown) {
          
          NSLog(@"未识别网络");
        [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusNotReachable) {
        
          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"无网络，请查看联网情况。" confirmTitle:@"确定" handler:^{
              MCLog(@"sure1");
          }];
          [manager stopMonitoring];
          return;
//          NSLog(@"未连接网络");
      }
      if (status == AFNetworkReachabilityStatusReachableViaWWAN) {
          
          NSLog(@"3G/4G网络");
          [weakSelf gotoDownloadVideo:@"当前为移动网络，确定下载？"];
          [manager stopMonitoring];
      }
      if (status == AFNetworkReachabilityStatusReachableViaWiFi) {
          
          NSLog(@"Wifi网络");
          [weakSelf gotoDownloadVideo:@"当前为Wifi网络，确定下载？"];
          [manager stopMonitoring];

      }
        
    }];
    
    
 
   
}

#pragma mark 提示下载
-(void)gotoDownloadVideo:(NSString *)typestr{
    
  UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:typestr preferredStyle:(UIAlertControllerStyleAlert)];
  UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
      
  }];
  
  [alertController addAction:cancelAction];
  WEAKSELFS
//    gzz20200414
  UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
      [weakSelf showNeedHowmuchScore]; //gzz20200507
//      [weakSelf getSystemTimeFromServer:@"getwalfare"];
  }];
  [alertController addAction:sureAction];
  [self presentViewController:alertController animated:YES completion:nil];
    
}

#pragma mark  显示需要多少积分 gzz20200414
-(void)showNeedHowmuchScore{
    
        if ([isVideoStorestr isEqualToString:@"1"]) {// 下载过 无需重复支付
            if (![DicRemove isBlankString:self.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
                [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
//                [cacheBtn setTitle:@"视频缓存中" forState:0];
                NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"视频缓存中"];
                     [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 5)];
              [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
                 coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
               scorelaebl.hidden = YES;
               [rihgtStorePicBtn sizeToFit];
               rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
                
                
                [self ddownloadddVideos:self.polyv_uuidStr];
            }
    }else{
        
        
        NSString *showContent  = [NSString stringWithFormat:@"该视频需%@积分兑换，若删除，可以再次免费缓存",self.pointStr];

           UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"下载提示" message:showContent preferredStyle:(UIAlertControllerStyleAlert)];
           UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
               
           }];
           
           [alertController addAction:cancelAction];
           WEAKSELFS
           UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
//               gzz20200414
               [weakSelf getSystemTimeFromServer:@"payVideoDown"];
             
           }];
           [alertController addAction:sureAction];
           [self presentViewController:alertController animated:YES completion:nil];
           
    }
    
}

//我的福利-查询福利剩余次数
//地址：expertAPI/getWelfareNum //gzz20200414
//参数type (1视频2课件3精品4万方5U盘)

//我的福利-使用福利操作
//地址：expertAPI/useWelfareNum
//参数type (1视频2课件3精品4万方5U盘)

#pragma mark getWelfareNum 查询福利剩余次数
-(void)getWelfareNumRequest{
      [MBProgressHUD hideHUDForView:self.view animated:YES];

        NSString *Strurl = [NSString stringWithFormat:@"%@getWelfareNum",expertAPI];
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        }else{

            dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
        }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

        
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
        
        MCLog(@"=====%@",dicM);
        WEAKSELFS
        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
            if ([code isEqualToString:@"1"]) {
                
                NSString *num = [NSString stringWithFormat:@"%@",data[@"WelfareNum"]];
                if (![DicRemove isBlankString:num]) {
                    NSInteger numCount = [num integerValue];
                    if (numCount >0) {
                        [weakSelf getSystemTimeFromServer:@"usewalfare"];
                    }else{
//                        积分那里
                    }
                }

            }else{

                [self showHint:data[@"message"]];
            }
          
           [MBProgressHUD hideHUDForView:self.view animated:YES];
             
        } failure:^(NSError *error) {
            [self showHint:@"请求失败"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }];
    
    
}


#pragma mark useWelfareNum 使用福利操作
-(void)useWelfareNumRequest{
    
         [MBProgressHUD hideHUDForView:self.view animated:YES];
            NSString *Strurl = [NSString stringWithFormat:@"%@useWelfareNum",expertAPI];
            NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
            dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
            NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
            dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
            NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
            if (sysTimestr.length>2) {
                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
            }else{

                dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
            }
            dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
            dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];

            
            NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"type"];
            
            MCLog(@"=====%@",dicM);
            WEAKSELFS
            [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
                NSString *code  = [NSString stringWithFormat:@"%@",data[@"code"]];
                if ([code isEqualToString:@"1"]) {
//                    使用成功 之后的操作 gzz20200429
//              isVideoStorestr =   @"1";
//                 if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
//                      [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
//        //             [cacheBtn setTitle:@"视频缓存中" forState:0];
//                     NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"缓存中"];
//                            [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
//                    [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
//                      coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
//                      scorelaebl.hidden = YES;
//                      [rihgtStorePicBtn sizeToFit];
//                      rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
//                 [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
//

                }else{

                    [self showHint:data[@"message"]];
                }
              
               [MBProgressHUD hideHUDForView:self.view animated:YES];
                 
            } failure:^(NSError *error) {
                [self showHint:@"请求失败"];
                [MBProgressHUD hideHUDForView:self.view animated:YES];
            }];
}






#pragma  mark tableview
-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (isLeft == 1) {

    if (_dataMarryDetail.count>0) {
      
        NSDictionary *cellDic = [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexPath.row]];
        
        NSString *str = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
        
        
        NSString *strUrl = [str stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
        //            strUrl = [NSString stringWithFormat:@"%@:%@",[cellDic objectForKey:@"realname"],strUrl];
        NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
        
        
        //gzz170622
        CGSize sizee = [self checTheStringWithHight:strUrla font:14 float:15];
        CGFloat heigith = sizee.height +10 +40 +10 +8+3+4;
        
        return heigith;
        
        
    }else{
        
        return 0;
    }
       }else if (isLeft == 2){
           return 95;
           
       }else{
           return 0.01;
       }
    
}
-(CGSize)checTheStringWithHight:(NSString *)theStr font:(float)font  float:(CGFloat)floatt
{
    
    CGFloat xxx;
    xxx  = floatt;
    //gzz1026
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(SCREEN_WIDTH-xxx*2, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (isLeft == 1) {
    return _dataMarryDetail.count;
    }else if (isLeft == 2){
        
     
        if ([isHaveDownload isEqualToString:@"yes"]) {
            for (int i=0; i<self.downloadInfos.count; i++) {
                       PLVVodDownloadInfo *info = self.downloadInfos[i];
                       if ([info.vid isEqualToString:self.polyv_uuidStr]) {
                             indexInInfos = i;
                             return 1;
                       }
                   }
         return 0;
        }else if ([isHaveDownload isEqualToString:@"compeleteYES"])
            return 1;
         }
      return 0;
    
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (isLeft == 1) {
         static NSString *strint = @"cellVideoDetail";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:strint];
            if (!cell) {
                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:strint];
                
            }else{//gzz170407
                for (UIView *view in cell.contentView.subviews) {
                    [view removeFromSuperview];
                }
            }
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor = [UIColor whiteColor];
        //    cell.textLabel.text = @"ddddd";
            if (_dataMarryDetail.count>0) {
                
                [cell.contentView addSubview:[self addViewss:indexPath.row]];
            }

            return cell;
    }else if (isLeft == 2){
        if ([isHaveDownload isEqualToString:@"yes"]) {
            PLVVodDownloadInfo *info = self.downloadInfos[indexInInfos];
              VideoNewDetailDownCompeleteCell *cell = [VideoNewDetailDownCompeleteCell cellWithTableView:tableView];
              
              cell.selectionStyle = UITableViewCellSelectionStyleNone;

            //        查询
                    NSString *vid = self.polyv_uuidStr;
                    PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:vid];
                            cell.indexpaths = indexPath;
                             cell.dataDic = [NSDictionary dictionary];
                              cell.titleLable.text = inf0.CusCourseName;//info.title;
                                 NSInteger filesize = info.filesize;
                                 cell.videoSizeLabel.text = [self.class formatFilesize:filesize];
                                 cell.videoDurationTime.text = [self.class timeFormatStringWithTime:info.duration];
                                 cell.nameLable.text =  inf0.CusCatagoryName;;
                                 cell.backgroundColor = self.downloadtableview.backgroundColor;
                              WEAKSELFS
                             cell.deleteComDownloadBlock = ^(NSInteger rowindex) {
                                 [weakSelf deleDownload:indexInInfos];

                             };
            return cell;
//                      PLVVodDownloadInfo *info = self.downloadInfos[indexInInfos];
//                       videoNewDetailDownLoadCell *cell =  self.downloadItemCellDic[info.identifier];
//                               cell.selectionStyle = UITableViewCellSelectionStyleNone;
//
//                               PLVVodVideo *video = info.video;
//               //        查询
//                       NSString *vid = self.polyv_uuidStr;
//               //      + (PLVVodExtendVideoInfo *)getExtendInfoWithVid:(NSString *)vid;
//                       PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:vid];
//               //        MCLog(@"=====%@",inf0.CusCatagoryName);
//
//
//
//                               cell.indexpaths = indexPath;
//                                cell.dataDic = [NSDictionary dictionary];
//                               if (video){
//                                   float receivedSize = info.progress * info.filesize;
//                                   if (receivedSize >= info.filesize){
//                                       receivedSize = info.filesize;
//                                   }
//                                   NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
//                                   cell.progressLable.text = downloadProgressStr;
//
//                                   if (info.fileType == PLVDownloadFileTypeAudio){
//                                       cell.titleLable.text = [NSString stringWithFormat:@"[音频] %@", video.title];
//                                   }
//                                   else{
//                                       cell.titleLable.text = inf0.CusCourseName;//video.title;
//                                   }
//                               }
//                               else{
//                                   // 取info数据@"最多两行的标题";// @"进度。。。";//
//                                   cell.titleLable.text = inf0.CusCourseName;//info.title;
//
//                                   float receivedSize = info.progress * info.filesize;
//                                   if (receivedSize >= info.filesize){
//                                       receivedSize = info.filesize;
//                                   }
//                                   NSString *downloadProgressStr = [NSString stringWithFormat:@"%@/ %@", [self.class formatFilesize:receivedSize],[self.class formatFilesize:info.filesize]];
//                                   cell.progressLable.text = downloadProgressStr;
//
//                               }
//                       cell.nameLable.text  =  inf0.CusCatagoryName;
//                       cell.downloadStateImageview.image = [UIImage imageNamed:[self downloadStateImgFromState:info.state]];
//
//                           WEAKSELFS
//                               cell.typeDownloadBlock = ^(NSInteger rowindex) {
//                                   [weakSelf showType:indexInInfos];
//                               };
//                               cell.deleteDownloadBlock = ^(NSInteger rowindex) {
//                                   [weakSelf deleDownload:indexInInfos];
//
//                               };
//                    return cell;
        }else if ([isHaveDownload isEqualToString:@"compeleteYES"]){
                VideoNewDetailDownCompeleteCell *cell = [VideoNewDetailDownCompeleteCell cellWithTableView:tableView];

                   cell.dataDic = [NSDictionary dictionary];
            PLVVodExtendVideoInfo *inf0 = [PLVVodDBManager getExtendInfoWithVid:self.completeDownloadInfo.vid];


               cell.titleLable.text =  inf0.CusCourseName;;//self.completeDownloadInfo.title;
                 
                   
                   NSInteger filesize = self.completeDownloadInfo.filesize;
                   cell.videoSizeLabel.text = [self.class formatFilesizeaa:filesize];
                   cell.videoDurationTime.text = [self.class timeFormatStringWithTime:self.completeDownloadInfo.duration];
                   cell.nameLable.text =  inf0.CusCatagoryName;;
                   cell.backgroundColor = self.downloadtableview.backgroundColor;
                 WEAKSELFS
                cell.deleteComDownloadBlock = ^(NSInteger rowindex) {
                    [weakSelf delecomDownload:indexInInfos];

                };
                   return cell;
           
         }
        
       
    }
    return nil;
   
}

//pragma mark 横线到最左边2
- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath{
    if (tableView == self.downloadtableview) {
        
        if ([cell respondsToSelector:@selector(setSeparatorInset:)])
        {
            [cell setSeparatorInset:UIEdgeInsetsZero];//UIEdgeInsetsMake(0, 0, 0, 15)
        }
        if ([cell respondsToSelector:@selector(setLayoutMargins:)])
        {
            [cell setLayoutMargins:UIEdgeInsetsZero];
        }
    }
    
}
#pragma mark 自定义cell
-(UIView *)addViewss:(NSInteger)indexx{
    
    UIView *vieww =[[UIView alloc]init];
    vieww.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80);
    
    
    
    NSDictionary *cellDic= [self clearErrorDataDateil:[_dataMarryDetail objectAtIndex:indexx]];
    NSString  *imgesss=[cellDic objectForKey:@"photo"];
    NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageUrl,imgesss];
    UIImageView *imagevview1=[[UIImageView alloc]initWithFrame:CGRectMake(15, 10,40,40)];
    imagevview1.layer.cornerRadius = 20;
    imagevview1.layer.masksToBounds = YES;
    [imagevview1 sd_setImageWithURL:[NSURL URLWithString:imagename] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
    [vieww addSubview:imagevview1];
    
    
    UILabel* nameLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10,10,100, 18)];
    [vieww addSubview:nameLabel];
    nameLabel.textColor = RGB11(146, 60, 53);
    NSString *realNamee = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"realname"]];
    //    realNamee  = [realNamee stringByReplacingCharactersInRange:NSMakeRange(1, realNamee.length-1) withString:@"**"];
    nameLabel.text = realNamee;
    nameLabel.font = SYSTEMFONT(16);
    nameLabel.textAlignment = NSTextAlignmentLeft;
    [nameLabel sizeToFit];
    
    
    UILabel* dateLabel = [[UILabel alloc] initWithFrame: CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(nameLabel.frame)+5,150, 18)];
    if (!nameLabel || nameLabel.text.length <= 0) {
        dateLabel.frame = CGRectMake(dateLabel.x, 31, dateLabel.width, dateLabel.height);
    }
    [vieww addSubview:dateLabel];
    NSString *dateStr = [cellDic objectForKey:@"create_date"];
    dateStr = [dateStr substringToIndex:16];
    dateStr = [dateStr substringWithRange:NSMakeRange(5, 11)];
    dateLabel.text = dateStr;
    dateLabel.font = SYSTEMFONT(14);
    dateLabel.textColor = [UIColor lightGrayColor];
    dateLabel.textAlignment = NSTextAlignmentLeft;
    
    
    //    Dlpontlerexple *dlp = [Dlpontlerexple shareIndence];
    NSString *zijiUUId = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    NSString *getUuid = [cellDic objectForKey:@"expert_uuid"];
    UILabel *replyLabel = [[UILabel alloc]init];
    UIImageView *DeleteImage= [[UIImageView alloc]init];
    replyLabel.userInteractionEnabled = YES;
    DeleteImage.userInteractionEnabled = YES;
    if ([zijiUUId isEqualToString:getUuid]) {
        //说明是删除
        DeleteImage.frame = CGRectMake(kMainScreenWidth-35, 10, 20, 20);
        DeleteImage.centerYy = nameLabel.centerYy;
        DeleteImage.image = [UIImage imageNamed:@"delet_case"];
        [vieww addSubview:DeleteImage];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(imageTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
        
    }else{
        //说明是回复
        //        replyLabel.frame = CGRectMake(kMainScreenWidth-50, 10, 35, 20);
        //        replyLabel.text = @"回复";
        //        replyLabel.textAlignment = NSTextAlignmentRight;
        //        replyLabel.textColor = [UIColor blackColor];
        //        replyLabel.font = SYSTEMFONT(16);
        replyLabel.frame = CGRectMake(SCREEN_WIDTH-65, 10, 50, 25);
        //        replyLabel.centerY = nameLabel.centerY;
        replyLabel.text = @"回复";
        replyLabel.textAlignment = NSTextAlignmentCenter;
        replyLabel.layer.cornerRadius = 10;
        replyLabel.layer.borderColor = RGB11(146, 60, 53).CGColor;
        replyLabel.layer.borderWidth = 1;
        replyLabel.layer.masksToBounds = YES;
        replyLabel.textColor = RGB11(102, 102, 102);
        replyLabel.font = [UIFont systemFontOfSize:16.0];
        [vieww addSubview:replyLabel];
        
        UIImageView *coverImage = [[UIImageView alloc]init];
        coverImage.frame = CGRectMake(kMainScreenWidth-80, 0, 65, 60);
        [vieww addSubview:coverImage];
        coverImage.userInteractionEnabled = YES;
        
        
        UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(replyTouchVideo:)];
        ges.cancelsTouchesInView = NO;
        [coverImage addGestureRecognizer:ges];
        
        UIView *singleTapView = [ges view];
        singleTapView.tag = 8011+indexx+2+1;
    }
    
    
    
    UILabel* commentLabel = [[UILabel alloc] initWithFrame: CGRectMake(15,CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, 32)];
    [vieww addSubview:commentLabel];
    
    
    commentLabel.numberOfLines = 0;
    commentLabel.lineBreakMode = NSLineBreakByTruncatingTail;// NSLineBreakByWordWrapping;
    
    NSMutableString * mulStr = [cellDic objectForKey:@"comment"];
    NSRange range;
    NSRange range1;
    
    NSMutableAttributedString *str=[[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]]];
    
    if ([mulStr hasPrefix:@"回复"]) {
        
        range = [mulStr rangeOfString:@"："];
        
        
        
        if (range.location != NSNotFound) {
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(0, 2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(146, 60, 53) range:NSMakeRange(2, range.location-2)];
            
            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range.location+1, str.length-range.location-1)];
            commentLabel.attributedText =  str;
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText =  str;
            commentLabel.textColor = QGreyColor;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;
            
            
        }
        
    }else{
        
        //        range1 = [mulStr rangeOfString:@"||"];
        //        if (range1.location != NSNotFound) {
        //
        //            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
        //            [str addAttribute:NSForegroundColorAttributeName value:RGB11(80, 80, 80) range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
        //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
        //            commentLabel.attributedText = str;
        //            commentLabel.font = [UIFont systemFontOfSize:14.0];
        
        
        range1 = [mulStr rangeOfString:@"||"];
        if (range1.location != NSNotFound) {
            
            //            NSLog(@"%ld  %ld",range.location,range.length);
            [str addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:NSMakeRange(0, range1.location-1)];
            [str addAttribute:NSForegroundColorAttributeName value:QGreyColor range:NSMakeRange(range1.location, str.length-range1.length-range1.location+2)];
            //            NSLog(@"%lu===%lu",(unsigned long)range1.location,range1.length);
            
            
            NSArray *arr=[mulStr componentsSeparatedByString:@"||"];
            
            NSInteger m;
            m=0;
            
            for(int i=0;i<[arr count]-1;i++)
            {
                m=m+[arr[i] length];
                [str addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(m, 2)];
                m=m+2;
            }
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.attributedText = str;
            commentLabel.textColor = QGreyColor;;
            
        }else{
            
            NSLog(@"没找到");
            commentLabel.text = [NSString stringWithFormat:@"%@",[cellDic objectForKey:@"comment"]];
            commentLabel.font = [UIFont systemFontOfSize:14.0];
            commentLabel.textColor = QGreyColor;;
            
            
        }
        
    }
    
    
    //    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(imagevview1.frame)+10,SCREEN_WIDTH-30, size.height);
    //    [commentLabel sizeToFit];
    //    commentLabel.backgroundColor = [UIColor clearColor];
    
    NSString *strUrl = [commentLabel.text stringByReplacingOccurrencesOfString:@"||" withString:@"\n\n"];
    
    
    //    strUrl = [NSString stringWithFormat:@" %@:%@",[cellDic objectForKey:@"realname"],strUrl];
    NSString *strUrla = [strUrl stringByReplacingOccurrencesOfString:@" " withString:@""]; //去掉空格
    commentLabel.text = strUrla;
    
    
    CGSize size = [commentLabel sizeThatFits:CGSizeMake(commentLabel.frame.size.width, MAXFLOAT)];
    //    commentLabel.frame =CGRectMake(CGRectGetMaxX(imagevview1.frame)+10, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-10-40-10-10, size.height+8);
    commentLabel.frame =CGRectMake(15, CGRectGetMaxY(dateLabel.frame)+7,SCREEN_WIDTH-30, size.height+8);
    
    
    [commentLabel sizeToFit];
    commentLabel.backgroundColor = [UIColor clearColor];
    
    //第一条评论变色
    NSMutableAttributedString *str1 =[[NSMutableAttributedString alloc]initWithString:strUrla];
    NSString *string ;
    NSRange range3 = [commentLabel.text rangeOfString:@"\n\n"];//匹配得到的下标
    
    if (range3.location != NSNotFound) {
        NSLog(@"找到了@“zhu”这个字符串！");
        NSLog(@"rang:%@",NSStringFromRange(range3));
        string  = [commentLabel.text substringWithRange:range3];//截取范围类的字符串
        NSLog(@"截取的值为：%@",string);
        [str1 addAttribute:NSForegroundColorAttributeName value:JISECOLOR range:NSMakeRange(0, range3.location)];
        commentLabel.attributedText =  str1;
    }
    else{
        NSLog(@"没找到！");
        commentLabel.textColor = QGreyColor;
    }
    
    
    
    
    
    
    
    //背景
    UIView *bgCommentView = [[UIView alloc]init];
    bgCommentView.frame = CGRectMake(commentLabel.x-4, commentLabel.y-2, SCREEN_WIDTH-10-10-6, commentLabel.height+4);
    bgCommentView.backgroundColor = RGB11(241, 245, 244);
    bgCommentView.layer.cornerRadius = 3;
    bgCommentView.layer.masksToBounds = YES;
    
    [vieww insertSubview:bgCommentView belowSubview:commentLabel];
    
    
    UIView *lineview = [[UIView alloc]init];
    lineview.frame = CGRectMake(0, CGRectGetMaxY(commentLabel.frame)+9.5, kMainScreenWidth, 0.5);
    lineview.backgroundColor = RGB11(188, 188, 188);
    [vieww addSubview:lineview];
    vieww.frame = CGRectMake(vieww.x, vieww.y, vieww.width, CGRectGetMaxY(commentLabel.frame)+10);
    
    return vieww;
}
#pragma mark tableview结束
#pragma mark 手势事件  删除评论 自己的评论以及回复别人的
-(void)imageTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    UIAlertView *delAlert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"确定要删除评论？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    [delAlert show];
    
}

#pragma mark 手势事件 回复手势
-(void)replyTouchVideo:(UITapGestureRecognizer *)ges{
    
    UITapGestureRecognizer *singleTap = (UITapGestureRecognizer *)ges;
    whichTouchInt = [singleTap view].tag - 8011-2-1;
    ReplyActivityController *rep = [ReplyActivityController  new];
    rep.hidesBottomBarWhenPushed = YES;
    NSString *nameStr = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"realname"];
    //    nameStr  = [nameStr stringByReplacingCharactersInRange:NSMakeRange(1, nameStr.length-1) withString:@"**"];
    NSString *commentStr = _videoCommentUuid;
    rep.commentStr = commentStr;
    rep.nameStr = nameStr;
    rep.isVideoStr = @"yes";
    rep.replyContent = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment"];
    [self.navigationController pushViewController:rep animated:YES];
    
}
#pragma mark 底部的评论按钮
-(void)barToolVideo{
    
    bottomView = [[UIView alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height-49-SafeAreaBottomHeight, self.view.frame.size.width, 49)];
    bottomView.backgroundColor = [UIColor whiteColor];//RGB(180, 170, 179);//;[UIColor whiteColor];
    bottomView.hidden = YES;
    [self.view addSubview:bottomView];
    
    fideld = [[UITextField alloc]init];
    fideld.frame = CGRectMake(10, 4.5, SCREEN_WIDTH-85, 40);
    fideld.delegate = self;
    fideld.placeholder = @"我也说一句";
    fideld.borderStyle = UITextBorderStyleRoundedRect;
    fideld.backgroundColor = [UIColor whiteColor];
    [bottomView addSubview:fideld];
    
    
    commitBtn =[UIButton new];
    [bottomView addSubview:commitBtn];
    commitBtn.frame = CGRectMake(kMainScreenWidth-65, 10, 55, 40);
    commitBtn.centerYy = fideld.centerYy;
    commitBtn.backgroundColor = RGB11(146, 60, 53);
    commitBtn.layer.cornerRadius = 5 ;
    commitBtn.layer.masksToBounds = YES;
    [commitBtn setTitle:@"发送" forState:0];
    [commitBtn setTitleColor:[UIColor whiteColor] forState:0];
    [commitBtn addTarget:self action:@selector(commitAction:) forControlEvents:UIControlEventTouchUpInside];//gzz0811
    
}

#pragma mark textfield  keyBoard的收起弹出
- (void)keyboardWillShow:(NSNotification *)notification {
    
    //获取通知传递过来的信息
    NSDictionary* info = [notification userInfo];
    //获取键盘的size
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
    //得到UIEdgeInsets
    //    UIEdgeInsets contentInsets = UIEdgeInsetsMake(0.0, 0.0, kbSize.height, 0.0);
    
    
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);
    //    if (DEVICE_IS_IPHONEX) {
    //
    //        smallView.frame = CGRectMake(0, SCREEN_HEIGHT-kbSize.height-160, SCREEN_WIDTH, 160);
    //    }
    
}

- (void)keyboardWillHide:(NSNotification *)notification {
    
    smallView.frame = CGRectMake(0, SCREEN_HEIGHT-160, SCREEN_WIDTH, 160);
    
    
}

- (void)textFieldDidBeginEditing:(UITextField *)textField{
    [textField becomeFirstResponder];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    
    return YES;
}
-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    
    bagView.hidden = NO;
    smallView.hidden = NO;
    return NO;
}

//创建一个半透明的view覆盖页面
-(void)makeUiTextView{
    
    bagView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, [[UIScreen mainScreen] bounds].size.height)];
    bagView.backgroundColor = [UIColor blackColor];
    bagView.alpha = 0.7;
    bagView.hidden = YES;
    [self.view addSubview:bagView];
    
    smallView = [[UIView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT-160-SafeAreaBottomHeight, SCREEN_WIDTH, 160)];
    smallView.backgroundColor = [UIColor colorWithRed:223/255.0 green:224/255.0 blue:225/255.0 alpha:1.0];
    smallView.hidden = YES;
    [self.view addSubview:smallView];
    
    cancleBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 50, 30)];
    [cancleBtn setTitle:@"取消" forState:(UIControlStateNormal)];
    [cancleBtn setTitleColor:[UIColor lightGrayColor] forState:(UIControlStateNormal)];
    [cancleBtn addTarget:self action:@selector(hideBagView) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:cancleBtn];
    
    enSureBtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-50, 0, 50, 30)];
    [enSureBtn setTitle:@"确定" forState:(UIControlStateNormal)];
    //    [enSureBtn setTitleColor:[UIColor colorWithRed:146/255.0 green:60/255.0 blue:53/255.0 alpha:1.0] forState:(UIControlStateNormal)];
    [enSureBtn setTitleColor:RGB11(146, 60, 53) forState:(UIControlStateNormal)];
    
    
    [enSureBtn addTarget:self action:@selector(hideBagViewAnd) forControlEvents:(UIControlEventTouchUpInside)];
    [smallView addSubview:enSureBtn];
    
    showLB = [[UILabel alloc]initWithFrame:CGRectMake((SCREEN_WIDTH-60)/2, 0, 60, 30)];
    showLB.text = @"写评论";
    [smallView addSubview:showLB];
    
    textView = [[UITextView alloc]initWithFrame:CGRectMake(20, 35, SCREEN_WIDTH-40, 115)];
    textView.backgroundColor = [UIColor whiteColor];
    textView.font = [UIFont systemFontOfSize:16.0];
    
    [smallView addSubview:textView];
    
}
-(void)hideBagViewAnd{
    
    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = textView.text;
    [textView resignFirstResponder];
}
-(void)hideBagView{
    
    bagView.hidden = YES;
    smallView.hidden = YES;
    fideld.text = @"";
    [textView resignFirstResponder];
}
#pragma mark  发送  提交按钮点击
-(void)commitAction:(UIButton *)btn{
    
    [fideld resignFirstResponder];
    //    MCLog(@"commit click  %@",fideld.text);
    comContent = fideld.text;
    if (comContent.length <=0 ||[comContent isEqualToString:@"(null)"] ||[comContent isEqualToString:@"<null>"]) {
        [self showHint:@"请输入评论内容"];
        return;
    }
    [self addCommentRequestVideo];
    [fideld setText:@""];//清空里面的内容
}
#pragma mark 收藏的按钮
-(void)storeClick{
    
    //先讲之前的收藏隐藏起来，做个分享功能测试
    if ([_isCollection isEqualToString:@"0"]) {
        [self storeRequestVideo];
    }else if([_isCollection isEqualToString:@"1"]){
        
        [self undoStoreRequestVideo];
        
    }else{
        
    }
}

#pragma mark 新友盟分享
- (void)shareAction
{

    NSString *descr = _videoDescribeStr;
    NSString *title =[NSString stringWithFormat:@"%@",self.titleName];
    
   //    gzz20200330
//    NSString *weburl = [NSString stringWithFormat:@"%@%@",ImageUrl,_videoPath];
    
//    NSString *weburl = [NSString stringWithFormat:@"%@%@",videodetailURL,_videoCommentUuid];
    
    NSString *weburl = [NSString stringWithFormat:@"%@%@&expertshare=videoshare",videodetailURL,_videoCommentUuid];
    
    NSString *imageUrl = [NSString stringWithFormat:@"%@%@",NETADRESS,self.imagePath];
    NSLog(@"分享出去的链接%@",weburl);
    NSDictionary *dic =[[NSDictionary alloc]init];
    if ([DicRemove isBlankString:self.contentID]) {
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl};
        
    }else{
        
          dic = @{@"title":title,@"descr":descr,@"weburl":weburl,@"imageurl":imageUrl,@"contentID":self.contentID};
    }
    UmengEnclosed *umeng = [UmengEnclosed sharedUmengEnclosed];
    [umeng customWebShareWithVC:self SocialType:SType_sina_wx_qq shareType:ShareWebPages webData:dic];
}

#pragma mark  read接口
-(void)readAddRequest{
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = _videoCommentUuid;
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            self.isCollection = Collection;
            if ([_isCollection isEqualToString:@"0"]) {
                //        [rightItem setBackgroundColor:[UIColor redColor]];
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec2@2x"];
            }else{
                //                [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
                right1.image = [UIImage imageNamed:@"circollec1@2x"];
                
            }
            
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}

#pragma mark 收藏视频接口
-(void)storeRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@collection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"title"] = [NSString stringWithFormat:@"%@",_titleName];
    dicm[@"path"] = [NSString stringWithFormat:@"%@",_videoPath];
    dicm[@"readnum"] = [NSString stringWithFormat:@"%@",_readnum];
    //    dicm[@"readnum"] = @"300";
    dicm[@"imgpath"] = [NSString stringWithFormat:@"%@",_imagePath];
    dicm[@"public_name"] = [NSString stringWithFormat:@"%@",_public_name];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            //            [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec1@2x"] forState:0];
            
            //             right1.image = [UIImage imageNamed:@"circollec1@2x"];
            
            //             [searchBtn setBackgroundImage: [UIImage imageNamed:@"circollec1@2x"] forState:UIControlStateNormal];
            storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            
            //            [rightItem setBackgroundColor:[UIColor blueColor]];
            _isCollection = [NSString stringWithFormat:@"%d",1];
            
            [self showHint:@"收藏成功"];
            
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        NSLog(@"%@",error);
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 取消收藏视频接口
-(void)undoStoreRequestVideo{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@discollection",IMaUrl];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"other_uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"type"] = @"5";
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            //            [rightItem setBackgroundImage:[UIImage imageNamed:@"circollec2@2x"] forState:0];
            
            //            right1.image = [UIImage imageNamed:@"circollec2@2x"];
            //             [searchBtn setBackgroundImage: [UIImage imageNamed:@"circollec2@2x"] forState:UIControlStateNormal];
            storeImg.image = [UIImage imageNamed:@"circollec2@2x"];
            //            [rightItem setBackgroundColor:[UIColor redColor]];
            _isCollection = [NSString stringWithFormat:@"%d",0];
            
            if ([self.isStore isEqualToString:@"yes"]) {
                
            }else{
                
                GDXZLog(@"那就是不掉取block");
            }
            
            [self showHint:@"取消收藏成功"];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma  接口添加评论
-(void)addCommentRequestVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@addComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    //    Dlpontlerexple *dlpo = [Dlpontlerexple shareIndence];
    
    dicm[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]];
    dicm[@"article_uuid"]= [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"comment"] =[NSString stringWithFormat:@"%@",comContent];
    dicm[@"type"] = @"8";
    pageNum = 1;//gzz1121
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];//gzz1121!
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                [_dataMarryDetail  removeAllObjects];
                
                [_dataMarryDetail addObjectsFromArray:arr];
                
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
                textView.text = @"";//gzz1025
                [self showHint:@"发表评论成功"];
                
            }
            
        }else{
            
            [self showHint:[dic  objectForKey:@"message"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}
#pragma mark 视频评论列表的接口
-(void)dataRequestInterfaceDetail{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@commentList",IMAURLAPP];//待gzz1108
    
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    dicm[@"uuid"] = [NSString stringWithFormat:@"%@",_videoCommentUuid];
    dicm[@"page"] = [NSString stringWithFormat:@"%zd",pageNum];
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arr = [dic objectForKey:@"data"];
            if (arr.count>0) {
                
                [_dataMarryDetail addObjectsFromArray:arr];
                [_videodetailTabview reloadData];
            }else{
                [MBProgressHUD hideHUDForView:self.view animated:YES];
                
                [_videodetailTabview reloadData];
            }
            
        }else{
            [self showHint:[dic  objectForKey:@"message"]];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
    
    
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 1) {
        [self delelPinglunVideo];
    }else{
        
        //        MCLog(@"取消了");
    }
    
}
#pragma mark  删除评论接口
-(void)delelPinglunVideo{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Srurl = [NSString stringWithFormat:@"%@deleteComment",IMAURLAPP];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    NSString *commandUuid = [[_dataMarryDetail objectAtIndex:whichTouchInt] objectForKey:@"comment_uuid"];
    dicm[@"uuid"] = commandUuid;
    
    [manager POST: Srurl  parameters:dicm progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *coder = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            //            [MBProgressHUD hideHUDForView:self.view animated:YES];
            //            [_dataMarryDetail  removeAllObjects];
            //            __weak typeof(self) wakeself = self;
            //            [wakeself dataRequestInterfaceDetail];
            //            [self showHint:@"删除评论成功"];
            [_dataMarryDetail  removeObjectAtIndex:whichTouchInt];
            __weak typeof(self) wakeself = self;
            [wakeself.videodetailTabview reloadData];//gzz1122R
            
            [self showHint:@"删除评论成功"];
            
        }else{
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            
            [self showHint:[dic objectForKey:@"message"]];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
    
}
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)str{
    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
         if ([str isEqualToString:@"liulan"]) {
                      [weakSelf watchHistoryRequest];

              }else if([str isEqualToString:@"detail"]){
                  [weakSelf docDatialRequest];

              }else if([str isEqualToString:@"isVideoStore"]){
                  [weakSelf isVideoDownloadRecordRequest];
//                  payVideoDown
              }else if([str isEqualToString:@"payVideoDown"]){
                  [weakSelf payVideoDownload];

              }else if([str isEqualToString:@"getwalfare"]){
                  [weakSelf getWelfareNumRequest];

              }else if([str isEqualToString:@"usewalfare"]){
                  [weakSelf useWelfareNumRequest];

              }

        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        
               if ([str isEqualToString:@"liulan"]) {
                   [weakSelf watchHistoryRequest];

               }else if([str isEqualToString:@"detail"]){
                   [weakSelf docDatialRequest];

               }else if([str isEqualToString:@"isVideoStore"]){
                   [weakSelf isVideoDownloadRecordRequest];
                   
               }else if([str isEqualToString:@"payVideoDown"]){
                   [weakSelf payVideoDownload];

               }else if([str isEqualToString:@"getwalfare"]){
                   [weakSelf getWelfareNumRequest];

               }else if([str isEqualToString:@"usewalfare"]){
                   [weakSelf useWelfareNumRequest];

               }
           
    }];
    
}

#pragma mark s视频x详情接口
-(void)docDatialRequest{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@videoDetail",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        NSDictionary *dicd =[NSDictionary dictionaryWithDictionary:data[@"video"]];
        if ([coder isEqualToString:@"200"]) {
            weakSelf.videoPath = [NSString stringWithFormat:@"%@",dicd[@"path"]];
            weakSelf.videoDescribeStr = [NSString stringWithFormat:@"%@",dicd[@"note"]];
            weakSelf.isCollection = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.titleName = [NSString stringWithFormat:@"%@",dicd[@"name"]];
             weakSelf.imagePath = [NSString stringWithFormat:@"%@",dicd[@"imgpath"]];
            weakSelf.public_name = [NSString stringWithFormat:@"%@",dicd[@"public_name"]];
            weakSelf.readnum = [NSString stringWithFormat:@"%@",dicd[@"readnum"]];
            weakSelf.isStore = [NSString stringWithFormat:@"%@",dicd[@"isCollection"]];
            weakSelf.contentID = [NSString stringWithFormat:@"%@",dicd[@"content"]];
            weakSelf.polyv_uuidStr = [NSString stringWithFormat:@"%@",dicd[@"polyv_uuid"]];

            weakSelf.pointStr = [NSString stringWithFormat:@"%@",dicd[@"point"]];

            if ([DicRemove  isBlankString:weakSelf.polyv_uuidStr]) {

                NSString *str = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                 NSRange range = [str rangeOfString:@"vid\""];

            if (range.location != NSNotFound) {
                MCLog(@"早到了");
                NSString *str2 = [str substringFromIndex:(range.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"\""];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
            }else{
                MCLog(@"没找到");
                NSString *str11 = [NSString stringWithFormat:@"%@",weakSelf.contentID ];
                NSRange range1 = [str11 rangeOfString:@"vid'"];
                if (range1.location != NSNotFound) {
                NSString *str2 = [str11 substringFromIndex:(range1.location+3)];
                  NSArray *array = [str2 componentsSeparatedByString:@"'"];
                  if (arr.count>1) {
                     NSString *str3 = [NSString stringWithFormat:@"%@",array[2]];
                      weakSelf.polyv_uuidStr = str3;
                  }
                }

            }

                
            }
            
            
            if ([self.isCollection isEqualToString:@"0"]) {
                storeImg.image = [UIImage imageNamed:@"circollec2"];
            }else{
                storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
            }
            [weakSelf bottomActionVideo:leftBtnVideo];
            [weakSelf makeUIVideoDetail];
            [weakSelf barToolVideo];
            [weakSelf makeUiTextView];
//   gzz20200509
            [weakSelf getStates];

        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}

#pragma mark  是否缓存过该视频
-(void)isVideoDownloadRecordRequest{
    [MBProgressHUD hideHUDForView:self.view animated:YES];

//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@isVideoDownloadRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            isVideoStorestr = [NSString stringWithFormat:@"%@",data[@"result"]];
            [MBProgressHUD hideHUDForView:self.view animated:YES];

           [weakSelf getSystemTimeFromServer:@"detail"];
        }else{
            
            [self showHint:message];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark  支付积分
-(void)payVideoDownload{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@payVideoDownload",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
 WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
//        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        if ([coder isEqualToString:@"200"]) {
            
            isVideoStorestr =   @"1";
         if (![DicRemove isBlankString:weakSelf.polyv_uuidStr] && [isHaveDownload isEqualToString:@"no"]) {
              [rihgtStorePicBtn setTitle:@"缓存中" forState:0];
//             [cacheBtn setTitle:@"视频缓存中" forState:0];
             NSMutableAttributedString * attriStr = [[NSMutableAttributedString alloc] initWithString:@"缓存中"];
                    [attriStr addAttribute:NSForegroundColorAttributeName value:[UIColor whiteColor] range:NSMakeRange(0, 3)];
            [cacheBtn setAttributedTitle:attriStr forState:(UIControlStateNormal)];
              coverRightView.frame = CGRectMake(0, coverRightView.y, SCREEN_WIDTH,44);
              scorelaebl.hidden = YES;
              [rihgtStorePicBtn sizeToFit];
              rihgtStorePicBtn.frame = CGRectMake((coverRightView.width-rihgtStorePicBtn.width)/2, 0, rihgtStorePicBtn.width, 44);
             
             [weakSelf ddownloadddVideos:weakSelf.polyv_uuidStr];
             
          }
            
        }else{
            if ([coder isEqualToString:@"106"]) {
//                [self showHint:@"您的积分不够，请赚取积分或购买后来支付！"];
                
                
                UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"您的积分不足，是否购买积分？" preferredStyle:(UIAlertControllerStyleAlert)];
                UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:(UIAlertActionStyleCancel) handler:^(UIAlertAction *action) {
                    
                }];
                
                [alertController addAction:cancelAction];
                WEAKSELFS
                UIAlertAction *sureAction = [UIAlertAction actionWithTitle:@"确定" style:(UIAlertActionStyleDefault) handler:^(UIAlertAction *action) {
                    [weakSelf buybounds];
                }];
                [alertController addAction:sureAction];
                [self presentViewController:alertController animated:YES completion:nil];
                
            }

        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

        [self showHint:@"请求失败"];
        
    }];
}
-(void)buybounds{
    bugBonusVC *vc = [[bugBonusVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}


#pragma mark  专家端 - 添加视频浏览记录
-(void)watchHistoryRequest{
    
    NSString *Strurl = [NSString stringWithFormat:@"%@addVideoWatchRecord",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
        
    }else{
        
        dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"video_uuid"] = [NSString stringWithFormat:@"%@",self.videoCommentUuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"video_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        NSString *message = [NSString stringWithFormat:@"%@",data[@"message"]];
        
        if ([coder isEqualToString:@"200"]) {
          
            
        }else{
            
            [self showHint:message];
        }
        
    } failure:^(NSError *error) {
        
        [self showHint:@"请求失败"];
        
    }];
}
#pragma mark navbar及返回
-(void)navBarVideoDetail{
//    gzz191101
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClickVideoDetail)];
    self.navigationItem.leftBarButtonItem=backItem;
    
    UIView *rightView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 70, 40)];
    rightView.backgroundColor = [UIColor clearColor];
    
    UIImageView *shareImag = [UIImageView creatImageviewWithFrame:CGRectMake(0, 10, 20, 20) imaged:[UIImage imageNamed:@"分享@2x"]];
    [rightView addSubview:shareImag];
    
    UIButton * shareButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 34, 40)];
    [rightView addSubview:shareButton];
    shareButton.backgroundColor = [UIColor clearColor];
    [shareButton addTarget:self action:@selector(shareAction) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIImageView *btnImag = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(shareImag.frame)+20, 7.5, 25, 25) imaged:[UIImage imageNamed:@"icodd"]];
    [rightView addSubview:btnImag];
    storeImg = btnImag;
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(CGRectGetMaxX(shareButton.frame)+1, 0, 34, 40);
    btn.backgroundColor = [UIColor clearColor];
    rightItem = btn;
    [rightView addSubview:btn];
    [rightItem addTarget:self action:@selector(storeClick) forControlEvents:UIControlEventTouchUpInside];
    
    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:rightView];
    self.navigationItem.rightBarButtonItem = pulish;
    

//    
//    if ([_isCollection isEqualToString:@"0"]) {
//        //        [rightItem setBackgroundImage:[UIImage imageNamed:@"unstoreVideo"] forState:0];
//        storeImg.image = [UIImage imageNamed:@"circollec2"];
//    }else{
//        //        [rightItem setBackgroundImage:[UIImage imageNamed:@"storeVideo"] forState:0];
//        storeImg.image = [UIImage imageNamed:@"circollec1@2x"];
//        
//    }
    
 
    
}
-(void)backClickVideoDetail{
    [self.player destroyPlayer];
    if ([self.isStore isEqualToString:@"yes"]) {
        
        self.reloadBlock(_isCollection);
    }
    
    if ([_typesVideo isEqualToString:@"type"]) {//gzz1124
        
        self.reloadBlock(_videoCommentUuid);
        
    }else if([_typesVideo isEqualToString:@"videoHome"])//videoHome
    {
        self.reloadBlock(_videoCommentUuid);
        
    }else{
        
        
    }
    
    [viewWeb reload];
    
    //gzz170216   111111
    NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
    [des setObject:@"isVideo" forKey:@"jingxuan_video"];
    
    
    NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
    [dess setObject:_videoCommentUuid forKey:@"jingxuan_videoUUID"]; // jingxuan_videoUUID 11
    
    if ([_isJingxuanInDetail isEqualToString:@"yes"]) {
        NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
        [des setObject:@"isJingxuanInDe" forKey:@"isJingxuanInDetail"];
    } //gzz170216  111111  isJingxuanInDetail
    
    
    [self.navigationController popViewControllerAnimated:YES];
}


-(NSDictionary *)clearErrorDataDateil:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
    
}




#pragma mark - util

+ (NSString *)formatFilesize:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
- (NSString *)downloadStateImgFromState:(PLVVodDownloadState )state{
    NSString *imageName = nil;
    switch (state) {
        case PLVVodDownloadStateReady:
        case PLVVodDownloadStatePreparing:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateStopped:
        case PLVVodDownloadStateStopping:
            imageName = @"plv_icon_download_stop";
            break;
        case PLVVodDownloadStatePreparingStart:
        case PLVVodDownloadStateRunning:
            imageName = @"plv_icon_download_processing";
            break;
        case PLVVodDownloadStateSuccess:
            imageName = @"plv_icon_download_will";
            break;
        case PLVVodDownloadStateFailed:
            imageName = @"plv_icon_download_fail";
            break;
    }
    
    return imageName;
}
#pragma mark -- handle
- (void)handleStopDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] stopDownloadWithVideoParams:params];
#endif
}

- (void)handleStartDownloadVideo:(PLVVodDownloadInfo *)info index:(NSInteger)index{
    
#ifndef PLVSupportDownloadAudio
    [[PLVVodDownloadManager sharedManager] startDownloadWithVid:info.vid];
#else
    // 使用音频下载功能的客户，调用如下方法
    PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:info.vid fileType:info.fileType];
    [[PLVVodDownloadManager sharedManager] startDownloadWithVideoParams:params];
#endif
    
    if ([PLVVodDownloadManager sharedManager].isDownloading){
        //
//        self.queueDownloadButton.selected = YES;
    }
}
#pragma mark  下载状态的改变
-(void)showType:(NSInteger)row{
    // 播放本地缓存视频
     PLVVodDownloadInfo *info = self.downloadInfos[row];
     if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
         // 暂停下载
         [self  handleStopDownloadVideo:info index:row ];
     } else {
         // 开始下载
         [self handleStartDownloadVideo:info index:row];
     }
}
#pragma mark  删除下载 正在下载的
-(void)deleDownload:(NSInteger)index{
       PLVVodDownloadInfo *info = self.downloadInfos[index];
       if (info.state == PLVVodDownloadStateReady || info.state == PLVVodDownloadStateRunning) {
           // 暂停下载
           [self  handleStopDownloadVideo:info index:index];
       } else {
//           // 开始下载
//           [self handleStartDownloadVideo:info index:row];
       }
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

           [weakSelf handleStartDownloadVideo:info index:index];
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
             
          PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];
              PLVVodDownloadInfo *downloadInfo = self.downloadInfos[index];
              
          #ifndef PLVSupportDownloadAudio
              [downloadManager removeDownloadWithVid:downloadInfo.video.vid error:nil];
          #else
              // 使用音频下载功能的客户，调用如下方法
              PLVVodVideoParams *params = [PLVVodVideoParams videoParamsWithVid:downloadInfo.vid fileType:downloadInfo.fileType];
              [downloadManager removeDownloadWithVideoParams:params error:nil];
          #endif
              
              [self.downloadInfos removeObject:downloadInfo];
           
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
           isHaveDownload = @"no";
           [downloadbtn setTitle:@"未下载" forState:0];
           [rihgtStorePicBtn setTitle:@"缓存" forState:0];
           
           [self.downloadtableview reloadData];

           
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}

#pragma mark  删除下载 已经完成的
-(void)delecomDownload:(NSInteger)index{
      
  WEAKSELFS
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"温馨提示" message:@"确定删除此下载？" preferredStyle:UIAlertControllerStyleAlert];
 
       UIAlertAction *picKepu = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

          
       }];
       
       [alert addAction:picKepu];
       
       UIAlertAction *videoKepu = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
           
        PLVVodDownloadManager *downloadManager = [PLVVodDownloadManager sharedManager];

        [downloadManager removeDownloadWithVid:self.polyv_uuidStr error:nil];
        [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
//           删除专家名字
//           + (BOOL)deleteExtendInfoWithVid:(NSString *)vid;
           [PLVVodDBManager deleteExtendInfoWithVid:self.polyv_uuidStr];
          
            isHaveDownload = @"no";
            [downloadbtn setTitle:@"未下载" forState:0];
           [rihgtStorePicBtn setTitle:@"缓存" forState:0];
           [weakSelf.downloadtableview reloadData];
         }];
         
         [alert addAction:videoKepu];
       
       [self presentViewController:alert animated:YES completion:nil];
    

       
}


#pragma mark - util  tool

+ (NSString *)formatFilesizeaa:(NSInteger)filesize {
    return [NSByteCountFormatter stringFromByteCount:filesize countStyle:NSByteCountFormatterCountStyleFile];
}
+ (NSString *)timeFormatStringWithTime:(NSTimeInterval )time{
    
    NSInteger hour = time/60/60;
    NSInteger minite = (time - hour*60*60)/60;
    NSInteger second = (time - hour*60*60 - minite*60);
    
    NSString *timeStr =[NSString stringWithFormat:@"%02d:%02d:%02d", (int)hour, (int)minite,(int)second];
    
    return timeStr;
}
///expertAPI/videoDetail
#pragma mark 禁用手势

-(void)viewDidAppear:(BOOL)animated {
[super viewDidAppear:animated];
//if([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
//    self.navigationController.interactivePopGestureRecognizer.enabled = NO;
//}
    [self popGestureChange:self enable:NO];
}



-(void)popGestureChange:(UIViewController *)vc enable:(BOOL)enable{
    if ([vc.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        //遍历所有的手势
        for (UIGestureRecognizer *popGesture in vc.navigationController.interactivePopGestureRecognizer.view.gestureRecognizers) {
            popGesture.enabled = enable;
        }
    }
}

@end


gzz20200507 增加门诊安排
//增加门诊安排
#import "AddDepClinicManagerVC.h"
#import "AddDepManagerCell.h"
#import "AddDepManagerSureView.h"

#import "RSAEncryptor.h"
#import "NSString+Encode.h"

@interface AddDepClinicManagerVC ()<UITableViewDelegate,UITableViewDataSource>{
    NSString  * sysTimestr;//系统时间戳gzz181225
    NSString *indexInUuid;//当前行的执业地点uui
    NSInteger indexInrow;//当前在第几行
    UIButton *sureReleaseBtn;//确定发布按钮
    UIImageView *yesImagview;//周一 到 周日
    
     UIImageView *yesImagviewOne;//周1
     UIImageView *yesImagviewTwo;//周2
     UIImageView *yesImagviewThree;//周3
     UIImageView *yesImagviewFour;//周一4
     UIImageView *yesImagviewFive;//周一5
     UIImageView *yesImagviewSix;//周一6
     UIImageView *yesImagviewSeven;//周一7
    
    UIImageView *yesDayImagview;//上午下午晚上全天

    UIButton *fridayBtn;//周五btn
    UIButton *morningBtn;//上午btn
    
    NSString *weekStr;//记录周一到周日
    NSString *weekStrNum;//记录周一到周日

    NSString *dayStr;//记录上下午 晚上全天
    NSString *dayStrABCD;//记录上下午 晚上全天

    
    NSInteger selectIndexview;//选中的是哪一行数据
    NSInteger preSelectIndexview;//默认选中的是哪一行数据 修改门诊中作比较的用处

    UIView *coverView11;
    
    
}
@property (nonatomic, strong)UITableView *tableView;
@property (nonatomic, strong)NSMutableArray *dataArray;
@property(nonatomic,strong)UILabel *firstLab; //计算换不换行的label1
@property(nonatomic,strong)UILabel *secodeLab;//计算换不换行的label12

/*确认的内容传递*/
@property (nonatomic, strong) NSMutableDictionary *dicDatasure;

/*确认公告内容信息*/
@property (nonatomic, strong) AddDepManagerSureView *addDepManagerSureView;

/*选中的indexpath*/
@property (nonatomic, strong)  NSIndexPath *selectedIndexPath;


/*选中的星期几*/
@property (nonatomic, strong) NSMutableArray *daysMutableArr;



@end

@implementation AddDepClinicManagerVC

//懒加载
- (NSMutableArray *)daysMutableArr{
    if (!_daysMutableArr) {
        _daysMutableArr = [NSMutableArray array];
    }
    return _daysMutableArr;
}



-(UILabel *)firstLab
{
    //判断是否已经有了，若没有，则进行实例化
    if (!_firstLab) {
        _firstLab=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, 100, 100)];
        [_firstLab setTextAlignment:NSTextAlignmentLeft];
        _firstLab.font = SYSTEMFONT(14.0);
        [self.view addSubview:_firstLab];
    }
    return _firstLab;
}

-(UILabel *)secodeLab
{
    //判断是否已经有了，若没有，则进行实例化
    if (!_secodeLab) {
        _secodeLab = [[UILabel alloc]initWithFrame:CGRectMake(CGRectGetMaxX(self.firstLab.frame)+5, 0, 300, 30)];
        [_secodeLab setTextAlignment:NSTextAlignmentCenter];
        _secodeLab.font = SYSTEMFONT(14.0);
        
        _secodeLab.centerYy = self.firstLab.centerYy;
        [self.view addSubview:_secodeLab];
    }
    return _secodeLab;
}


//懒加载TableView
- (UITableView *)tableView{
    if (!_tableView) {
        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-50);
        _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.bounces = YES;
        _tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0);
        //cell分割线自定义
        _tableView.separatorStyle = UITableViewCellAccessoryNone;
        _tableView.showsVerticalScrollIndicator = NO;
        // [_tableView setSeparatorInset:UIEdgeInsetsZero];
        //[_tableView setSeparatorColor:RGB(240, 240, 240)];
        //  [_tableView setLayoutMargins:UIEdgeInsetsZero];
        _tableView.tableFooterView = [UIView new];
        _tableView.backgroundColor = RGB(224, 224, 224);
        if (@available(iOS 11.0, *)) {
            
            self.tableView.contentInsetAdjustmentBehavior  = UIScrollViewContentInsetAdjustmentNever;
            
        }
        [self.view addSubview:_tableView];
        //去掉分割线
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        
    }
    return _tableView;
}


-(NSMutableArray *)dataArray{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}

-(NSMutableDictionary *)dicDatasure{
    if (!_dicDatasure) {
        _dicDatasure = [NSMutableDictionary dictionary];
    }
    return  _dicDatasure;
}

//dataDicc
/// 确认公告内容信息
#pragma mark signInView windowview
- (AddDepManagerSureView *)addDepManagerSureView{
    if (!_addDepManagerSureView) {
        
        UIWindow *window = [UIApplication sharedApplication].keyWindow;
        UIView *view11 = [[UIView alloc] init];
        coverView11 = view11;
        [window addSubview:view11];
        view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //
        view11.backgroundColor = [UIColor colorWithWhite:0.0f alpha: 0.6];
        
        _addDepManagerSureView = [[AddDepManagerSureView alloc]initViewWithFrame:CGRectMake(25, kTopHeight+70, SCREEN_WIDTH-50, SCREEN_WIDTH)];
        [view11 addSubview:_addDepManagerSureView];
        _addDepManagerSureView.backgroundColor = WHITECOLORS;
        
        WEAKSELFS
        _addDepManagerSureView.cancleBlock = ^(NSString *str) {
            [weakSelf confirmReceiptDisappear:str];
        };
        
        _addDepManagerSureView.sureBlock  = ^(NSString *str) {
            [weakSelf confirmReceiptDisappear:str];
        };
        
        
    }
    return _addDepManagerSureView;
}


- (void)confirmReceiptDisappear:(NSString *)str //确认收货页面消失
{
    if ([str isEqualToString:@"sure"]) {
        MCLog(@"sure");
        if ([self.addOrModifyType isEqualToString:@"add"]) {
            [self getSystemTimeFromServer:@"add"];
        }else{
            [self getSystemTimeFromServer:@"modify"];
        }
    }else if ([str isEqualToString:@"cancle"]){
        MCLog(@"cancle");
        
    }
    [UIView animateWithDuration:0.2 animations:^{
        
        coverView11.hidden = YES;
        _addDepManagerSureView.hidden = YES;
        
    } completion:^(BOOL finished) {
        coverView11.hidden = YES;
        _addDepManagerSureView.hidden = YES;
        MClogFunc
    }];
    
}


- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    if ([self.addOrModifyType isEqualToString:@"add"]) {
        self.navigationItem.title = @"增加门诊安排";

    }else if([self.addOrModifyType isEqualToString:@"modify"]){
        self.navigationItem.title = @"修改门诊安排";

    }
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(buttonIterm)];
    
    self.navigationItem.leftBarButtonItem=backItem;
    
    [self  dataSet];
    [self  makeUIPA];
    [self getSystemTimeFromServer:@"list"];
}

-(void)buttonIterm{
    
    [self.navigationController popViewControllerAnimated:YES];
}
#pragma mark dataSet
-(void)dataSet{
    
    sysTimestr = @"";
    selectIndexview = -1;
    preSelectIndexview = 0;
    weekStrNum = @"";
    dayStrABCD = @"";
    weekStr = @"";
    dayStr = @"";
}


#pragma mark makeUIPA
-(void)makeUIPA{
    [self tableView];
    NSString *weeekStr ;
    NSString *daydayStr ;
  
    if (self.dataDicc.count>0) {
        weeekStr = [NSString stringWithFormat:@"%@",self.dataDicc[@"week"]];
        daydayStr = [NSString stringWithFormat:@"%@",self.dataDicc[@"day"]];
    }
    
    UIView * headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0,SCREEN_WIDTH, 210)];
    headerView.backgroundColor = [UIColor whiteColor];
#pragma mark  headerview
     //门诊时间
    _tableView.tableHeaderView = headerView;
    UILabel *nameLabel = [UILabel createLabelWithFrame:CGRectMake(10, 10, 35, 40) text:@"门诊时间" titleColor:JISECOLOR textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
    [headerView addSubview:nameLabel];
    [nameLabel sizeToFit];
    UIImageView *Imgview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(nameLabel.frame), 1, 5,5) imaged:[UIImage imageNamed:@"mustInPic"]];
    [headerView addSubview:Imgview];
    Imgview.centerYy = nameLabel.centerYy;
    
    WEAKSELFS
    for (int i = 0; i<7; i++) {
        CGFloat x = (i%4+1)*10+i%4*((SCREEN_WIDTH-50)/4.0);
        CGFloat y = CGRectGetMaxY(nameLabel.frame)+10+(int)i/4*(35+10);

        
        UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(x, y, (SCREEN_WIDTH-50)/4.0, 35)];
        [btn setTitle:@"周一" forState:0];
        [btn setTitleColor:RGB(153, 153, 153)  forState:0];
        btn.layer.cornerRadius = 4.0;
        btn.layer.masksToBounds = YES;
        [btn addTarget:self action:@selector(weekTime:) forControlEvents:UIControlEventTouchUpInside];
        
        
        btn.tag = 190103+i;
        if (i == 0) {
            yesImagviewOne = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewOne.hidden = YES;
            yesImagviewOne.x = CGRectGetMaxX(btn.frame)-10;
            yesImagviewOne.y = CGRectGetMaxY(btn.frame)-10;
            [headerView addSubview:yesImagviewOne];

        }else if (i == 1){  [btn setTitle:@"周二" forState:0];
            
            yesImagviewTwo = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewTwo.hidden = YES;
            yesImagviewTwo.x = CGRectGetMaxX(btn.frame)-10;
            yesImagviewTwo.y = CGRectGetMaxY(btn.frame)-10;
            [headerView addSubview:yesImagviewTwo];
        }else if (i == 2){  [btn setTitle:@"周三" forState:0];
            
            yesImagviewThree = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewThree.hidden = YES;
            [headerView addSubview:yesImagviewThree];
            yesImagviewThree.x = CGRectGetMaxX(btn.frame)-10;
            yesImagviewThree.y = CGRectGetMaxY(btn.frame)-10;
        }else if (i == 3){[btn setTitle:@"周四" forState:0];
            yesImagviewFour = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
             yesImagviewFour.hidden = YES;
             [headerView addSubview:yesImagviewFour];
            yesImagviewFour.x = CGRectGetMaxX(btn.frame)-10;
                    yesImagviewFour.y = CGRectGetMaxY(btn.frame)-10;
        }else if (i == 4){[btn setTitle:@"周五" forState:0]; fridayBtn = btn;
            yesImagviewFive = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewFive.hidden = YES;
            [headerView addSubview:yesImagviewFive];
            yesImagviewFive.x = CGRectGetMaxX(btn.frame)-10;
            yesImagviewFive.y = CGRectGetMaxY(btn.frame)-10;
            
        }else if (i == 5){[ btn setTitle:@"周六" forState:0];
            yesImagviewSix = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewSix.hidden = YES;
            [headerView addSubview:yesImagviewSix];
            yesImagviewSix.x = CGRectGetMaxX(btn.frame)-10;
             yesImagviewSix.y = CGRectGetMaxY(btn.frame)-10;
            
        }else if (i == 6){[btn setTitle:@"周日" forState:0];

            yesImagviewSeven = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
            yesImagviewSeven.hidden = YES;
            [headerView addSubview:yesImagviewSeven];
            yesImagviewSeven.x = CGRectGetMaxX(btn.frame)-10;
            yesImagviewSeven.y = CGRectGetMaxY(btn.frame)-10;
            
        }
        else{}
        btn.layer.borderWidth = 1.0;
        btn.layer.borderColor = RGB(153, 153, 153).CGColor;
        btn.titleLabel.font = SYSTEMFONT(14.0);
       [headerView addSubview:btn];
        
    }
    
    if (weeekStr.length>0 && ![weeekStr isEqualToString:@"(null)"]) {
        NSInteger wekint = [weeekStr integerValue];
        weekStrNum = [NSString stringWithFormat:@"%zd",wekint];
        switch (wekint) {
            case 1:
                weekStr = @"周一";
                break;
            case 2:
                weekStr = @"周二";
                break;
            case 3:
                weekStr = @"周三";
                
                break;
            case 4:
                weekStr = @"周四";
                
                break;
            case 5:
                weekStr = @"周五";
                
                break;
            case 6:
                weekStr = @"周六";
                
                break;
            case 7:
                weekStr = @"周日";
                
                break;
                
            default:
                break;
        }
        UIButton *btna = (UIButton *)[self.view viewWithTag:190102+wekint];
        yesImagview.hidden = NO;
        yesImagview.x = CGRectGetMaxX(btna.frame)-10;
        yesImagview.y = CGRectGetMaxY(btna.frame)-10;
        btna.layer.borderColor = JISECOLOR.CGColor;
        [btna setTitleColor:JISECOLOR forState:0];
    }
    
    
    yesImagview = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
    yesImagview.hidden = YES;
    [headerView addSubview:yesImagview];
    


    UIView *lineHorview = [UIView createViewWithFrame:CGRectMake(10, CGRectGetMaxY(fridayBtn.frame)+10, SCREEN_WIDTH-20, 1) bgColor:RGB(229, 229, 229)];
    [headerView addSubview:lineHorview];
    
    
    for (int i = 0; i<4; i++) {
        UIButton *btn = [UIButton createBtnFrame:CGRectMake((i+1)*10+i*((SCREEN_WIDTH-50)/4.0), CGRectGetMaxY(lineHorview.frame)+12, (SCREEN_WIDTH-50)/4.0, 35) title:@"上午" bgImageName:nil titleColor:RGB(153, 153, 153) cornerRadius:4.0 maskTobound:YES action:^(UIButton *button) {
            [weakSelf dayTime:button];
        }];
        
        
        
        btn.tag = 190000+i;
        if (i == 0) {
            morningBtn = btn;
        }else if (i == 1){  [btn setTitle:@"下午" forState:0];
        }else if (i == 2){[btn setTitle:@"晚上" forState:0];
        }else if (i == 3){[btn setTitle:@"全天" forState:0];}
        else{}
//        190000+i
        btn.layer.borderWidth = 1.0;
        btn.layer.borderColor = RGB(153, 153, 153).CGColor;
        btn.titleLabel.font = SYSTEMFONT(14.0);
        [headerView addSubview:btn];
        
    }
    
    if (daydayStr.length>0 && ![daydayStr isEqualToString:@"(null)"]) {
        NSInteger dayInt = 0 ;
        if ([daydayStr isEqualToString:@"a"]) {
            dayInt = 1;
            dayStrABCD = @"a"; dayStr= @"上午";
        }else if([daydayStr isEqualToString:@"b"]){ dayInt = 2;  dayStrABCD = @"b";dayStr= @"下午";}
        else if([daydayStr isEqualToString:@"c"]){ dayInt = 3; dayStr= @"晚上"; dayStrABCD = @"c";}
        else if([daydayStr isEqualToString:@"d"]){ dayInt = 4; dayStr= @"全天"; dayStrABCD = @"d";}
        else{}
        UIButton *btna = (UIButton *)[self.view viewWithTag:189999+dayInt];
        yesDayImagview.hidden = NO;
        yesDayImagview.x = CGRectGetMaxX(btna.frame)-10;
        yesDayImagview.y = CGRectGetMaxY(btna.frame)-10;
        btna.layer.borderColor = JISECOLOR.CGColor;
        [btna setTitleColor:JISECOLOR forState:0];
    }
    
        //门诊地点
    UILabel *addressLabel = [UILabel createLabelWithFrame:CGRectMake(10, CGRectGetMaxY(morningBtn.frame)+12, 35, 40) text:@"门诊地点" titleColor:JISECOLOR textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
    [headerView addSubview:addressLabel];
    [addressLabel sizeToFit];
    UIImageView *addresview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(addressLabel.frame), 1, 5,5) imaged:[UIImage imageNamed:@"mustInPic"]];
    [headerView addSubview:addresview];
    addresview.centerYy = addressLabel.centerYy;
    
    
    yesDayImagview = [UIImageView creatImageviewWithFrame:CGRectMake(10, 10, 10, 10) imaged:[UIImage imageNamed:@"selectPractic"]];
    yesDayImagview.hidden = YES;
    [headerView addSubview:yesDayImagview];
    
    
    UIView *bgview = [UIView createViewWithFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-50, SCREEN_WIDTH, 50) bgColor:[UIColor whiteColor]];
    [self.view addSubview:bgview];
    
    UIButton *btn = [UIButton createBtnFrame:CGRectMake((SCREEN_WIDTH-150)/2, 7.5, 150, 35) title:@"确定发布" bgImageName:nil titleColor:[UIColor whiteColor] cornerRadius:4.0 maskTobound:YES action:^(UIButton *button) {
        [weakSelf  newsureRelease];
    }];
    btn.backgroundColor = JISECOLOR;
    [bgview addSubview:btn];
    sureReleaseBtn = btn;
    if ([self.addOrModifyType isEqualToString:@"add"]) {
        [btn setTitle:@"确定发布" forState:0];
        
    }else if([self.addOrModifyType isEqualToString:@"modify"]){
        [btn setTitle:@"确定修改" forState:0];

        
    }
    
}
#pragma mark week 周一 2 3 4 5 6 日
-(void)weekTime:(UIButton *)btn{
//    btn.selected = !btn.selected;
//    NSString *strday = [NSString stringWithFormat:@"%ld",(long)btn.tag];
//    if (btn.selected) {
//        btn.layer.borderColor = JISECOLOR.CGColor;
//        [btn setTitleColor:JISECOLOR forState:0];
//
//        if ([self.daysMutableArr containsObject:strday]) {
//
//        }else{
//            [self.daysMutableArr addObject:strday];
//        }

////        for (int i = 0; i<self.daysMutableArr.count; i++) {
////            NSString *strrr = [NSString stringWithFormat:@"%@",self.daysMutableArr[i]];
//        NSInteger indexx =0;
//        indexx = btn.tag - 190102;
//
//        switch (btn.tag-190102) {
//            case 1:
//             yesImagviewOne.hidden = NO;
//                break;
//            case 2:
//                yesImagviewTwo.hidden = NO;
//
//                break;
//            case 3:
//                yesImagviewThree.hidden = NO;
//
//                break;
//            case 4:
//               yesImagviewFour.hidden = NO;
//
//                break;
//            case 5:
//
//              yesImagviewFive.hidden = NO;
//                break;
//            case 6:
//
//               yesImagviewSix.hidden = NO;
//                break;
//            case 7:
//
//               yesImagviewSeven.hidden = NO;
//                break;
//
//            default:
//                break;
//        }
//
////        }
//
//    }else{
//        btn.layer.borderColor = RGB(153, 153, 153).CGColor;
//        [btn setTitleColor:RGB(153, 153, 153) forState:0];
//        if ([self.daysMutableArr containsObject:strday]) {
//                [self.daysMutableArr removeObject:strday];
//             }else{
//
//             }
//
//        NSInteger indexx =0;
//              indexx = btn.tag - 190102;
//
//              switch (btn.tag-190102) {
//                  case 1:
//                   yesImagviewOne.hidden = YES;
//                      break;
//                  case 2:
//                      yesImagviewTwo.hidden = YES;
//
//                      break;
//                  case 3:
//                      yesImagviewThree.hidden = YES;
//
//                      break;
//                  case 4:
//                     yesImagviewFour.hidden = YES;
//
//                      break;
//                  case 5:
//
//                    yesImagviewFive.hidden = YES;
//                      break;
//                  case 6:
//
//                     yesImagviewSix.hidden = YES;
//                      break;
//                  case 7:
//
//                     yesImagviewSeven.hidden = YES;
//                      break;
//
//                  default:
//                      break;
//              }
//
//    }

//    MCLog(@"self.daysMutableArr ==%@",self.daysMutableArr );

    
//    objc中向一个nil对象发送消息将会发生什么？olor:JISECOLOR forState:0];
}


#pragma mark dayTime 上午下午晚上全天
-(void)dayTime:(UIButton *)btn{
//    dayStr = [NSString stringWithFormat:@"%zd",btn.tag-189999]; //1上2下3晚4全
    switch (btn.tag-189999) {
        case 1:
            dayStr = @"上午";
            dayStrABCD = @"a";
            break;
        case 2:
            dayStr = @"下午";
            dayStrABCD = @"b";

            break;
        case 3:
            dayStr = @"晚上";
            dayStrABCD = @"c";

            break;
        case 4:
            dayStr = @"全天";
            dayStrABCD = @"d";

            break;
        default:
            break;
    }
    for (int i = 190000; i<190004; i++) {
        UIButton *btna = (UIButton *)[self.view viewWithTag:i];
        btna.layer.borderColor = RGB(153, 153, 153).CGColor;
        [btna setTitleColor:RGB(153, 153, 153) forState:0];
    }
    yesDayImagview.hidden = NO;
    yesDayImagview.x = CGRectGetMaxX(btn.frame)-10;
    yesDayImagview.y = CGRectGetMaxY(btn.frame)-10;
    btn.layer.borderColor = JISECOLOR.CGColor;
    [btn setTitleColor:JISECOLOR forState:0];
}



#pragma mark 确定发布
-(void)newsureRelease{
    if (weekStrNum.length == 0) {
        [self showHint:@"请设置门诊时间"];
    }else if(dayStrABCD.length == 0){
        [self showHint:@"请设置门诊时间"];
    }else{
        if (self.dataArray.count>1) {
            if (selectIndexview == -1) {
                  [self showHint:@"请先设置执业地点"];
            }else{
                self.dicDatasure[@"time"] =  [NSString stringWithFormat:@"%@ %@",weekStr,dayStr];
                NSString *hosNameStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"hospital_name"] ];
                 NSString *office_namestr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"office_name"] ];
                NSString *locationStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"location"] ];
                NSString *typeStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"type"] ];
                
                if ([typeStr isEqualToString:@"1"]) {
                    typeStr = @"普通门诊";
                }else if([typeStr isEqualToString:@"2"]){
                    typeStr = @"专家门诊";
                }else if([typeStr isEqualToString:@"3"]){
                    typeStr = @"特需门诊";
                }else {
                    typeStr = @"专科/专病门诊";
                }
                
                self.dicDatasure[@"detail"] =  [NSString stringWithFormat:@"%@;%@;%@;%@",hosNameStr,office_namestr,locationStr,typeStr];
                
                coverView11.hidden = NO;
                self.addDepManagerSureView.hidden = NO;
                [self.addDepManagerSureView initData:self.dicDatasure];
                self.addDepManagerSureView.y = (SCREEN_HEIGHT-self.addDepManagerSureView.height)/2;
            }
    }else{
            self.dicDatasure[@"time"] =  [NSString stringWithFormat:@"%@ %@",weekStr,dayStr];
            NSString *hosNameStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:indexInrow] objectForKey:@"hospital_name"] ];
            NSString *office_namestr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:indexInrow] objectForKey:@"office_name"] ];
            NSString *locationStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:indexInrow] objectForKey:@"location"] ];
            NSString *typeStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:indexInrow] objectForKey:@"type"] ];
            
            if ([typeStr isEqualToString:@"1"]) {
                typeStr = @"普通门诊";
            }else if([typeStr isEqualToString:@"2"]){
                typeStr = @"专家门诊";
            }else if([typeStr isEqualToString:@"3"]){
                typeStr = @"特需门诊";
            }else {
                typeStr = @"专科/专病门诊";
            }
            
            self.dicDatasure[@"detail"] =  [NSString stringWithFormat:@"%@;%@;%@;%@",hosNameStr,office_namestr,locationStr,typeStr];
            
            coverView11.hidden = NO;
            self.addDepManagerSureView.hidden = NO;
            [self.addDepManagerSureView initData:self.dicDatasure];
            self.addDepManagerSureView.y = (SCREEN_HEIGHT-self.addDepManagerSureView.height)/2;
            
        }
        
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (self.dataArray.count>0) {
        NSDictionary *dic = [self.dataArray objectAtIndex:indexPath.row];
        self.firstLab.text = [NSString stringWithFormat:@"%@",dic[@"location"]];
        ;
        [self.firstLab sizeToFit];
        self.secodeLab.x = CGRectGetMaxX(self.firstLab.frame)+5;
        NSString *typeStr = [NSString stringWithFormat:@"%@",dic[@"type"]];
        if ([typeStr isEqualToString:@"1"]) {
            typeStr = @"普通门诊";//"东院门诊五楼东侧402室
        }else if([typeStr isEqualToString:@"2"]){
            typeStr = @"专家门诊";//"东院门诊五楼东侧402
        }else if([typeStr isEqualToString:@"3"]){
            typeStr = @"特需门诊";//"东院门诊五楼东侧402室
        }else {
            typeStr = @"专科/专病门诊";//"东院门诊五楼东侧402室
        }
        self.secodeLab.text = typeStr;
        [self.secodeLab sizeToFit];
        self.secodeLab.width = self.secodeLab.width+14;
        self.firstLab.hidden  = YES;
        self.secodeLab.hidden  = YES;
        if (self.firstLab.width+self.secodeLab.width+25>SCREEN_WIDTH-20) {
            if (self.dataArray.count-1 == indexPath.row) {
                 return 100+25+10;
            }else{
                return 100+25;
            }
        }else{
            if (self.dataArray.count-1 == indexPath.row) {
                return 100+10;
            }else{
                return 100;
            }
        }
    }else{
        return  0;
    }
    
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    AddDepManagerCell *cell = [AddDepManagerCell cellWithTableView:tableView];
    cell.backgroundColor = [UIColor whiteColor];
    cell.selectionStyle =  UITableViewCellSelectionStyleNone;
    if (self.dataArray.count>0) {
    cell.indepaths = indexPath;
    cell.dataDic = [self.dataArray objectAtIndex:indexPath.row];
    cell.countValue = self.dataArray.count;
    
  
        
    if (self.selectedIndexPath && self.selectedIndexPath == indexPath) {
        cell.topbgView.layer.borderColor = JISECOLOR.CGColor;
        cell.selectImageview.hidden = NO;
    }else{
        cell.topbgView.layer.borderColor = RGB(229, 229, 229).CGColor;
        cell.selectImageview.hidden = YES;
        if ([self.addOrModifyType isEqualToString:@"modify"]) {
            NSString *fromPriorstr = [NSString stringWithFormat:@"%@",self.dataDicc[@"workplace_uuid"]];
            NSString *nowStr = [NSString stringWithFormat:@"%@",[[self.dataArray objectAtIndex:indexPath.row] objectForKey:@"uuid"]];
            if ([fromPriorstr isEqualToString:nowStr]) {
                selectIndexview = indexPath.row;
                cell.topbgView.layer.borderColor = JISECOLOR.CGColor;
                cell.selectImageview.hidden = NO;
                self.addOrModifyType = @"modif";
            }
        }
    }
        
    if (self.dataArray.count == 1) {
        selectIndexview = indexPath.row;
        cell.topbgView.layer.borderColor = JISECOLOR.CGColor;
        cell.selectImageview.hidden = NO;
    }
    
  }
 
    
  
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{

    selectIndexview = indexPath.row;
     AddDepManagerCell *cell = (AddDepManagerCell *)[tableView cellForRowAtIndexPath:indexPath];
    /*NSIndexPath *indexPath = [NSIndexPath indexPathForRow:sender.tag inSection:0];*/ /*如果是点击cell上子控件可用此方法找到对应path*/
    if (self.selectedIndexPath) {//上一个选中的改变状态
        cell = [self.tableView cellForRowAtIndexPath:self.selectedIndexPath];
        cell.topbgView.layer.borderColor = RGB(229, 229, 229).CGColor;
        cell.selectImageview.hidden = YES;
    }
    cell = [self.tableView cellForRowAtIndexPath:indexPath];
    cell.topbgView.layer.borderColor = JISECOLOR.CGColor;
    cell.selectImageview.hidden = NO;
    
    self.selectedIndexPath = indexPath;
    [self.tableView reloadData];
}






#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)type{
   [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
        if ([type isEqualToString:@"list"]) {
            [weakSelf practiseAddListRequest];
            
          }else if([type isEqualToString:@"modify"]){
            [weakSelf modifyDepManagerRequest];
        }else{
            [weakSelf addDepManagerRequest];
        }
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        if ([type isEqualToString:@"list"]) {
            [weakSelf practiseAddListRequest];
            
        }else if([type isEqualToString:@"modify"]){
            [weakSelf modifyDepManagerRequest];
        }
        else{
            [weakSelf addDepManagerRequest];
        }
        
    }];
    
}


#pragma mark 接口请求 gzz181225  执业地点列表
-(void)practiseAddListRequest{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@listWorkPlace",IMAURLAPP];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1

    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:@"Uuid"]];
    NSString *timestamp;
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];

    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    WEAKSELFS
    MCLog(@"dicM==%@",dicM);
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"dic====%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        //200正确
        if ([code isEqualToString:@"200"]) {
            NSArray *arr = [dic  objectForKey:@"list"];
            
            if ([arr count]>0) {
                [self.dataArray addObjectsFromArray:arr];
            }
            if (self.dataArray.count == 1) {
                selectIndexview = 0;
            }
        }
        [weakSelf.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];

    }];
}

#pragma mark 接口请求  添加门诊安排
-(void)addDepManagerRequest{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Strurl = [NSString stringWithFormat:@"%@addOutPatient",IMAURLAPP];
    
    NSMutableDictionary *dicM = [NSMutableDictionary dictionary];
    
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1

dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:@"Uuid"]];
    NSString *timestamp;
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = timestamp;
    dicM[@"version"] = VERSONNUN;
    
    
    dicM[@"workplace_uuid"] = [[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"uuid"];
    dicM[@"week"] = [NSString stringWithFormat:@"%@",weekStrNum];
    dicM[@"day"] =  [NSString stringWithFormat:@"%@",dayStrABCD];
    dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];
    dicM[@"note"] =  @"";
    
    NSString *publicKey = @"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDv5uPub/HrhjmHC3FrH75cc87mllXevhn4Z2TP/TtprEg1rH2esspM0IPk/IiU+twnqEFNQBwld+tc3asI9UGfqH3kuKu1k1GAQxsszNhs+2EllUq7LC9CLsfIJDUVYGXRgQv2bKo6qM7/KacZkXEeTfJ7WZOa8H2txM3eVpS9mwIDAQAB";
    
    NSString * str = [self dicToStr:dicM];
    
    //使用字符串格式的公钥私钥加密解密
    NSString *encryptStr = [RSAEncryptor encryptString:str publicKey:publicKey];
    MCLog(@"encryptStr ==%@",encryptStr);
    NSMutableDictionary * diccc = [[NSMutableDictionary alloc]init];
    dicM[@"token"] = encryptStr;
    
    diccc[@"token"] = encryptStr;
    
    WEAKSELFS
    [manager POST:Strurl  parameters:diccc progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *codee = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"200"]) {
            [weakSelf.navigationController popViewControllerAnimated:YES];
        }else{
            [self showHint:dic[@"message"]];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}

#pragma mark 接口请求  修改门诊安排
-(void)modifyDepManagerRequest{
    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    NSString *Strurl = [NSString stringWithFormat:@"%@updateOutPatient",IMAURLAPP];
    
    NSMutableDictionary *dicM = [NSMutableDictionary dictionary];
    
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1

dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:@"Uuid"]];
    NSString *timestamp;
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestam"] = timestamp;
    dicM[@"version"] = VERSONNUN;
    
    
    dicM[@"workplace_uuid"] = [[self.dataArray objectAtIndex:selectIndexview] objectForKey:@"uuid"];
    //    uuid    门诊安排uuid
    //    workplace_uuid    执业地点uuid
    dicM[@"week"] = [NSString stringWithFormat:@"%@",weekStrNum];
    dicM[@"day"] =  [NSString stringWithFormat:@"%@",dayStrABCD];
    dicM[@"uuid"] = [NSString stringWithFormat:@"%@",self.dataDicc[@"uuid"]];
    dicM[@"type"] = [NSString stringWithFormat:@"%@",@"1"];
    dicM[@"note"] =  @"";
    
    NSString *publicKey = @"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDv5uPub/HrhjmHC3FrH75cc87mllXevhn4Z2TP/TtprEg1rH2esspM0IPk/IiU+twnqEFNQBwld+tc3asI9UGfqH3kuKu1k1GAQxsszNhs+2EllUq7LC9CLsfIJDUVYGXRgQv2bKo6qM7/KacZkXEeTfJ7WZOa8H2txM3eVpS9mwIDAQAB";
    
    NSString * str = [self dicToStr:dicM];
    
    //使用字符串格式的公钥私钥加密解密
    NSString *encryptStr = [RSAEncryptor encryptString:str publicKey:publicKey];
    dicM[@"token"] = encryptStr;
    WEAKSELFS
    [manager POST:Strurl  parameters:dicM progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *codee = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"200"]) {
            
//            gzz20200218
            [theUserDefaultGcc setObject:@"yes" forKey:@"modifyMenzhen"];
            [weakSelf.navigationController popViewControllerAnimated:YES];
        }else{
            [self showHint:dic[@"message"]];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    }];
}


#pragma mark 字典转string
-(NSString *)dicToStr:(NSDictionary *)params{
    
    NSArray *keyArray = [params allKeys];
    
    NSArray *sortArray = [keyArray sortedArrayUsingComparator:^NSComparisonResult(id  _Nonnull obj1, id  _Nonnull obj2) {
        return [obj1 compare:obj2 options:NSNumericSearch];
    }];
    
    
    NSMutableArray *valueArray = [NSMutableArray array];
    for (NSString *sortString in sortArray) {
        [valueArray addObject:[params objectForKey:sortString]];
    }
    
    NSMutableArray *signArray = [NSMutableArray array];
    for (int i = 0; i < sortArray.count; i++) {
        NSString *keyValueStr = [NSString stringWithFormat:@"%@=%@",sortArray[i],valueArray[i]];
        [signArray addObject:keyValueStr];
    }
    
    NSString *sign = [signArray componentsJoinedByString:@"&"];
    return sign;

    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end







患者端的
#import "VideoHomeController.h"
#import "MyHeaderView.h"
#import "MyFooterView.h"
#import "MyFooterView1.h"
#import "VideoTypesController.h"
//#import "VideoDetailController.h"

#import "VideoDetailNewVC.h"

#import "VideoStoresController.h"
#import "VideoSearchVC.h"
#import "RightIamgeviewSizeBtn.h"
#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"
#import "SearchAndSignsVC.h"

@interface VideoHomeController ()<UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout,UITableViewDelegate,UITableViewDataSource,TTGTextTagCollectionViewDelegate>{
    
    NSString *readNumsUUID;// 原来的 全部类型的
    
    NSString *readNumsUUIDA;//noMore
    NSString *whichCollectionShow;// more  noMore
    
    BOOL isSelectContent;//是不是筛选
    BOOL isAllvideoBtn;//是不是点击了全部视频
    NSUInteger numbers;//nomore 页数
    BOOL isSelectSureBtn;//是不是点击了确定按钮
    NSString *type_uuid;//参数 uuid 视频筛选接口标签
    BOOL isFirstCell;//是不是选中了全部视频
    
    NSString  * sysTimestr;//系统时间戳gzz181225
}


@property(strong,nonatomic)UICollectionView *myCollectionV;

@property(nonatomic,strong)NSMutableArray *dataMarrySection; //有多少个section
@property(nonatomic,strong)NSMutableArray *dataMarrySectionCopy;//tableview展示 多加了一个全部
@property(nonatomic,strong)NSMutableArray *dataMarryNumber; // 每个section有多少个元素
@property(nonatomic,strong)NSMutableArray *dataMarryTayeuuid; //more 更多时的下页面uuid 现在 也在本页面用了
@property (nonatomic,copy) NSString *isBlock;//gzz170216 11111  阅读自动加一


@property(strong,nonatomic)UICollectionView *myCollectionNoMore;


/*筛选*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *selectContentBtn;
/*最左边的图片*/
@property (nonatomic, strong)UIImageView *leftImageview ; //全部视频 左边的那个图片
/*全部视频  文字在左边，图片在右边 还可以根据字的多少扩充 有最大限度*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *allVideoChange;
/*isHiddenTablevie 点击全部tableview是否出现*/
@property (nonatomic, assign) BOOL isHiddenTablevie;
/*isHiddenSelectSigns 点击筛选collection是否出现*/
@property (nonatomic, assign) BOOL isHiddenSelectSigns;
/*tablevie bgTablview*/
@property (nonatomic, strong) UIView *bgTablview;
/*selectSign bgSelecSigns*/
@property (nonatomic, strong) UIView *bgSelecSigns;
/*tablview*/
@property (nonatomic, strong)UITableView  *tabview ;



/*标签*/
@property (strong, nonatomic)  TTGTextTagCollectionView *textTagCollectionView2;
/*盛放选中数据 点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2;
/*盛放选中数据 没有点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2NoSureBtn;
@property(strong,nonatomic) NSMutableArray *dataMuarry;//NoMore 数据源
/*盛放标签的数组*/
@property (nonatomic, strong) NSMutableArray *tagsMarr;// 接口请求得到的
/*参数 选中的标签name*/
@property (nonatomic, copy) NSString *signsStr;//数组转化为字符串

@end

static NSString *indentifyVideo = @"indentifyVideo";//第一个collection 有more

static NSString *indentifyVideoTypes = @"indentifyVideoTypes";//第2个collection 无more


@implementation VideoHomeController


-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    
    
    if ([whichCollectionShow isEqualToString:@"more"]) {
        
        
        MCLog(@"moremoremoremoremoremoremore");
        
        NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
        NSString *videoY = [NSString stringWithFormat:@"%@",[dess objectForKey:@"jingxuan_video"]]; //22222
        NSUserDefaults *jinIN = [NSUserDefaults standardUserDefaults];
        NSString *videoYY = [NSString stringWithFormat:@"%@",[jinIN objectForKey:@"isJingxuanInDetail"]];//isJingxuanInDetail  2222
        
        if ([videoY isEqualToString:@"isVideo"] && ![_isBlock isEqualToString:@"yesB"]) {
            // jingxuan_videoUUID    isBlock  22222222
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; // jingxuan_videoUUID 222
            readNumsUUID = videosY;//gzz170216    22222222
            [_myCollectionV reloadData];
            
            //gzz170216  33333 jingxuan_video
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];
        } else if([videoYY isEqualToString:@"isJingxuanInDe"]){
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; //jingxuan_videoUUID 333
            readNumsUUID = videosY;//gzz170216  33333
            [_myCollectionV reloadData];
            
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noJingxuanInDe" forKey:@"isJingxuanInDetail"]; //isJingxuanInDetail 3333
        }else{
            
        }
        
        
    }
    
    else{
        
        MCLog(@"NNNNNNNNNNmoremoremoremoremoremoremore");
        
        NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
        NSString *videoY = [NSString stringWithFormat:@"%@",[dess objectForKey:@"jingxuan_video"]]; // jingxuan_video 5555
        if ([videoY isEqualToString:@"isVideo"] && ![_isBlock isEqualToString:@"yesB"]) {
            //        jingxuan_videoUUID                            block2222
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; //4444 jingxuan_videoUUID
            readNumsUUIDA = videosY;//gzz170216  222
            [_myCollectionNoMore reloadData];
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"]; //jingxuan_video 6666
        }
        
    }
    
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = bgLineColor;//gzz170615
    self.navigationItem.title = @"肝胆视频";
    [self navBarVideohome];
    [self dataOpens];
    [self signsRequest];
    [self makeUIVideo];
    
    [self makeUiCollectionMOre];//nomore
    [self DownFreshVideotypes];//nomore
    [self upFreshVideotypes];//nomore
    
//    [self dataRequestInterface];//第一次进来时 有more接口
    [self getSystemTimeFromServer:@"one"];
}


#pragma mark 数据的初始化
-(void)dataOpens{
    sysTimestr = @""; //gzz181225
    isSelectContent = NO;
    isAllvideoBtn = NO;
    _isHiddenTablevie = YES;
    _isHiddenSelectSigns = YES;
    isSelectSureBtn = NO;
    
    
    _dataSeletMarr2 = [NSMutableArray array];
    
    _dataMuarry = [NSMutableArray array];//nomore
    
    _dataMarrySection = [NSMutableArray array]; //section 数据
    _dataMarrySectionCopy = [NSMutableArray array];
    [_dataMarrySectionCopy addObject:@"全部视频"];
    _dataMarryNumber = [NSMutableArray array];//number 数据
    _dataMarryTayeuuid = [NSMutableArray array];
    readNumsUUID = @"0";//gzz170616
    _dataSeletMarr2NoSureBtn = [NSMutableArray array];
    _tagsMarr = [NSMutableArray array];
    _signsStr = @"";
    numbers = 1;
    
    whichCollectionShow = @"more";
    readNumsUUIDA = @"0";
    isFirstCell = NO;
}

#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)oneOrtwo{
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",Public_URLPic];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
        if ([oneOrtwo isEqualToString:@"one"]) {
            [weakSelf dataRequestInterface];

        }else{
            [weakSelf VideohotAndNewAndSignRequest];

        }
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        if ([oneOrtwo isEqualToString:@"one"]) {
            [weakSelf dataRequestInterface];
            
        }else{
            [weakSelf VideohotAndNewAndSignRequest];
        }
        MCLog(@"dddddddddd");
        
    }];
    
}

#pragma mark 接口请求 第一批淘汰接口 gzz180628
#pragma mark  数据请求的接口 原来的有全部的 有more
-(void)dataRequestInterface{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@videoNew",Public_URLNew];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    
    
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"W"];//1
//    dicM[@"user_uuid"] = @"miniprogram";//2
//
    
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",@"2.7.9"];
    //上面四个是固定的

    MCLog(@"video para==%@",dicM);
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arrM = [data objectForKey:@"data"];
            if (arrM.count>0) {
                
                if ([arrM isKindOfClass:[NSArray class]]) {
                    NSMutableArray *tempM = [NSMutableArray array];//gzz1125
                    for (int i=0;i<arrM.count;i++) {
                        NSString *sectionStr = [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"name"]];
                        if ([sectionStr isEqualToString:@"z-BMS患者端"]) {
                            
                        }else{//gzz20190411
                             [_dataMarrySection addObject:sectionStr];
                        }
                       
                        [_dataMarryTayeuuid addObject: [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"uuid"]]];
                        NSMutableArray *videoArr = [NSMutableArray arrayWithArray:[[arrM objectAtIndex:i] objectForKey:@"video"]];
                        [tempM addObject:videoArr];//tempM
                        
                    }
                    [_dataMarrySectionCopy addObjectsFromArray:_dataMarrySection];
                    
                    
                    if (tempM.count>0) {
                        
                        [_dataMarryNumber addObjectsFromArray:tempM];
                    }
                    
                    [_myCollectionV reloadData];
                    
                    
                }
            }
            
        }else{
            [self showHint:[data  objectForKey:@"message"]];
        }
        
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            [self removeShowMessage];
        }else{
            [self removeShowMessage];
            
            [self createShowMessage:@"暂无视频点播"];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    } failure:^(NSError *error) {
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            [self removeShowMessage];
        }else{
            [self removeShowMessage];
            
            [self createShowMessage:@"暂无视频点播"];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}

sidetable  _若引用表 引用计数表



#pragma mark 界面
-(void)makeUIVideo{
    
    [self selectView];
    [self collecetionVideo];
    
}

#pragma mark 筛选的界面
- (void)selectView{
    
    
    UIView *bgSeleview = [UIView createViewWithFrame:CGRectMake(0, 10+kTopHeight, SCREEN_WIDTH, 40) bgColor:[UIColor whiteColor]];
    [self.view addSubview:bgSeleview];
    
    _selectContentBtn = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2+1, 0, 100, 40)];
    [bgSeleview addSubview:_selectContentBtn];
    [_selectContentBtn setTitle:@"筛选" forState:0];
    [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
    _selectContentBtn.titleLabel.font = SYSTEMFONT(16.0);
    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSMoren"] originalImage] forState:0];
    _selectContentBtn.backgroundColor = [UIColor clearColor];
    [_selectContentBtn sizeToFit];
    _selectContentBtn.frame = CGRectMake(SCREEN_WIDTH-_selectContentBtn.width-10, _selectContentBtn.y, _selectContentBtn.width+5,40);
    [_selectContentBtn addTarget:self action:@selector(selecContentClick) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIView *verticalLine = [UIView createViewWithFrame:CGRectMake(SCREEN_WIDTH-11.5-_selectContentBtn.width-10, 11.5, 1, 17) bgColor:hengLineColor];
    [bgSeleview addSubview:verticalLine];
    
    
    _leftImageview = [UIImageView creatImageviewWithFrame:CGRectMake(15, 11.5, 17, 17) imaged:[UIImage imageNamed:@"allVideoSMoren"]];
    [bgSeleview addSubview:_leftImageview];
    
    
    _allVideoChange = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(CGRectGetMaxX(_leftImageview.frame)+5, 0, kTopHeight+36, 40)];
    [bgSeleview addSubview:_allVideoChange];
    
    [_allVideoChange setTitle:@"全部视频" forState:0];
    [_allVideoChange setTitleColor:[UIColor lightGrayColor] forState:0];
    _allVideoChange.titleLabel.font = SYSTEMFONT(16.0);
    _allVideoChange.titleLabel.lineBreakMode = NSLineBreakByTruncatingTail;
    _allVideoChange.titleLabel.textAlignment = NSTextAlignmentLeft;
    [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSMoren"] originalImage] forState:0];
    _allVideoChange.backgroundColor = [UIColor clearColor];
    [_allVideoChange sizeToFit];
    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width;
    if (_allVideoChange.width>maxViedoWidth) {
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);
    }else{
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);
        
    }
    [_allVideoChange addTarget:self action:@selector(allVideContentClick) forControlEvents:UIControlEventTouchUpInside];
    
    
    
}



#pragma mark 点击全部视频  按钮
- (void)allVideContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    if (_dataSeletMarr2.count>0 && isSelectSureBtn ) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSLight"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
    }else{
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSMoren"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
    }
    
    _isHiddenSelectSigns = YES;
    isSelectContent = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
    isAllvideoBtn = !isAllvideoBtn;
    if (isAllvideoBtn) {
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        
        _bgTablview = [UIView createViewWithFrame:CGRectMake(0, kTopHeight+20+40, SCREEN_WIDTH, SCREEN_HEIGHT-60-kTopHeight-SafeAreaBottomHeight) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgTablview];
        
        _tabview = [[UITableView alloc]initWithFrame:CGRectMake(0,0, SCREENW,SCREENH-kTopHeight-60-SafeAreaBottomHeight) style:UITableViewStylePlain];
        
        _tabview.backgroundColor = [UIColor clearColor];
        _tabview.delegate = self;
        _tabview.dataSource = self;
        _tabview.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tabview.tableFooterView = [[UIView alloc]init];
        
        _tabview.estimatedRowHeight = 45;//gzz170704
        
        [_bgTablview addSubview:_tabview];
        
        
    }else{
        
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        [UIView animateWithDuration:0.25 animations:^{
            _bgTablview.hidden = YES;
        } completion:^(BOOL finished) {
            [_tabview removeFromSuperview];
            [_bgTablview removeFromSuperview];
        }];
        
    }
    
    //    isSelectSureBtn = NO;
    MClogFunc
    
}


#pragma mark tableview start

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    return _dataMarrySectionCopy.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    NSString *cellID = @"cellIDSelectVideo";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.backgroundColor = [UIColor whiteColor];
    cell.textLabel.textColor = [UIColor lightGrayColor];
    
    cell.textLabel.numberOfLines = 2;
    if (indexPath.row ==0 ) {
        cell.textLabel.text = @"全部视频";
        if (isFirstCell) {
            cell.textLabel.textColor = JISECOLOR;
            
        }else{
            cell.textLabel.textColor = [UIColor lightGrayColor];
            
        }
        
    }else{
        if (_dataMarrySectionCopy.count>1) {
            
            NSString *typestr = [NSString stringWithFormat:@"%@",[_dataMarrySectionCopy objectAtIndex:indexPath.row]];
            NSString *tepstr = typestr;
            if (tepstr.length>=6) {
                tepstr = [tepstr substringToIndex:6];
            }else if (tepstr.length>=4){
                tepstr = [tepstr substringToIndex:4];
            }
            
            if([tepstr containsString:@"---"]){
                NSRange range = [tepstr rangeOfString:@"---"];
                typestr = [typestr substringFromIndex:range.location+3];
            }else if ([tepstr containsString:@"--"]) {
                NSRange range = [tepstr rangeOfString:@"--"];
                typestr = [typestr substringFromIndex:range.location+2];
            }else if([tepstr containsString:@"-"]){
                NSRange range = [tepstr rangeOfString:@"-"];
                typestr = [typestr substringFromIndex:range.location+1];
            }
            
            cell.textLabel.text = typestr;
            NSString *titleBtn = [NSString stringWithFormat:@"%@",[_allVideoChange currentTitle]];
            if ([titleBtn isEqualToString:cell.textLabel.text]) {
                cell.textLabel.textColor = JISECOLOR;
                
            }
            
        }
    }
    
    
    cell.textLabel.font = SYSTEMFONT(14.0);
    return cell;
    
}

#pragma mark tableview 的did方法
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.row == 0) {
        isFirstCell = YES;
    }else{
        isFirstCell = NO;
    }
    UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    cell.textLabel.textColor = JISECOLOR;
    
    _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
    [_allVideoChange setTitle:cell.textLabel.text forState:0];
    [_allVideoChange setTitleColor:JISECOLOR forState:0];
    [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
    [_allVideoChange sizeToFit];
    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width;
    if (_allVideoChange.width>maxViedoWidth) {
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);
    }else{
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);
    }
    //    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    
#pragma mark 数据请求More
    if (indexPath.row == 0) {
        //gzz170629
        if (_signsStr.length > 0) {//有标签时
            
            type_uuid = @"";//点击全部视频时uuid传空
            whichCollectionShow = @"noMore";
            _myCollectionV.hidden = YES;
            _myCollectionNoMore.hidden = NO;
            [_dataMuarry removeAllObjects];
            numbers = 1;
//            [self VideohotAndNewAndSignRequest];
            [self getSystemTimeFromServer:@"two"];
            
        }else{
            
            _myCollectionNoMore.hidden = YES;
            _myCollectionV.hidden = NO;
            whichCollectionShow = @"more";
            type_uuid = @"";//点击全部视频时uuid传空
            [_myCollectionV reloadData];//gzz170629
            
        }
        
        
    }else{
#pragma mark 数据请求noMore
        
        whichCollectionShow = @"noMore";
        _myCollectionV.hidden = YES;
        _myCollectionNoMore.hidden = NO;
        
        [_dataMuarry removeAllObjects];
        numbers = 1;//gzz20190416
        type_uuid = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:indexPath.row-1]];
//        [self VideohotAndNewAndSignRequest];
        [self getSystemTimeFromServer:@"two"];

    }
}

#pragma mark tableview end

#pragma mark selectContentClick筛选 按钮
- (void)selecContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    isSelectContent = !isSelectContent;
    if (isSelectContent) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSLight"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        
        [self tagsUIVideo];
        
        
    }else{
        
        if (_dataSeletMarr2.count>0 && isSelectSureBtn) {
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSLight"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        }else{
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSMoren"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
        }
        
        [self.view endEditing:YES];
        _isHiddenSelectSigns = YES;
        [UIView animateWithDuration:0.25 animations:^{
            _bgSelecSigns.hidden = YES;
            _bgSelecSigns.alpha = 0;
        } completion:^(BOOL finished) {
            [_textTagCollectionView2 removeFromSuperview];
            [_bgSelecSigns removeFromSuperview];
        }];
        
    }
}

#pragma mark 筛选的界面
- (void)tagsUIVideo{
    
    if (_isHiddenSelectSigns) {
        _isHiddenSelectSigns = NO;
        _bgSelecSigns = [UIView createViewWithFrame:CGRectMake(0, kTopHeight+60, SCREEN_WIDTH, SCREEN_HEIGHT-60-kTopHeight-SafeAreaBottomHeight) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgSelecSigns];
        
        
        _textTagCollectionView2 = [[TTGTextTagCollectionView alloc]init];
        [_bgSelecSigns addSubview:_textTagCollectionView2];
        _textTagCollectionView2.selectionLimit = 3;
        _textTagCollectionView2.frame = CGRectMake(10, 20, self.view.frame.size.width-20, SCREEN_HEIGHT-kTopHeight-60-45-20-SafeAreaBottomHeight);
        _textTagCollectionView2.backgroundColor = [UIColor clearColor];
        NSMutableArray *arrTags = [NSMutableArray array];
        if (_tagsMarr.count >0) {
            for (int i=0; i<_tagsMarr.count; i++) {
              
                [arrTags addObject:[[_tagsMarr objectAtIndex:i] objectForKey:@"NAME"]];
            }
        }
        
        _textTagCollectionView2.delegate = self;
        _textTagCollectionView2.showsVerticalScrollIndicator = NO;
        TTGTextTagConfig *config = _textTagCollectionView2.defaultConfig;
        config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
        //文本的颜色
        config.tagTextColor = QIANBLACKCOLOR;
        //选中的样色
        config.tagSelectedTextColor = JISECOLOR;
        
        config.tagBackgroundColor = [UIColor clearColor];
        config.tagSelectedBackgroundColor = [UIColor clearColor];
        
        //水平竖直间距
        if (SCREEN_WIDTH == 320) {
            _textTagCollectionView2.horizontalSpacing = 12.0;
            _textTagCollectionView2.verticalSpacing = 12.0;
        }else if (SCREEN_WIDTH == 375 ){
            
            _textTagCollectionView2.horizontalSpacing = 23.0;
            _textTagCollectionView2.verticalSpacing = 15.0;
        }else if (SCREEN_WIDTH == 414 ){
            
            _textTagCollectionView2.horizontalSpacing = 30.0;
            _textTagCollectionView2.verticalSpacing = 20.0;
        }else{
            //iPhone
            
        }
        
        //外围包裹
        config.tagBorderColor = QIANBLACKCOLOR;
        config.tagSelectedBorderColor = JISECOLOR;
        config.tagBorderWidth = 1;
        config.tagSelectedBorderWidth = 1;
        
        //阴影
        config.tagShadowColor = [UIColor whiteColor];
        config.tagShadowOffset = CGSizeMake(0, 0);
        config.tagShadowOpacity = 0.0f;
        config.tagShadowRadius = 0.0f;
        
        //裁剪
        config.tagCornerRadius = 10.0;
        config.tagSelectedCornerRadius = 10.0;
        
        //扩展宽高
        config.tagExtraSpace = CGSizeMake(10, 10);
        [_textTagCollectionView2 addTags:arrTags];
        _textTagCollectionView2.alignment = 0;
        
        if (isSelectSureBtn) {
            for (int i = 0; i<_dataSeletMarr2.count; i++) {
                NSUInteger index = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:index selected:YES];
            }
            [_dataSeletMarr2NoSureBtn addObjectsFromArray:_dataSeletMarr2];
            
            
        }else{
            
            isSelectSureBtn = NO;
            
            [_dataSeletMarr2 removeAllObjects];
        }
        
        
        [_textTagCollectionView2 reload];
        
        WEAKSELFS
        UIButton *resetBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35) title:@"重置" bgImageName:@"d" titleColor:JISECOLOR bgColor:[UIColor whiteColor] titleLabelFont:20 action:^(UIButton *button) {
            
            for (int i = 0; i<_dataSeletMarr2NoSureBtn.count; i++) {
                NSInteger indexs = [_dataSeletMarr2NoSureBtn[i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:indexs selected:NO];
            }
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            [_dataSeletMarr2 removeAllObjects];
            
            _signsStr = @"";
            
        }];
        resetBtn.layer.cornerRadius = 5;
        resetBtn.layer.masksToBounds = YES;
        resetBtn.layer.borderWidth = 1;
        resetBtn.layer.borderColor = RGB(63, 199, 193).CGColor;
        [_bgSelecSigns addSubview:resetBtn];
        
        
        
        UIButton *sureBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(CGRectGetMaxX(resetBtn.frame)+10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35) title:@"确定" bgImageName:@"d" titleColor:[UIColor whiteColor] bgColor:JISECOLOR titleLabelFont:20 action:^(UIButton *button) {
            
            
            isSelectSureBtn = YES;
            
            [weakSelf sureBtnClick];
            
            [_dataSeletMarr2 removeAllObjects];
            
            [_dataSeletMarr2 addObjectsFromArray:_dataSeletMarr2NoSureBtn];
            
            //移除选中的数据
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            
            isSelectContent = !isSelectContent;
            [self removeShowMessage];
            if (isSelectContent) {
                [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSLight"] originalImage] forState:0];
                [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                
                
            }else{
                if (_dataSeletMarr2.count>0) {
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSLight"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                }else{
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiSMoren"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
                }
                
            }
            
            NSMutableArray *arrTags = [NSMutableArray array];
            if (_dataSeletMarr2.count >0) {
                for (int i=0; i<_dataSeletMarr2.count; i++) {
                    NSInteger indesx = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                    [arrTags addObject:[[_tagsMarr objectAtIndex:indesx] objectForKey:@"NAME"]];
                }
                
            }
            
            _signsStr = [arrTags componentsJoinedByString:@","];
            
            if (_signsStr.length == 0 && type_uuid.length == 0) {
                //标签为空 uuid为空 直接是全部 gzz20190417
                _myCollectionV.hidden = NO;
                _myCollectionNoMore.hidden = YES;
                [_myCollectionV reloadData];
                return ;
            }else if(_signsStr.length == 0 && type_uuid.length > 0){
                //标签为空 uuid不为空 请求接口
                whichCollectionShow = @"noMore";
                _myCollectionV.hidden = YES;
                _myCollectionNoMore.hidden = NO;
                [_dataMuarry removeAllObjects];
                numbers = 1;
//                [weakSelf VideohotAndNewAndSignRequest];
                [self getSystemTimeFromServer:@"two"];

            }else{
                whichCollectionShow = @"noMore";
                _myCollectionV.hidden = YES;
                _myCollectionNoMore.hidden = NO;
                [_dataMuarry removeAllObjects];
                numbers = 1;
//                [weakSelf VideohotAndNewAndSignRequest];
                [self getSystemTimeFromServer:@"two"];

            }
            
    
            
        }];
        sureBtn.layer.cornerRadius = 5;
        sureBtn.layer.masksToBounds = YES;
        [_bgSelecSigns addSubview:sureBtn];
        
    }
}


#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
    //    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
        [_dataSeletMarr2NoSureBtn addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<_dataSeletMarr2NoSureBtn.count; i++) {
            if ([[_dataSeletMarr2NoSureBtn objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [_dataSeletMarr2NoSureBtn removeObjectAtIndex:i];
            }
        }
    }
    //    NSLog(@"---盛放的数据-%@-",_dataSeletMarr2NoSureBtn);
}

#pragma mark 确定
-(void)sureBtnClick{//gzz0207
    
    [self.view endEditing:YES];
    _isHiddenSelectSigns = YES;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
}



-(void)collecetionVideo{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    
    _myCollectionV = [[UICollectionView alloc]initWithFrame:CGRectMake (0, 0+60+kTopHeight,  self.view.frame.size.width, self.view.frame.size.height-60-kTopHeight-SafeAreaBottomHeight) collectionViewLayout:flowL];
    
    _myCollectionV.delegate =self;
    _myCollectionV.dataSource =self;
    _myCollectionV.backgroundColor =  bgLineColor;//gzz1129
    
    _myCollectionV.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_myCollectionV];
    
#pragma mark -- 注册单元格
    [_myCollectionV registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:indentifyVideo];
    
#pragma mark -- 注册头部视图
    [_myCollectionV registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"];
#pragma mark -- 注册尾部视图
    [_myCollectionV registerClass:[MyFooterView class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"];
    
    
    
}

#pragma mark --UICollectionView dataSource
//有多少个Section
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    if (collectionView == _myCollectionV) {
        return _dataMarrySection.count;
        
    }else{
        
        return 2;
        
    }
}

//每个section有多少个元素
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    if (collectionView == _myCollectionV) {
        return [[_dataMarryNumber objectAtIndex:section] count];
    }else{
        
        if (section == 0) {
            return 0;
            
        }else{
            return _dataMuarry.count;//gzz1114
            
        }
        
    }
    
}
//每个单元格的数据
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (collectionView == _myCollectionV) {
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:indentifyVideo forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        cell.backgroundColor = bgLineColor;//gzz1129
        
        [cell.contentView addSubview:[self   cellIndex:(int)indexPath.item  sectionn:indexPath.section] ];
        return cell;
        
    }else{
        
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:indentifyVideoTypes forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        cell.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];;//[UIColor purpleColor];
        if (_dataMuarry.count>0) {
            
            [cell.contentView addSubview:[self cellIndex:(int)indexPath.item]];
        }
        return cell;
        
    }
    
}


#pragma mark 自定义item 有More的
-(UIView *)cellIndex:(NSInteger)index sectionn:(NSInteger)section{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]init];
    if (index%2==0) {
        viewdd.frame = CGRectMake(10, 0, widthD, height);
    }else{
        viewdd.frame = CGRectMake(0, 0, widthD, height);
    }
    viewdd.backgroundColor = [UIColor whiteColor];
    
    
    //gzz1125
    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[[_dataMarryNumber objectAtIndex:section] objectAtIndex:index]];
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD, height)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];//gzz1130
    
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-10, 10)];
    
    desLabel.textColor = RGB(102, 102, 102) ;//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    
    [viewdd addSubview:desLabel];
    
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];
    desLabel.text= summary;
    
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB(153,153,153);
    expertLabel.font = [UIFont systemFontOfSize:14];
    NSString *public_name = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];
    
    expertLabel.text = public_name;
    [viewdd addSubview:expertLabel];
    //    expertLabel.backgroundColor = [UIColor blueColor];
    expertLabel.backgroundColor = [UIColor clearColor];
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerY = expertLabel.centerY;
    [viewdd addSubview:liangView];
    
    
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUID isEqualToString:[dicc objectForKey:@"uuid"]]) {
        NSInteger num = [nums integerValue]+1;  // readNumsUUID 444444
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        
        [[_dataMarryNumber objectAtIndex:section] replaceObjectAtIndex:index withObject:dicc];
        
        readNumsUUID = @"0";  ////555555
    }
    
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerY = image1.centerY;
    
    //    CGFloat liangX = widthD-image1.width-label2.width-15;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    //    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+10);gzz1129
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    
    return viewdd;
}

//每个cell的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        CGFloat widthD = (SCREEN_WIDTH-10)/2;
        CGFloat widthD1 = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD1/1.61+36+30+16-5+10;
        return CGSizeMake(widthD, height);
    }else{
        
        CGFloat widthD = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD/1.61+36+30+16-5+10;
        
        //    CGFloat height = widthD/1.61+36+30+16;gzz1129
        return CGSizeMake(widthD, height);
    }
    
}


//设置头尾部内容
-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        
        UICollectionReusableView *reusableView ;
        
        if (kind ==UICollectionElementKindSectionHeader) {
            //定制头部视图的内容
            _isBlock = @"yesA";//gzz170216   333333333
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"]; //444444 jingxuan_video
            
            
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"forIndexPath:indexPath];
            headerV.moreLab.text = @"更多";
            headerV.moreLab.textColor = JISECOLOR;//gzz170206
            
            NSString *typestr =  [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:indexPath.section]];
            NSString *tepstr = typestr;
            if (tepstr.length>=6) {
                tepstr = [tepstr substringToIndex:6];
            }else if (tepstr.length>=4){
                tepstr = [tepstr substringToIndex:4];
            }
            
            if([tepstr containsString:@"---"]){
                NSRange range = [tepstr rangeOfString:@"---"];
                typestr = [typestr substringFromIndex:range.location+2];
            }else if ([tepstr containsString:@"--"]) {
                NSRange range = [tepstr rangeOfString:@"--"];
                typestr = [typestr substringFromIndex:range.location+2];
            }else if([tepstr containsString:@"-"]){
                NSRange range = [tepstr rangeOfString:@"-"];
                typestr = [typestr substringFromIndex:range.location+1];
            }
            
            headerV.titleStr = typestr;
            headerV.moreIMageview.tag = indexPath.section*1108;
            headerV.moreIMageview.backgroundColor = [UIColor clearColor];
            MCLog(@"tag..-===第几个section.%zd.",indexPath.section*1108);
            UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(gesTap:)];
            [headerV.moreIMageview addGestureRecognizer:ges];
            reusableView = headerV;
        }
        
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView *footerV = (MyFooterView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"forIndexPath:indexPath];
            // footerV.titleLab.text =@"尾部视图";
            reusableView = footerV;
        }
        return reusableView;
        
    }
    else{
        
        
        
        UICollectionReusableView *reusableView =nil;
        if (kind ==UICollectionElementKindSectionHeader) {
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"forIndexPath:indexPath];
            headerV.arrowIMageview.hidden = YES;
            headerV.hidden = YES;
            reusableView = headerV;
            
        }
        
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView1 *footerV = (MyFooterView1 *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"forIndexPath:indexPath];
            reusableView = footerV;
            footerV.hidden = YES;
        }
        return reusableView;
    }
}

- (CGSize)checTheStringWithHight:(NSString *)theStr fonts:(float)font
{
    
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(self.view.frame.size.width-32-40-5-8, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont boldSystemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

#pragma mark 更多的事件点击
-(void)gesTap:(UITapGestureRecognizer *)ges{
    
    NSInteger tags = ges.view.tag/1108;
    MCLog(@"tag..-===第几个section.%zd.",tags);
    VideoTypesController *taps = [VideoTypesController new];
    taps.hidesBottomBarWhenPushed = YES;
    
    NSString *typestr = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:tags]];
    NSString *tepstr = typestr;
    if (tepstr.length>=6) {
        tepstr = [tepstr substringToIndex:6];
    }else if (tepstr.length>=4){
        tepstr = [tepstr substringToIndex:4];
    }
    
    if([tepstr containsString:@"---"]){
        NSRange range = [tepstr rangeOfString:@"---"];
        typestr = [typestr substringFromIndex:range.location+3];
    }else if ([tepstr containsString:@"--"]) {
        NSRange range = [tepstr rangeOfString:@"--"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if([tepstr containsString:@"-"]){
        NSRange range = [tepstr rangeOfString:@"-"];
        typestr = [typestr substringFromIndex:range.location+1];
    }
    
    
    taps.titleStr = typestr;// [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:tags]];
    taps.uuidType = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:tags]] ;
    [self.navigationController pushViewController:taps animated:YES];
    
    
}


//点击单元格
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    
    MCLog(@"------nsectio---%zd/.item....%zd",indexPath.section,indexPath.item);
    //gzz1115 要走read接口
    if (collectionView == _myCollectionV) {
        if (_dataMarryNumber.count>0) {
            
            [self readRequestVideo:indexPath.item section:indexPath.section];
        }
    }else{
        
        if (_dataMuarry.count>0) {
            
            [self readRequestVideoType:indexPath.item indexpathh:indexPath];
        }
        
    }
    
    
}

#pragma mark 点击 阅读量加一的接口 nomore
-(void)readRequestVideoType:(NSInteger)itemIndex indexpathh:(NSIndexPath *)indexpathh {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",Public_URL];
    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",dlp.uuidstring] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex]  objectForKey:@"uuid"]];
    
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];// jingxuan_video 777
            _isBlock = @"yesB";//333333
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
            VideoDetailNewVC *videoDetail = [VideoDetailNewVC new];

            __block NSMutableDictionary *dicM = [_dataMuarry objectAtIndex:itemIndex];
            videoDetail.videoPath = [dicM objectForKey:@"path"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"uuid"]];
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"public_name"]];
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"readnum"]];
            //00528
            videoDetail.contentStr = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"content"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"imgpath"]];
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"name"]];
//            gzz20191101
            videoDetail.polyv_uuidStr = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"polyv_uuid"]];
            
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            
            
            
            videoDetail.isCollection = Collection;
            
            videoDetail.typesVideo = @"type";
            __weak __typeof(self) weakSelf = self; //gzz1130
            
            [videoDetail returnIsCollect:^(NSString *isCollection) {

                readNumsUUIDA = isCollection; //6666
                [weakSelf.myCollectionNoMore reloadData];

            }];
            
//            videoDetail.returnBlockCol = ^(NSString *isCollection) {
//                readNumsUUIDA = isCollection; //6666
//                 [weakSelf.myCollectionNoMore reloadData];
//            };
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}



#pragma mark 点击 阅读量加一的接口 more
-(void)readRequestVideo:(NSInteger)itemIndex section:(NSInteger)sectionNum {
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",Public_URL];
    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",dlp.uuidstring] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
    
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            //gzz170216
            _isBlock = @"yesB";  //44444444
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
            
            VideoDetailNewVC *videoDetail = [VideoDetailNewVC new];

            videoDetail.videoPath =  [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"path"];
//           gzz20191101
            videoDetail.polyv_uuidStr = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"polyv_uuid"];
            
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"public_name"]];
            
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"readnum"]];
            
            //00528
            videoDetail.contentStr = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"content"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"imgpath"]];
            
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"name"]];
            
            videoDetail.isCollection = Collection;
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            
            videoDetail.typesVideo = @"videoHome";
            __weak __typeof(self) weakSelf = self;//gzz1130
            [videoDetail returnIsCollect:^(NSString *isCollection) {

                readNumsUUID = isCollection;  //666666
                [weakSelf.myCollectionV reloadData];//gzz1124

            }];
            
//            videoDetail.returnBlockCol = ^(NSString *isCollection) {
//                readNumsUUID = isCollection; //6666
//                [weakSelf.myCollectionNoMore reloadData];
//            };
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}



-(CGSize)collectionView:(UICollectionView*)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    if (collectionView == _myCollectionV) {
        CGSize sizes = [self checTheStringWithHight:[_dataMarrySection objectAtIndex:section] fonts:16.0];
        if (sizes.height > 30) {
            return CGSizeMake(self.view.frame.size.width, 57);
            
        }else{
            return CGSizeMake(self.view.frame.size.width, 40);
        }
    }else{
        
        return CGSizeMake(self.view.frame.size.width, 0.1);
    }
    
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section{
    if (collectionView == _myCollectionV) {
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }else{
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }
    
}

////距边界缩放大小
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0, 0 , 0, 0);//分别为上、左、下、右
    
}


#pragma mark navbar及返回
-(void)navBarVideohome{
    
    UIButton *button = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 20, 20)];
    [button setBackgroundImage:[UIImage imageNamed:@"searchBarSMoren"]  forState:0];
    [button setImageEdgeInsets:UIEdgeInsetsMake(0, 20, 0, 0)];
    [button addTarget:self action:@selector(storeBtn) forControlEvents:UIControlEventTouchUpInside];
    
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:button];
}


//- (UICollectionViewCell *)coll
#pragma mark 跳往搜索页面  大搜索页面
-(void)storeBtn{
    _isBlock = @"yesA";//gzz170216   5555555
    
    //gzz170620
    
    SearchAndSignsVC *vcSearch = [SearchAndSignsVC new];
    vcSearch.hidesBottomBarWhenPushed = YES;
    vcSearch.whihOneComeInStr = @"2";
    [self.navigationController pushViewController:vcSearch animated:YES];
    
    
}


-(NSDictionary *)clearErrorData11:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}

//下拉刷新
-(void)DownFreshVideotypes{
    
    __unsafe_unretained typeof(self) vc = self;
    // 添加下拉刷新头部控件
    [vc.myCollectionNoMore addHeaderWithCallback:^{
        [_dataMuarry removeAllObjects];
        numbers = 1;
        //        [vc dataRequestVIdeotype];
//        [self VideohotAndNewAndSignRequest];
        [vc getSystemTimeFromServer:@"two"];

        [vc.myCollectionNoMore headerEndRefreshing];
        
    }];
    
}

//上拉加载
-(void)upFreshVideotypes{
    __unsafe_unretained typeof(self) vc = self;
    [vc.myCollectionNoMore addFooterWithCallback:^{
        numbers ++;
        //        [vc dataRequestVIdeotype];
//        [self VideohotAndNewAndSignRequest];
        [vc getSystemTimeFromServer:@"two"];

        [vc.myCollectionNoMore footerEndRefreshing];
        
        
    }];
    
}



- (void)makeUiCollectionMOre{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    
//    gzz20190415
//    _myCollectionNoMore = [[UICollectionView alloc]initWithFrame:CGRectMake (10, 64+60,  SCREEN_WIDTH-20,SCREEN_HEIGHT-64-60) collectionViewLayout:flowL];
    _myCollectionNoMore = [[UICollectionView alloc]initWithFrame:CGRectMake (10, kTopHeight+60,  SCREEN_WIDTH-20,SCREEN_HEIGHT-kTopHeight-60) collectionViewLayout:flowL];

    _myCollectionNoMore.delegate =self;
    _myCollectionNoMore.dataSource =self;
    _myCollectionNoMore.hidden = YES;
    _myCollectionNoMore.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];
    _myCollectionNoMore.showsVerticalScrollIndicator = NO;
    _myCollectionNoMore.alwaysBounceVertical = YES;
    [self.view addSubview:_myCollectionNoMore];
    
#pragma mark -- 注册单元格
    [_myCollectionNoMore registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:indentifyVideoTypes];
#pragma mark -- 注册头部视图
    [_myCollectionNoMore registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"];
#pragma mark -- 注册尾部视图
    [_myCollectionNoMore registerClass:[MyFooterView1 class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"];
    
}


#pragma mark 自定义itemnoMore
-(UIView *)cellIndex:(NSInteger)index{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]initWithFrame:CGRectMake(1, 1, widthD-2, height-2)];
    viewdd.backgroundColor = [UIColor whiteColor];
    
    
    
    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[self clearErrorData11:[_dataMuarry  objectAtIndex:index]]];
    
    
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD-2, height-2)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-2-10, 10)];
    
    desLabel.textColor = RGB(102, 102, 102);//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    [viewdd addSubview:desLabel];
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];//[dicc objectForKey:@"name"];
    desLabel.text= summary;
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB(153,153,153);;//[UIColor lightGrayColor];
    expertLabel.font = [UIFont systemFontOfSize:14];
    expertLabel.text = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];;//@"张德来专家";
    [viewdd addSubview:expertLabel];
    expertLabel.backgroundColor = [UIColor clearColor];
    
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUIDA isEqualToString:[dicc objectForKey:@"uuid"]]) {
        //444444
        NSInteger num = [nums integerValue]+1;
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        [_dataMuarry replaceObjectAtIndex:index withObject:dicc];
        readNumsUUIDA = @"0";
    }
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerY = expertLabel.centerY;
    [viewdd addSubview:liangView];
    
    
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerY = image1.centerY;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;//gzz1129
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    return viewdd;
}



#pragma mark  视频标签接口
-(void)signsRequest{
    
    NSString *Srurl = [NSString stringWithFormat:@"%@tagList",Public_URLNew];
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    dicm[@"type"] = [NSString stringWithFormat:@"%d",5]; //4 科普 ；5 视频
    [PPNetworkHelper setRequestTimeoutInterval:15.0];
    
    [PPNetworkHelper POST:Srurl parameters:dicm success:^(id responseObject) {
        NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithDictionary:responseObject];
        
        if ([dic count]>0) {
            
            NSArray *arr = [dic objectForKey:@"data"];
            if ([arr isKindOfClass:[NSArray class]]) {
                if ([arr count]>0) {
                    [_tagsMarr addObjectsFromArray:arr];
                }
            }
            
        }else{
            
            [self showHint:dic[@"message"]];
        }
    } failure:^(NSError *error) {
        if (error.code == -1001) {
            [self showHint:@"请求超时"];
        }
    }];
    
}




#pragma mark 接口请求 第一批淘汰接口 gzz180628
-(void)VideohotAndNewAndSignRequest{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
 
    
    NSString *Strurl = [NSString stringWithFormat:@"%@videoByKeyWordsNew",Public_URLNew];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
    //上面四个是固定的
    
    
    dicM[@"page"] = [NSString stringWithFormat:@"%zd",numbers];
    dicM[@"keywords"] = _signsStr;
    if ([type_uuid isEqualToString:@"(null)"] || [type_uuid isEqualToString:@"null"]|| [type_uuid isEqualToString:@"<null>"] || type_uuid.length == 0) {
        type_uuid = @"";
    }
    dicM[@"typeUuid"] = [NSString stringWithFormat:@"%@",type_uuid];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"page",@"keywords",@"typeUuid"];
    
    
    MCLog(@"gzz20190417===%@",dicM);
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        NSDictionary *dataDic = [data objectForKey:@"data"];
        
        if ([dataDic count]>0) {
            
            NSMutableArray *arr = [dataDic objectForKey:@"list"];
            if ([arr isKindOfClass:[NSArray class]]) {
                if ([arr count]>0) {
                    [_dataMuarry  addObjectsFromArray:arr];
                    [_myCollectionNoMore reloadData];
                }
            }
            
        }else{
            
            [self showHint:data[@"message"]];
        }
        
        if (_dataMuarry.count>0 ) {
            [self removeShowMessage];
        }else{
            [self removeShowMessage];
            [self createShowMessage:@"暂无视频点播"];
        }
        
        [_myCollectionNoMore reloadData];
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        if (_dataMuarry.count>0 ) {
            [self removeShowMessage];
        }else{
            [self removeShowMessage];
            
            [self createShowMessage:@"暂无视频点播"];
        }
        [_myCollectionNoMore reloadData];
        
        if (error.code == -1001) {
            [self showHint:@"请求超时"];
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}









- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
}


@end




// 专家中的患者版
//  VideoHomeController.m
//  Patient
//
//  Created by gzz on 16/11/8.
//  Copyright © 2016年 ShangYu. All rights reserved.
//

#import "PatientVideoHomeController.h"
#import "MyHeaderView.h"
#import "MyFooterView.h"
#import "MyFooterView1.h"
#import "VideoTypesController.h"
#import "VideosDetailNewVC.h"
#import "searchVideoVC.h"
#import "RightIamgeviewSizeBtn.h"
#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"
#import "bigSearchVC.h"

@interface PatientVideoHomeController ()<UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout,TTGTextTagCollectionViewDelegate,UITableViewDelegate,UITableViewDataSource>{
    
    UIImageView *imagershuju;
    UILabel *tiwuxianLab;
    NSString *readNumsUUID;//gzz1124
    
    BOOL isSelectContent;//是不是筛选
    BOOL isAllvideoBtn;//是不是点击了全部视频
    NSUInteger numbers;//more
    BOOL isSelectSureBtn;//是不是点击了确定按钮
    
    NSString *uuidTypeStr;//
    NSString * keyWordsStr;
    
    NSString *readNumsUUIDA;//noMore
    NSString *whichCollectionShow;// more  noMore
    
    UIImageView * followImage;//送心意图标
    NSString *sysTimestr;
}


@property(strong,nonatomic)UICollectionView *myCollectionV;
@property(nonatomic,strong)NSMutableArray *dataMarrySection;
@property(nonatomic,strong)NSMutableArray *dataMarryNumber;
@property(nonatomic,strong)NSMutableArray *dataMarryTayeuuid;

@property (nonatomic,copy) NSString *isBlock;//gzz170216 111111


@property(nonatomic,strong)UICollectionView *myCollectionNoMore;
/*筛选*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *selectContentBtn;
/*最左边的图片*/
@property (nonatomic, strong)UIImageView *leftImageview ;
/*全部视频*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *allVideoChange;
/*isHiddenTablevie 点击全部tableview是否出现*/
@property (nonatomic, assign) BOOL isHiddenTablevie;
/*isHiddenSelectSigns 点击筛选collection是否出现*/
@property (nonatomic, assign) BOOL isHiddenSelectSigns;
/*tablevie bgTablview*/
@property (nonatomic, strong) UIView *bgTablview;
/*selectSign bgSelecSigns*/
@property (nonatomic, strong) UIView *bgSelecSigns;
/*tablview*/
@property (nonatomic, strong)UITableView  *tabview ;

/*标签*/
@property (strong, nonatomic)  TTGTextTagCollectionView *textTagCollectionView2;
@property (strong, nonatomic) NSMutableArray *tags2;
/*盛放选中数据 点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2;

/*盛放选中数据 没有点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2NoSureBtn;

@property(strong,nonatomic) NSMutableArray *dataMuarry;//noMore

@property(strong,nonatomic) NSMutableArray *allVideoTypeArr;//noMore

@end
static NSString *patientindentifyVideo = @"PatientindentifyVideo";

static NSString *patientindentifyVideoTypes = @"PatientindentifyVideoTypes";
@implementation PatientVideoHomeController
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    
    [self.view bringSubviewToFront:followImage];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor =[UIColor whiteColor];
    self.title = @"肝胆视频患者版";
    
    self.navigationController.navigationBar.barTintColor = GreyColor;
    navigaTionBar
    IOS_Frame
    [self requestTagList];
    [self navBarVideo];
    [self dataOpens];
    [self makeUIVideo];
    
    [self makeUiCollectionMOre];//nomore
    [self DownFreshVideotypes];//nomore
    [self upFreshVideotypes];//nomore
    
    [self  zanwushujuVideoHome];
    [self getSystemTimeFromServer];
}

//获得筛选标签
-(void)requestTagList{
    
    NSString * urStr = [NSString stringWithFormat:@"%@",tagList];
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    NSArray *KeyArr = @[@"type"];
    NSArray *ValueArr = @[@"5"];
    NSDictionary *dic = [[NSDictionary alloc]initWithObjects:ValueArr forKeys:KeyArr];
    
    
    [manager POST: urStr parameters:dic progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              NSLog(@"成功%@" ,responseObject);
              
              NSString *code = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"code"]];
              NSString *message = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"message"]];
              
              
              if ([code isEqualToString:@"1"]) {
                  
                  //                  _tags2 = [NSMutableArray array];
                  
                  NSArray * arr = [responseObject objectForKey:@"data"];
                  
                  for (NSDictionary *item in arr) {
                      
                      NSString * nameStr = [NSString stringWithFormat:@"%@",[item objectForKey:@"NAME"]];
                      [_tags2 addObject:nameStr];
                      
                  }
                  
              }else{
                  [self showHint:message];
              }
              
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              
              NSLog(@"%@",error);
          }];
    
    
}

-(void)zanwushujuVideoHome{
    
    imagershuju=[[UIImageView alloc]init];
    if (SCREEN_HEIGHT>480) {
        imagershuju.frame = CGRectMake(SCREEN_WIDTH/2-ImagerWuWidth/2, SCREEN_HEIGHT/2-ImagerWuheight/2, ImagerWuWidth, ImagerWuheight);
        imagershuju.image = [UIImage imageNamed:@"zanwushuju1"];
    }else{
        
        imagershuju.frame = CGRectMake(SCREEN_WIDTH/2-ImagerWuWidth/2, SCREEN_HEIGHT/2-ImagerWuheight/2+30, ImagerWuWidth, ImagerWuheight);
        imagershuju.image = [UIImage imageNamed:@"zanwushuju1"];
    }
    
    imagershuju.hidden = YES;
    [self.view addSubview:imagershuju];
    
    
    tiwuxianLab = [[UILabel alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2-TishiLabwidth/2, CGRectGetMaxY(imagershuju.frame), TishiLabwidth, 30)];
    tiwuxianLab.text = @"暂无视频点播";
    tiwuxianLab.textAlignment = YES;
    tiwuxianLab.textColor = RGB11(188, 188, 188);
    tiwuxianLab.hidden = YES;
    tiwuxianLab.font = SYSTEMFONT(TishiLabFont);
    [self.view addSubview:tiwuxianLab];
}

#pragma mark 数据的初始化
-(void)dataOpens{
    
    readNumsUUIDA = @"0";
    keyWordsStr = @"";
    whichCollectionShow = @"more";
    _tags2 = [NSMutableArray array];
    _allVideoTypeArr = [NSMutableArray array];
    _dataMarrySection = [NSMutableArray array]; //section 数据
    _dataMarryNumber = [NSMutableArray array];//number 数据
    _dataMarryTayeuuid = [NSMutableArray array];
    readNumsUUID = @"0";
    
    
    isSelectContent = NO;
    isAllvideoBtn = NO;
    _isHiddenTablevie = YES;
    _isHiddenSelectSigns = YES;
    isSelectSureBtn = NO;
    _dataSeletMarr2 = [NSMutableArray array];
    _dataMuarry = [NSMutableArray array];//more
    _dataSeletMarr2NoSureBtn = [NSMutableArray array];
}
#pragma mark--新接口第一批new6--
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf dataRequestInterface];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf dataRequestInterface];
    }];
    
}
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServerone{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf testRequest];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf testRequest];
    }];
    
}
#pragma mark dataRequestInterface 数据请求的接口
-(void)dataRequestInterface{
    //gzz171229
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *Srurl = [NSString stringWithFormat:@"%@patientVideoNew",IMAURLAPP];//待
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Srurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arrM = [data objectForKey:@"data"];
            if (arrM.count>0) {
                
                [_allVideoTypeArr addObject:@"全部视频"];
                
                NSMutableArray *tempM = [NSMutableArray array];//gzz1125
                for (int i=0;i<arrM.count;i++) {
                    NSString *sectionStr = [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"name"]];
                    
                    if (![sectionStr isEqualToString:@"z-BMS患者端"]) {
                        
                        [_dataMarrySection addObject:sectionStr];
                        [_allVideoTypeArr addObject:sectionStr];
                        [_dataMarryTayeuuid addObject: [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"uuid"]]];
                        
                        NSMutableArray *videoArr = [NSMutableArray arrayWithArray:[[arrM objectAtIndex:i] objectForKey:@"video"]];
                        [tempM addObject:videoArr];
                    }
                    
                    
                    
                }
                if (tempM.count>0) {
                    
                    [_dataMarryNumber addObjectsFromArray:tempM];
                }
                
                [_myCollectionV reloadData];
            }
            
        }else{
            [self showHint:[data  objectForKey:@"message"]];
        }
        
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        
        
    }];
    
    
}


#pragma mark 界面
-(void)makeUIVideo{
    
    [self selectView];
    [self collecetionVideo];
    
}

#pragma mark 筛选的界面
- (void)selectView{
    
    
    //    UIView *firstLine = [UIView createViewWithFrame:CGRectMake(0, 64, SCREEN_HEIGHT, 10) bgColor:bgLineColor];
    //    [self.view addSubview:firstLine];
    
    UIView *bgSeleview1 = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 10) bgColor:ersanjiuColor];
    //    bgSeleview1.backgroundColor = [UIColor blueColor];
    [self.view addSubview:bgSeleview1];
    
    UIView *bgSeleview = [UIView createViewWithFrame:CGRectMake(0, 10, SCREEN_WIDTH, 40) bgColor:[UIColor whiteColor]];
    //    bgSeleview.backgroundColor = [UIColor redColor];
    [self.view addSubview:bgSeleview];
    
    UIView *bgSeleview2 = [UIView createViewWithFrame:CGRectMake(0, 50, SCREEN_WIDTH, 10) bgColor:ersanjiuColor];
    [self.view addSubview:bgSeleview2];
    
    _selectContentBtn = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2+1, 0, 100, 40)];
    [bgSeleview addSubview:_selectContentBtn];
    [_selectContentBtn setTitle:@"筛选" forState:0];
    [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
    _selectContentBtn.titleLabel.font = SYSTEMFONT(16.0);
    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
    _selectContentBtn.backgroundColor = [UIColor clearColor];
    [_selectContentBtn sizeToFit];
    _selectContentBtn.frame = CGRectMake(SCREEN_WIDTH-_selectContentBtn.width-15, _selectContentBtn.y, _selectContentBtn.width+5,40);
    [_selectContentBtn addTarget:self action:@selector(selecContentClick) forControlEvents:UIControlEventTouchUpInside];
    
    
    UIView *verticalLine = [UIView createViewWithFrame:CGRectMake(SCREEN_WIDTH-11.5-_selectContentBtn.width-10, 11.5, 1, 17) bgColor:[UIColor grayColor]];
    [bgSeleview addSubview:verticalLine];
    
    
    _leftImageview = [UIImageView creatImageviewWithFrame:CGRectMake(15, 11.5, 17, 17) imaged:[UIImage imageNamed:@"allVideoSMoren"]];
    [bgSeleview addSubview:_leftImageview];
    
    
    _allVideoChange = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(CGRectGetMaxX(_leftImageview.frame)+5, 0, 100, 40)];
    [bgSeleview addSubview:_allVideoChange];
    
    [_allVideoChange setTitle:@"全部视频" forState:0];
    [_allVideoChange setTitleColor:[UIColor lightGrayColor] forState:0];
    _allVideoChange.titleLabel.font = SYSTEMFONT(16.0);
    _allVideoChange.titleLabel.lineBreakMode = NSLineBreakByTruncatingTail;
    _allVideoChange.titleLabel.textAlignment = NSTextAlignmentLeft;
    [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSMoren"] originalImage] forState:0];
    _allVideoChange.backgroundColor = [UIColor clearColor];
    [_allVideoChange sizeToFit];
    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width;
    if (_allVideoChange.width>maxViedoWidth) {
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);
    }else{
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);
        
    }
    [_allVideoChange addTarget:self action:@selector(allVideContentClick) forControlEvents:UIControlEventTouchUpInside];
    
    
}


#pragma mark 点击全部视频  按钮
- (void)allVideContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    if (_dataSeletMarr2.count>0 && isSelectSureBtn ) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
    }else{
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
    }
    
    _isHiddenSelectSigns = YES;
    isSelectContent = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
    isAllvideoBtn = !isAllvideoBtn;
    if (isAllvideoBtn) {
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        
        _bgTablview = [UIView createViewWithFrame:CGRectMake(0, 20+40, SCREEN_WIDTH, SCREEN_HEIGHT-60) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgTablview];
        
        _tabview = [[UITableView alloc]initWithFrame:CGRectMake(0,0, SCREEN_WIDTH,SCREEN_HEIGHT-60-SafeAreaBottomHeight) style:UITableViewStylePlain];
        _tabview.backgroundColor = [UIColor clearColor];
        _tabview.delegate = self;
        _tabview.dataSource = self;
        _tabview.estimatedRowHeight = 45;//gzz170704
        _tabview.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tabview.tableFooterView = [[UIView alloc]init];
        [_bgTablview addSubview:_tabview];
        
        
    }else{
        
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        [UIView animateWithDuration:0.25 animations:^{
            _bgTablview.hidden = YES;
        } completion:^(BOOL finished) {
            [_tabview removeFromSuperview];
            [_bgTablview removeFromSuperview];
        }];
        
    }
    
    
}


#pragma mark tableview start

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _allVideoTypeArr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    NSString *cellID = @"cellIDSelectVideo";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleBlue;
    cell.backgroundColor = [UIColor whiteColor];
    
  
    
//    cell.textLabel.text  = [_allVideoTypeArr objectAtIndex:indexPath.row];
    NSString *typestr = [NSString stringWithFormat:@"%@", [_allVideoTypeArr objectAtIndex:indexPath.row]];
    NSString *tepstr = typestr;
    if (tepstr.length>=6) {
        tepstr = [tepstr substringToIndex:6];
    }else if (tepstr.length>=4){
        tepstr = [tepstr substringToIndex:4];
    }
    
    if([tepstr containsString:@"---"]){
        NSRange range = [tepstr rangeOfString:@"---"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if ([tepstr containsString:@"--"]) {
        NSRange range = [tepstr rangeOfString:@"--"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if([tepstr containsString:@"-"]){
        NSRange range = [tepstr rangeOfString:@"-"];
        typestr = [typestr substringFromIndex:range.location+1];
    }
    
    cell.textLabel.text  =  [NSString stringWithFormat:@"%@",typestr];
    
    NSString * str8 =  _allVideoChange.titleLabel.text;
    
//    NSString * str8 =  _allVideoChange.titleLabel.text;
    
    if ([cell.textLabel.text isEqualToString:str8]) {
        
        cell.textLabel.textColor = JISECOLOR;
        
    }else{
        
        cell.textLabel.textColor = [UIColor lightGrayColor];
    }
    
    
    cell.textLabel.font = SYSTEMFONT(15.0);
    
    //    if( !indexPath.row )  {
    //        cell.textLabel.textColor = [UIColor redColor];
    //        cell.textLabel.highlightedTextColor = [UIColor  redColor];
    //    }
    
    
    cell.textLabel.numberOfLines = 2;
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
    
    UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    cell.textLabel.textColor = JISECOLOR;
    
    _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
    [_allVideoChange setTitle:cell.textLabel.text forState:0];
    [_allVideoChange setTitleColor:JISECOLOR forState:0];
    [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
    [_allVideoChange sizeToFit];
    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width;
    if (_allVideoChange.width>maxViedoWidth) {
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);
    }else{
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);
    }
    //    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    
#pragma mark 数据请求More
    if (indexPath.row == 0) {
        //        uuidTypeStr = @"";
        //        _myCollectionNoMore.hidden = YES;
        //        _myCollectionV.hidden = NO;
        //        [请求数据];
        
        if (keyWordsStr.length > 0) {
            whichCollectionShow = @"noMore";
            _myCollectionV.hidden = YES;
            _myCollectionNoMore.hidden = NO;
            [_dataMuarry removeAllObjects];
            numbers = 1;
            uuidTypeStr = @"";//点击全部视频时uuid传空
            //            [self dataRequestVIdeotype];
            [self getSystemTimeFromServerone];
            
        }else{
            
            _myCollectionNoMore.hidden = YES;
            _myCollectionV.hidden = NO;
            whichCollectionShow = @"more";
            uuidTypeStr = @"";//点击全部视频时uuid传空
            [_myCollectionV reloadData];//gzz170629
            
        }
        
    }else{
        
        numbers = 1;
        uuidTypeStr = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:indexPath.row-1]] ;
        [_dataMuarry removeAllObjects];
        //        [self dataRequestVIdeotype];
        [self getSystemTimeFromServerone];
        
    }
}

#pragma mark tableview end


#pragma mark selectContentClick筛选 按钮
- (void)selecContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    isSelectContent = !isSelectContent;
    if (isSelectContent) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        
        [self tagsUIVideo];
        
        
    }else{
        
        if (_dataSeletMarr2.count>0 && isSelectSureBtn) {
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        }else{
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
        }
        
        [self.view endEditing:YES];
        _isHiddenSelectSigns = YES;
        [UIView animateWithDuration:0.25 animations:^{
            _bgSelecSigns.hidden = YES;
            _bgSelecSigns.alpha = 0;
        } completion:^(BOOL finished) {
            [_textTagCollectionView2 removeFromSuperview];
            [_bgSelecSigns removeFromSuperview];
        }];
        
    }
}

#pragma mark 筛选的界面
- (void)tagsUIVideo{
    
    if (_isHiddenSelectSigns) {
        _isHiddenSelectSigns = NO;
        _bgSelecSigns = [UIView createViewWithFrame:CGRectMake(0, 60, SCREEN_WIDTH, SCREEN_HEIGHT-60) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgSelecSigns];
        
        
        _textTagCollectionView2 = [[TTGTextTagCollectionView alloc]init];
        [_bgSelecSigns addSubview:_textTagCollectionView2];
        _textTagCollectionView2.selectionLimit = 3;
        _textTagCollectionView2.frame = CGRectMake(10, 20, self.view.frame.size.width-20, SCREEN_HEIGHT-60-45-20);
        _textTagCollectionView2.backgroundColor = [UIColor clearColor];
        
        //        _tags2 = @[
        //                   @"乙型肝炎", @"肝炎", @"乙型肝炎", @"炎", @"乙型肝炎", @"乙型肝炎",
        //                   @"乙型肝炎", @"乙型炎",@"肝炎", @"乙型炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎",
        //                   @"乙型肝炎", @"乙型炎的地方",@"乙型肝炎", @"肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙炎",
        //                   @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"肝炎", @"乙型肝炎", @"炎", @"乙型肝炎", @"乙型肝炎",
        //                   @"乙型肝炎", @"乙型炎", @"乙型炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎",
        //                   @"乙型肝炎", @"乙型炎的地方",@"乙型肝炎", @"肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙炎",
        //                   @"乙型肝炎", @"乙型肝炎",@"乙型肝炎", @"乙型炎",@"肝炎", @"乙型炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎",
        //                   @"乙型肝炎", @"乙型炎的地方",@"乙型肝炎", @"肝炎", @"乙型肝炎", @"乙型肝炎", @"乙型肝炎", @"乙炎",
        //                   @"乙型肝炎", @"乙型肝炎"
        //                   ];
        _textTagCollectionView2.delegate = self;
        _textTagCollectionView2.showsVerticalScrollIndicator = NO;
        TTGTextTagConfig *config = _textTagCollectionView2.defaultConfig;
        config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
        //文本的颜色
        config.tagTextColor = [UIColor lightGrayColor];
        //选中的样色
        config.tagSelectedTextColor = JISECOLOR;
        
        config.tagBackgroundColor = [UIColor clearColor];
        config.tagSelectedBackgroundColor = [UIColor clearColor];
        
        //水平竖直间距
        if (SCREEN_WIDTH == 320) {
            _textTagCollectionView2.horizontalSpacing = 12.0;
            _textTagCollectionView2.verticalSpacing = 12.0;
        }else if (SCREEN_WIDTH == 375 ){
            
            _textTagCollectionView2.horizontalSpacing = 23.0;
            _textTagCollectionView2.verticalSpacing = 15.0;
        }else if (SCREEN_WIDTH == 414 ){
            
            _textTagCollectionView2.horizontalSpacing = 30.0;
            _textTagCollectionView2.verticalSpacing = 20.0;
        }else{
            //iPhone
            
        }
        
        //外围包裹
        config.tagBorderColor = [UIColor lightGrayColor];
        config.tagSelectedBorderColor = JISECOLOR;
        config.tagBorderWidth = 1;
        config.tagSelectedBorderWidth = 1;
        
        //阴影
        config.tagShadowColor = [UIColor whiteColor];
        config.tagShadowOffset = CGSizeMake(0, 0);
        config.tagShadowOpacity = 0.0f;
        config.tagShadowRadius = 0.0f;
        
        //裁剪
        config.tagCornerRadius = 10.0;
        config.tagSelectedCornerRadius = 10.0;
        
        //扩展宽高
        config.tagExtraSpace = CGSizeMake(10, 10);
        [_textTagCollectionView2 addTags:_tags2];
        _textTagCollectionView2.alignment = 0;
        
        if (isSelectSureBtn) {
            for (int i = 0; i<_dataSeletMarr2.count; i++) {
                NSUInteger index = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:index selected:YES];
            }
            [_dataSeletMarr2NoSureBtn addObjectsFromArray:_dataSeletMarr2];
            
            
            
        }else{
            
            isSelectSureBtn = NO;
            
            [_dataSeletMarr2 removeAllObjects];
        }
        [_textTagCollectionView2 reload];
        
        
        UIButton *resetBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(10, _bgSelecSigns.height-45, (SCREEN_WIDTH-30)/2, 35) title:@"重置" bgImageName:@"d" titleColor:JISECOLOR bgColor:[UIColor whiteColor] titleLabelFont:20 action:^(UIButton *button) {
            
            for (int i = 0; i<_dataSeletMarr2NoSureBtn.count; i++) {
                NSInteger indexs = [_dataSeletMarr2NoSureBtn[i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:indexs selected:NO];
            }
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            [_dataSeletMarr2 removeAllObjects];
            
            keyWordsStr = @"";
            
        }];
        
        if (DEVICE_IS_IPHONEX) {
            
            resetBtn.frame = CGRectMake(10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35);
        }
        
        resetBtn.layer.cornerRadius = 5;
        resetBtn.layer.masksToBounds = YES;
        resetBtn.layer.borderWidth = 1;
        resetBtn.layer.borderColor = JISECOLOR.CGColor;
        [_bgSelecSigns addSubview:resetBtn];
        
        UIButton *sureBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(CGRectGetMaxX(resetBtn.frame)+10, _bgSelecSigns.height-45, (SCREEN_WIDTH-30)/2, 35)  title:@"确定" bgImageName:@"d" titleColor:[UIColor whiteColor] bgColor:JISECOLOR titleLabelFont:20 action:^(UIButton *button) {
            
            isSelectSureBtn = YES;
            
            [self sureBtnClick];
            
            [_dataSeletMarr2 removeAllObjects];
            
            [_dataSeletMarr2 addObjectsFromArray:_dataSeletMarr2NoSureBtn];
            
            //移除选中的数据
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            
            isSelectContent = !isSelectContent;
            if (isSelectContent) {
                [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
                [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                
                
            }else{
                if (_dataSeletMarr2.count>0) {
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                }else{
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
                }
                
            }
            
            numbers = 1;
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
            if (_dataSeletMarr2.count>0) {
                
                
                _dataMuarry = [[NSMutableArray alloc]init];
                
                NSMutableArray *arrTags = [NSMutableArray array];
                if (_dataSeletMarr2.count >0) {
                    for (int i=0; i<_dataSeletMarr2.count; i++) {
                        NSInteger indesx = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                        [arrTags addObject:[_tags2 objectAtIndex:indesx]];
                    }
                }
                
                keyWordsStr = [arrTags componentsJoinedByString:@","];
                
                //                [self dataRequestVIdeotype];
                [self getSystemTimeFromServerone];
                
            }else{
                
                //                keyWordsStr = @"";
                
                //
                //                [self dataRequestVIdeotype];
                
                _dataMuarry = [[NSMutableArray alloc]init];
                
                NSMutableArray *arrTags = [NSMutableArray array];
                if (_dataSeletMarr2.count >0) {
                    for (int i=0; i<_dataSeletMarr2.count; i++) {
                        NSInteger indesx = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                        [arrTags addObject:[_tags2 objectAtIndex:indesx]];
                    }
                }
                
                keyWordsStr = [arrTags componentsJoinedByString:@","];
                
                if (keyWordsStr.length == 0 && uuidTypeStr.length == 0) {
                    //标签为空 uuid为空 直接是全部
                    _myCollectionV.hidden = NO;
                    _myCollectionNoMore.hidden = YES;
                    [_myCollectionV reloadData];
                    return ;
                }else if(keyWordsStr.length == 0 && uuidTypeStr.length > 0){
                    //标签为空 uuid不为空 请求接口
                    
                    whichCollectionShow = @"noMore";
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    [_dataMuarry removeAllObjects];
                    numbers = 1;
                    //                    [self dataRequestVIdeotype];
                    [self getSystemTimeFromServerone];
                }else{
                    whichCollectionShow = @"noMore";
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    [_dataMuarry removeAllObjects];
                    numbers = 1;
                    //                    [self dataRequestVIdeotype];
                    [self getSystemTimeFromServerone];
                }
            }
            
            
            
        }];
        if (DEVICE_IS_IPHONEX) {
            
            sureBtn.frame = CGRectMake(CGRectGetMaxX(resetBtn.frame)+10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35);
        }
        sureBtn.layer.cornerRadius = 5;
        sureBtn.layer.masksToBounds = YES;
        [_bgSelecSigns addSubview:sureBtn];
        
    }
}



#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
        [_dataSeletMarr2NoSureBtn addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<_dataSeletMarr2NoSureBtn.count; i++) {
            if ([[_dataSeletMarr2NoSureBtn objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [_dataSeletMarr2NoSureBtn removeObjectAtIndex:i];
            }
        }
    }
    NSLog(@"---盛放的数据-%@-",_dataSeletMarr2NoSureBtn);
}

#pragma mark 确定
-(void)sureBtnClick{//gzz0207
    
    [self.view endEditing:YES];
    _isHiddenSelectSigns = YES;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
}





-(void)collecetionVideo{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    
    //    _myCollectionV = [[UICollectionView alloc]initWithFrame:CGRectMake (0, 0,  self.view.frame.size.width, self.view.frame.size.height-64) collectionViewLayout:flowL];
    _myCollectionV = [[UICollectionView alloc]initWithFrame:CGRectMake (0, 60,  self.view.frame.size.width, self.view.frame.size.height-60-64-SafeAreaBottomHeight) collectionViewLayout:flowL];
    
    
    _myCollectionV.delegate =self;
    _myCollectionV.dataSource =self;
    //    _myCollectionV.backgroundColor = RGB11(235, 235, 235);// RGB(188, 188, 188);//[UIColor yellowColor];
    _myCollectionV.backgroundColor =  bgLineColor;//gzz1129
    _myCollectionV.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_myCollectionV];
    
#pragma mark -- 注册单元格
    [_myCollectionV registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:patientindentifyVideo];
    
#pragma mark -- 注册头部视图
    [_myCollectionV registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"];
#pragma mark -- 注册尾部视图
    [_myCollectionV registerClass:[MyFooterView class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"];
    
    
    //    NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
    //
    //    NSString * versonStr = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
    
    //    //添加手势，点击跳转至银行卡列表页面，选择银行卡
    //    UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(tapAction)];
    //
    //    followImage = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-48, kMainScreenHeight-100, 48, 48)];
    //    followImage.image = [UIImage imageNamed:@"xinyiImage@2x"];
    //    followImage.userInteractionEnabled = YES;
    //    [followImage addGestureRecognizer:tap];
    //
    //    if ([versonStr isEqualToString:@"1"]) {
    //
    //        [self.view addSubview:followImage];
    //    }
    
}

#pragma mark --UICollectionView dataSource
//有多少个Section
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    //    return _dataMarrySection.count;
    if (collectionView == _myCollectionV) {
        return _dataMarrySection.count;
        
    }else{
        
        return 2;
        
    }
}

//每个section有多少个元素
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    //    return [[_dataMarryNumber objectAtIndex:section] count];
    if (collectionView == _myCollectionV) {
        return [[_dataMarryNumber objectAtIndex:section] count];
    }else{
        
        if (section == 0) {
            return 0;
            
        }else{
            return _dataMuarry.count;//gzz1114
            
        }
        
    }
}
//每个单元格的数据
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (collectionView == _myCollectionV) {
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:patientindentifyVideo forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        //    cell.backgroundColor = [UIColor whiteColor];
        cell.backgroundColor = bgLineColor;//gzz1129
        [cell.contentView addSubview:[self   cellIndex:(int)indexPath.item  sectionn:indexPath.section] ];
        return cell;
    }else{
        
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:patientindentifyVideoTypes forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        cell.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];;//[UIColor purpleColor];
        if (_dataMuarry.count>0) {
            
            [cell.contentView addSubview:[self cellIndex:(int)indexPath.item]];
        }
        return cell;
        
    }
}


#pragma mark 自定义item have  More
-(UIView *)cellIndex:(NSInteger)index sectionn:(NSInteger)section{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]init];
    if (index%2==0) {
        viewdd.frame = CGRectMake(10, 0, widthD, height);
    }else{
        viewdd.frame = CGRectMake(0, 0, widthD, height);
    }
    viewdd.backgroundColor = [UIColor whiteColor];
    
    
    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[[_dataMarryNumber objectAtIndex:section] objectAtIndex:index]];
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD, height)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-10, 10)];
    desLabel.textColor = RGB11(102, 102, 102) ;//[UIColor blackColor];
    //    desLabel.textColor = RGB11(146, 60, 53) ;//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    [viewdd addSubview:desLabel];
    
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];
    desLabel.text= summary;
    
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB11(153,153,153);
    //      expertLabel.textColor = RGB11(146,60,53);
    expertLabel.font = [UIFont systemFontOfSize:14];
    NSString *public_name = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];
    
    expertLabel.text = public_name;
    [viewdd addSubview:expertLabel];
    //    expertLabel.backgroundColor = [UIColor blueColor];
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerYy = expertLabel.centerYy;
    [viewdd addSubview:liangView];
    
    
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUID isEqualToString:[dicc objectForKey:@"uuid"]]) {
        NSInteger num = [nums integerValue]+1;
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        
        [[_dataMarryNumber objectAtIndex:section] replaceObjectAtIndex:index withObject:dicc];
        
        readNumsUUID = @"0";
    }
    
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB11(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerYy = image1.centerYy;
    
    //    CGFloat liangX = widthD-image1.width-label2.width-15;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    //    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+10);gzz1129
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    
    
    return viewdd;
}

//每个cell的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    //    CGFloat widthD = (SCREEN_WIDTH-10)/2;
    //    CGFloat widthD1 = (SCREEN_WIDTH-30)/2;
    //
    //    CGFloat height = widthD1/1.61+36+30+16+16-16-5+10;
    //    return CGSizeMake(widthD, height);
    if (collectionView == _myCollectionV) {
        CGFloat widthD = (SCREEN_WIDTH-10)/2;
        CGFloat widthD1 = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD1/1.61+36+30+16-5+10;
        return CGSizeMake(widthD, height);
    }else{
        
        CGFloat widthD = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD/1.61+36+30+16-5+10;
        
        //    CGFloat height = widthD/1.61+36+30+16;gzz1129
        return CGSizeMake(widthD, height);
    }
    
    
}

//设置头尾部内容
-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        UICollectionReusableView *reusableView =nil;
        
        if (kind ==UICollectionElementKindSectionHeader) {
            //定制头部视图的内容
            _isBlock = @"yesA";//gzz170216   333333333
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"]; //444444 jingxuan_vide
            
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"forIndexPath:indexPath];
            //        headerV.backgroundColor = [UIColor whiteColor];
            headerV.moreLab.text = @"更多";
            
            //        headerV.titleLab.text = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:indexPath.section]];//这里的是section而不是item
            
            headerV.titleStr = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:indexPath.section]];
            
            //         headerV.titleLab.text = @"第二届京津冀感染肝病高峰论坛牛逼不";
            headerV.moreIMageview.tag = indexPath.section*1108;
            headerV.moreIMageview.backgroundColor = [UIColor clearColor];
            //        MCLog(@"tag..-===第几个section.%zd.",indexPath.section*1108);
            UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(gesTap:)];
            [headerV.moreIMageview addGestureRecognizer:ges];
            reusableView = headerV;
        }
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView *footerV = (MyFooterView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"forIndexPath:indexPath];
            // footerV.titleLab.text =@"尾部视图";
            reusableView = footerV;
        }
        return reusableView;
        
    }else{
        UICollectionReusableView *reusableView =nil;
        if (kind ==UICollectionElementKindSectionHeader) {
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"forIndexPath:indexPath];
            headerV.arrowIMageview.hidden = YES;
            headerV.hidden = YES;
            reusableView = headerV;
            
        }
        
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView1 *footerV = (MyFooterView1 *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"forIndexPath:indexPath];
            reusableView = footerV;
            footerV.hidden = YES;
        }
        return reusableView;
    }
    
}

- (CGSize)checTheStringWithHight:(NSString *)theStr fonts:(float)font
{
    
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(self.view.frame.size.width-32-40-5-8, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont boldSystemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

#pragma mark 更多的事件点击
-(void)gesTap:(UITapGestureRecognizer *)ges{
    
    NSInteger tags = ges.view.tag/1108;
    VideoTypesController *taps = [VideoTypesController new];
    taps.patient = @"yes";
    taps.hidesBottomBarWhenPushed = YES;
//    taps.titleStr = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:tags]];
    
    
    NSString *typestr =[NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:tags]];
    NSString *tepstr = typestr;
    if (tepstr.length>=6) {
        tepstr = [tepstr substringToIndex:6];
    }else if (tepstr.length>=4){
        tepstr = [tepstr substringToIndex:4];
    }
    
    if([tepstr containsString:@"---"]){
        NSRange range = [tepstr rangeOfString:@"---"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if ([tepstr containsString:@"--"]) {
        NSRange range = [tepstr rangeOfString:@"--"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if([tepstr containsString:@"-"]){
        NSRange range = [tepstr rangeOfString:@"-"];
        typestr = [typestr substringFromIndex:range.location+1];
    }
    
      taps.titleStr =  [NSString stringWithFormat:@"%@",typestr];
    
    taps.uuidType = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:tags]] ;
    [self.navigationController pushViewController:taps animated:YES];
}


//点击单元格
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        
        //gzz1115 要走read接口
        if (_dataMarryNumber.count>0) {
            
            [self readRequestVideo:indexPath.item section:indexPath.section];
        }
        
    }else{
        
        if (_dataMuarry.count>0) {
            
            [self readRequestVideoType:indexPath.item];
        }
        
    }
}





#pragma mark 点击 阅读量加一的接口
-(void)readRequestVideoType:(NSInteger)itemIndex {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex]  objectForKey:@"uuid"]];

    GDXZLog(@"%@",dicer);
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];// jingxuan_video 777
            _isBlock = @"yesB";//333333
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            //1112视频跳转
            VideosDetailNewVC *videoDetail = [VideosDetailNewVC new];
//            VideoDetailController *videoDetail = [VideoDetailController new];
            videoDetail.videoPath = [[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"path"];
            videoDetail.contentID = [[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"content"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"uuid"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"public_name"]];
            
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"readnum"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"imgpath"]];
            
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"name"]];
            
            videoDetail.isCollection = Collection;
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.typesVideo = @"type";
            
            __weak __typeof(self) weakSelf = self;
            videoDetail.reloadBlock = ^(NSString * str){
                readNumsUUIDA = str; //6666
                [weakSelf.myCollectionNoMore reloadData];
                
            };
            
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}


#pragma mark 点击 阅读量加一的接口
-(void)readRequestVideo:(NSInteger)itemIndex section:(NSInteger)sectionNum {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
    
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            _isBlock = @"yesB";  //44444444
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            //1112视频跳转
            VideosDetailNewVC *videoDetail = [VideosDetailNewVC new];
//            VideoDetailController *videoDetail = [VideoDetailController new];
            
            videoDetail.videoPath = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"path"];
            videoDetail.contentID = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"content"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"public_name"]];
            
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"readnum"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"imgpath"]];
            
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"name"]];
            
            videoDetail.isCollection = Collection;
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.typesVideo = @"videoHome";
            __weak __typeof(self) weakSelf = self;
            videoDetail.reloadBlock = ^(NSString * str){
                
                readNumsUUID = str;
                [weakSelf.myCollectionV reloadData];
                
                
            };
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}



-(CGSize)collectionView:(UICollectionView*)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    if (_myCollectionV == collectionView) {
        //    return CGSizeMake(self.view.frame.size.width, 40);
        CGSize sizes = [self checTheStringWithHight:[_dataMarrySection objectAtIndex:section] fonts:16.0];
        if (sizes.height > 30) {
            return CGSizeMake(self.view.frame.size.width, 57);
            
        }else{
            return CGSizeMake(self.view.frame.size.width, 40);
        }
    }else{
        
        return CGSizeMake(self.view.frame.size.width, 0.1);
    }
    
    
}
//5s的适配

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section{
    if (collectionView == _myCollectionV) {
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }else{
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }
    
    
}

////距边界缩放大小
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0, 0 , 0, 0);//分别为上、左、下、右
    
}








#pragma mark navbar及返回
-(void)navBarVideo{
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(buttonIterm)];
    
    self.navigationItem.leftBarButtonItem=backItem;
    
    //    UIBarButtonItem *backItem2 = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"sousuo"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(storeBtn)];
    //
    //    self.navigationItem.rightBarButtonItem=backItem2;
    
    UIButton *rightButton = [UIButton buttonWithType:UIButtonTypeCustom];
    rightButton.frame = CGRectMake(0, 0, 18, 18);
    [rightButton setBackgroundImage:[UIImage imageNamed:@"iconfont-sousuo@2x"] forState:UIControlStateNormal];
    [rightButton addTarget:self action:@selector(storeBtn) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *barItem2 = [[UIBarButtonItem alloc]initWithCustomView:rightButton];
    self.navigationItem.rightBarButtonItem = barItem2;
}
//右上角搜索按钮点击事件
-(void)storeBtn{
    
    //    _isBlock = @"yesA";//gzz170216   5555555
    //    searchVideoVC * videoVC = [[searchVideoVC alloc]init];
    //    [self.navigationController pushViewController:videoVC animated:YES];
    
    bigSearchVC * vc = [[bigSearchVC alloc]init];
    vc.fromWhat = @"daovideo";
    [self.navigationController pushViewController:vc animated:YES];
}
-(void)buttonIterm{
    [self.navigationController popViewControllerAnimated:YES];
}

-(NSDictionary *)clearErrorData11:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}
#pragma mark--新接口第一批new10--
#pragma mark 接口请求
-(void)testRequest{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@patientVideoByKeyWordsNew",IMAURLAPP];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    if ([uuidTypeStr isEqualToString:@"(null)"] || [uuidTypeStr isEqualToString:@"null"]|| [uuidTypeStr isEqualToString:@"<null>"] || uuidTypeStr.length == 0) {
        
        uuidTypeStr = @"";
    }
    dicM[@"typeUuid"] = [NSString stringWithFormat:@"%@",uuidTypeStr];
    dicM[@"page"] = [NSString stringWithFormat:@"%zd",numbers];
    dicM[@"keywords"] = keyWordsStr;
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"typeUuid",@"page",@"keywords"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            NSDictionary *dataDic = [data objectForKey:@"data"];
            if ([dataDic count]>0) {
                
                NSMutableArray *listM = [dataDic objectForKey:@"list"];
                if (listM.count>0) {
                    [_dataMuarry  addObjectsFromArray:listM];
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    [_myCollectionNoMore reloadData];
                    
                }
                
                
            }
            
        }else{
            [self showHint:[data  objectForKey:@"message"]];
        }
        
        _myCollectionV.hidden = YES;
        _myCollectionNoMore.hidden = NO;
        [_myCollectionNoMore reloadData];
        
        if (_dataMuarry.count>0 ) {
            
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        
        [_myCollectionNoMore reloadData];
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        if (_dataMuarry.count>0 ) {
            
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        [_myCollectionNoMore reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    }];
}

//下拉刷新
-(void)DownFreshVideotypes{
    
    __unsafe_unretained typeof(self) vc = self;
    // 添加下拉刷新头部控件
    [vc.myCollectionNoMore addHeaderWithCallback:^{
        [_dataMuarry removeAllObjects];
        numbers = 1;
        //        [vc dataRequestVIdeotype];
        [vc getSystemTimeFromServerone];
        [vc.myCollectionNoMore headerEndRefreshing];
        
    }];
    
}

//上拉加载
-(void)upFreshVideotypes{
    __unsafe_unretained typeof(self) vc = self;
    [vc.myCollectionNoMore addFooterWithCallback:^{
        numbers ++;
        //        [vc dataRequestVIdeotype];
        [vc getSystemTimeFromServerone];
        [vc.myCollectionNoMore footerEndRefreshing];
        
        
    }];
    
}


- (void)makeUiCollectionMOre{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    
    
    _myCollectionNoMore = [[UICollectionView alloc]initWithFrame:CGRectMake (10, 60,  SCREEN_WIDTH-20,SCREEN_HEIGHT-60) collectionViewLayout:flowL];
    _myCollectionNoMore.delegate =self;
    _myCollectionNoMore.dataSource =self;
    _myCollectionNoMore.hidden = YES;
    _myCollectionNoMore.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];
    _myCollectionNoMore.showsVerticalScrollIndicator = NO;
    _myCollectionNoMore.alwaysBounceVertical = YES;
    [self.view addSubview:_myCollectionNoMore];
    
#pragma mark -- 注册单元格
    [_myCollectionNoMore registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:patientindentifyVideoTypes];
#pragma mark -- 注册头部视图
    [_myCollectionNoMore registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"];
#pragma mark -- 注册尾部视图
    [_myCollectionNoMore registerClass:[MyFooterView1 class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"];
    
}

#pragma mark 自定义itemnoMore
-(UIView *)cellIndex:(NSInteger)index{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]initWithFrame:CGRectMake(1, 1, widthD-2, height-2)];
    viewdd.backgroundColor = [UIColor whiteColor];
    //      viewdd.backgroundColor = bgLineColor;
    
    
    
    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[self clearErrorData11:[_dataMuarry  objectAtIndex:index]]];
    
    
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD-2, height-2)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-2-10, 10)];
    
    desLabel.textColor = RGB11(102, 102, 102);//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    [viewdd addSubview:desLabel];
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];//[dicc objectForKey:@"name"];
    desLabel.text= summary;
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB11(153,153,153);;//[UIColor lightGrayColor];
    expertLabel.font = [UIFont systemFontOfSize:14];
    expertLabel.text = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];;//@"张德来专家";
    [viewdd addSubview:expertLabel];
    expertLabel.backgroundColor = [UIColor clearColor];
    
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUIDA isEqualToString:[dicc objectForKey:@"uuid"]]) {
        //444444
        NSInteger num = [nums integerValue]+1;
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        [_dataMuarry replaceObjectAtIndex:index withObject:dicc];
        readNumsUUIDA = @"0";
    }
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerYy = expertLabel.centerYy;
    [viewdd addSubview:liangView];
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB11(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerYy = image1.centerYy;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;//gzz1129
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    return viewdd;
}




- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
}


@end



gzz20200422 肝胆视频最新最热 专家版

#import "VideoHomeController.h"
#import "MyHeaderView.h"
#import "MyFooterView.h"
#import "MyFooterView1.h"
#import "VideoTypesController.h"
#import "VideosDetailNewVC.h"
#import "searchVideoVC.h"
#import "SendFlowersAndHeartVC.h"
#import "changVideoVC.h"
#import "RightIamgeviewSizeBtn.h"
#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"
#import "bigSearchVC.h"
#import "PatientVideoHomeController.h"
#import "replayVideoVC.h"
#import "allWebViewVC.h"
#import "videoNewDetailDownLoadBLVC.h"

#import "MyQr_codeVC.h"
#import "SDCycleScrollView.h"
#import "KYModel.h"


@interface VideoHomeController ()<UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout,TTGTextTagCollectionViewDelegate,UITableViewDelegate,UITableViewDataSource,SDCycleScrollViewDelegate>{
    
    SDCycleScrollView * cycleScrollView2;

    UIImageView *imagershuju;
    UILabel *tiwuxianLab;
    NSString *readNumsUUID;//gzz1124
    
    BOOL isSelectContent;//是不是筛选
    BOOL isAllvideoBtn;//是不是点击了全部视频
    NSUInteger numbers;//more
    BOOL isSelectSureBtn;//是不是点击了确定按钮
    
    NSString *uuidTypeStr;//
    NSString * keyWordsStr;
    
    NSString *readNumsUUIDA;//noMore
    NSString *whichCollectionShow;// more  noMore
    
    UIImageView * followImage;//送心意图标
    UIImageView *followImageOne;
    NSString *sysTimestr;
    
    NSMutableArray * TitleNewsArray;
    CGFloat hightScrollpics;//有轮播图时 高度 screenwidth/2.0 u无时 为0.0；
    
    UIImageView *bookImageview ;
    
    NSString *showHeroImg;//是否显示英雄榜图标，0不显示
       NSString *heroPath;
       NSString *fromStr;//2弹框活动还是1网页活动
       NSString *activeNameStr;
       UIView *allCoverView;
    UILabel *lablethree;
    UILabel *lablefour;
    NSString *bookNum;
    NSString *patientnum;
    
    NSString *newOrhotstr;//默认最新 2最新 ； 1最热
    
    
}

/*uiview 顶部包裹一切的view  有无轮播图*/
@property (nonatomic, strong) UIView *topCoverView;


@property(strong,nonatomic)UICollectionView *myCollectionV;
@property(nonatomic,strong)NSMutableArray *dataMarrySection;
@property(nonatomic,strong)NSMutableArray *dataMarryNumber;
@property(nonatomic,strong)NSMutableArray *dataMarryTayeuuid;

@property (nonatomic,copy) NSString *isBlock;//gzz170216 111111


@property(nonatomic,strong)UICollectionView *myCollectionNoMore;
/*筛选*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *selectContentBtn;
/*最左边的图片*/
@property (nonatomic, strong)UIImageView *leftImageview ;
/*全部视频*/
@property (nonatomic, strong) RightIamgeviewSizeBtn *allVideoChange;
/*isHiddenTablevie 点击全部tableview是否出现*/
@property (nonatomic, assign) BOOL isHiddenTablevie;
/*isHiddenSelectSigns 点击筛选collection是否出现*/
@property (nonatomic, assign) BOOL isHiddenSelectSigns;
/*tablevie bgTablview*/
@property (nonatomic, strong) UIView *bgTablview;
/*selectSign bgSelecSigns*/
@property (nonatomic, strong) UIView *bgSelecSigns;
/*tablview*/
@property (nonatomic, strong)UITableView  *tabview ;

/*标签*/
@property (strong, nonatomic)  TTGTextTagCollectionView *textTagCollectionView2;
@property (strong, nonatomic) NSMutableArray *tags2;
/*盛放选中数据 点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2;

/*盛放选中数据 没有点击确定之后的*/
@property (nonatomic, strong) NSMutableArray *dataSeletMarr2NoSureBtn;

@property(strong,nonatomic) NSMutableArray *dataMuarry;//noMore

@property(strong,nonatomic) NSMutableArray *allVideoTypeArr;//noMore





@property(nonatomic,strong)NSMutableArray *mutArrimage;
@property(nonatomic,strong)NSMutableArray *titleArr;
@property(nonatomic,strong)NSMutableArray *pathArr;
@property(nonatomic,strong)NSArray *defaultArr;
@property(nonatomic,strong)NSArray *defaultTitleArr;
@property(nonatomic,strong)NSMutableArray *uuidScrollArr;


/*uiview 最新最热*/
@property (nonatomic, strong) UIView *hotOrnewView;
/*uibutton 最新*/
@property (nonatomic, strong) UIButton *nweButton;
/*uibutton 最热*/
@property (nonatomic, strong) UIButton *hotButton;
/*type 最新最热type值*/
@property (nonatomic, copy) NSString  *hotNewtype;





@end
static NSString *indentifyVideo = @"indentifyVideo";

static NSString *indentifyVideoTypes = @"indentifyVideoTypes";
@implementation VideoHomeController

//懒加载
- (UIView *)hotOrnewView{
    if (!_hotOrnewView) {
        _hotOrnewView = [UIView new];
    }
    return _hotOrnewView;
    
}

//懒加载
- (UIView *)topCoverView{
    if (!_topCoverView) {
        _topCoverView = [UIView new];
//        [self.view addSubview:_topCoverView];
    }
    return _topCoverView;
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    
    [self.view bringSubviewToFront:followImage];
     [self.view bringSubviewToFront:followImageOne];
    
    if ([whichCollectionShow isEqualToString:@"more"]) {
        
        NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
        NSString *videoY = [NSString stringWithFormat:@"%@",[dess objectForKey:@"jingxuan_video"]]; //22222
        
        NSUserDefaults *jinIN = [NSUserDefaults standardUserDefaults];
        NSString *videoYY = [NSString stringWithFormat:@"%@",[jinIN objectForKey:@"isJingxuanInDetail"]];//isJingxuanInDetail  2222
        
        if ([videoY isEqualToString:@"isVideo"] && ![_isBlock isEqualToString:@"yesB"]) {
            // jingxuan_videoUUID    isBlock  22222222
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; // jingxuan_videoUUID 222
            readNumsUUID = videosY;//gzz170216    22222222
            [_myCollectionV reloadData];
            
            //gzz170216  33333 jingxuan_video
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];
        } else if([videoYY isEqualToString:@"isJingxuanInDe"]){
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; //jingxuan_videoUUID 333
            readNumsUUID = videosY;//gzz170216  33333
            [_myCollectionV reloadData];
            
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noJingxuanInDe" forKey:@"isJingxuanInDetail"]; //isJingxuanInDetail 3333
        }else{
             [_myCollectionV reloadData];
        }
        
        
    }else{
        
        NSUserDefaults *dess = [NSUserDefaults standardUserDefaults];
        NSString *videoY = [NSString stringWithFormat:@"%@",[dess objectForKey:@"jingxuan_video"]]; // jingxuan_video 5555
        if ([videoY isEqualToString:@"isVideo"] && ![_isBlock isEqualToString:@"yesB"]) {
            //        jingxuan_videoUUID                            block2222
            NSUserDefaults *desss = [NSUserDefaults standardUserDefaults];
            NSString *videosY = [NSString stringWithFormat:@"%@",[desss objectForKey:@"jingxuan_videoUUID"]]; //4444 jingxuan_videoUUID
            readNumsUUIDA = videosY;//gzz170216  222
            [_myCollectionNoMore reloadData];
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"]; //jingxuan_video 6666
        }else{
            
            [_myCollectionNoMore reloadData];

        }
        
    }
     
     [self getSystemTimeFromServer:@"book"];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = bgLineColor;//[UIColor whiteColor];
    self.title = @"肝胆视频";
    
    self.navigationController.navigationBar.barTintColor = GreyColor;
    navigaTionBar
    IOS_Frame
    [self dataOpens];
    [self requestTagList];
    [self navBarVideo];

  [self getSystemTimeFromServer:@"listScrollview"];

    
}

//获得筛选标签
-(void)requestTagList{
    
    NSString * urStr = [NSString stringWithFormat:@"%@",tagList];
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    NSArray *KeyArr = @[@"type"];
    NSArray *ValueArr = @[@"2"];
    NSDictionary *dic = [[NSDictionary alloc]initWithObjects:ValueArr forKeys:KeyArr];
    
    
    [manager POST: urStr parameters:dic progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              NSLog(@"成功%@" ,responseObject);
              
              NSString *code = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"code"]];
              NSString *message = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"message"]];
              
              
              if ([code isEqualToString:@"1"]) {
                  
                  //                  _tags2 = [NSMutableArray array];
                  
                  NSArray * arr = [responseObject objectForKey:@"data"];
                  
                  for (NSDictionary *item in arr) {
                      
                      NSString * nameStr = [NSString stringWithFormat:@"%@",[item objectForKey:@"NAME"]];
                      [_tags2 addObject:nameStr];
                      
                  }
                  
              }else{
                  [self showHint:message];
              }
              
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              
              NSLog(@"%@",error);
          }];
  
}

-(void)tapAction{
    
       SendFlowersAndHeartVC *sendvc = [[SendFlowersAndHeartVC alloc]init];
       sendvc.hidesBottomBarWhenPushed = YES;
       [self.navigationController pushViewController:sendvc animated:YES];
}

-(void)zanwushujuVideoHome{
    
    imagershuju=[[UIImageView alloc]init];
    if (SCREEN_HEIGHT>480) {
        imagershuju.frame = CGRectMake(SCREEN_WIDTH/2-ImagerWuWidth/2, SCREEN_HEIGHT/2-ImagerWuheight/2, ImagerWuWidth, ImagerWuheight);
        imagershuju.image = [UIImage imageNamed:@"zanwushuju1"];
    }else{
        
        imagershuju.frame = CGRectMake(SCREEN_WIDTH/2-ImagerWuWidth/2, SCREEN_HEIGHT/2-ImagerWuheight/2+30, ImagerWuWidth, ImagerWuheight);
        imagershuju.image = [UIImage imageNamed:@"zanwushuju1"];
    }
    
    imagershuju.hidden = YES;
    [self.view addSubview:imagershuju];
    
    
    tiwuxianLab = [[UILabel alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2-TishiLabwidth/2, CGRectGetMaxY(imagershuju.frame), TishiLabwidth, 30)];
    tiwuxianLab.text = @"暂无视频点播";
    tiwuxianLab.textAlignment = YES;
    tiwuxianLab.textColor = RGB11(188, 188, 188);
    tiwuxianLab.hidden = YES;
    tiwuxianLab.font = SYSTEMFONT(TishiLabFont);
    [self.view addSubview:tiwuxianLab];
}

#pragma mark 数据的初始化  数据的初始化 数据的初始化 数据的初始化 数据的初始化 数据的初始化
-(void)dataOpens{
    
    hightScrollpics = 0.0;
    
    newOrhotstr = @"2";
    
    readNumsUUIDA = @"0";
    whichCollectionShow = @"more";
    keyWordsStr = @"";
    _tags2 = [NSMutableArray array];
    _allVideoTypeArr = [NSMutableArray array];
    _dataMarrySection = [NSMutableArray array]; //section 数据
    _dataMarryNumber = [NSMutableArray array];//number 数据
    _dataMarryTayeuuid = [NSMutableArray array];
    readNumsUUID = @"0";
    
    
    isSelectContent = NO;
    isAllvideoBtn = NO;
    _isHiddenTablevie = YES;
    _isHiddenSelectSigns = YES;
    isSelectSureBtn = NO;
    _dataSeletMarr2 = [NSMutableArray array];
    _dataMuarry = [NSMutableArray array];//more
    _dataSeletMarr2NoSureBtn = [NSMutableArray array];
    
    

    _titleArr  = [NSMutableArray array];
    _mutArrimage = [NSMutableArray array];
    _pathArr = [NSMutableArray array];
    _defaultArr = [[NSArray alloc]init];
    NSString * defaultStr =@"home_scroll_default";
    NSString  *imme=[NSString stringWithFormat:@"%@%@",ImageURL, defaultStr];
    _defaultArr = @[imme];
    _defaultTitleArr = [[NSArray alloc]init];
    NSString *  tt = @"肝胆相照";
    _defaultTitleArr = @[tt];

}

#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)type{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        if ([type isEqualToString:@"all"]) {
            [weakSelf dataRequestInterface];

        }else if([type isEqualToString:@"book"]){
            [weakSelf bookRequest];

        }else{
             [weakSelf NewRequestScroll];
        }
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
       if ([type isEqualToString:@"all"]) {
            [weakSelf dataRequestInterface];

        }else if([type isEqualToString:@"book"]){
            [weakSelf bookRequest];

        }else{
             [weakSelf NewRequestScroll];
        }
        
    }];
}

#pragma mark 赠书福利
- (void)bookRequest
{
    NSString *Strurl = [NSString stringWithFormat:@"%@getAppActivity",expertAPI];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"id"] = [NSString stringWithFormat:@"%@",@"6"];
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"id"];

    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        if ([data[@"code"] isEqualToString:@"200"]) {
//             = [NSString stringWithFormat:@"%@",data[@"data"][@"status"]];
            if ([data[@"data"] isKindOfClass:[NSDictionary class]]) {
                
                showHeroImg = [NSString stringWithFormat:@"%@",data[@"data"][@"status"]];
                heroPath = [NSString stringWithFormat:@"%@",data[@"data"][@"url_path"]];
                 NSString *imgpath = [NSString stringWithFormat:@"%@",data[@"data"][@"img"]];
                 fromStr = [NSString stringWithFormat:@"%@",data[@"data"][@"form"]];
                activeNameStr = [NSString stringWithFormat:@"%@",data[@"data"][@"name"]];
                    //添加手势，点击跳转到英雄榜页面
                UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(gotoHero)];
              
                bookImageview = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-76, kMainScreenHeight-100-SafeAreaBottomHeight-30, 76, 40)];

                  [bookImageview sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",ImageURL,imgpath]]];
                    bookImageview.userInteractionEnabled = YES;
                    [bookImageview addGestureRecognizer:tap];
//                    [self.view addSubview:bookImageview];

                
                if ([fromStr isEqualToString:@"2"]) {
                    [self requestbooknum];
                }
            }
        
        }else{
            [self showHint:data[@"message"]];
        }
        
        
    } failure:^(NSError *error) {
        
        GDXZLog(@"%@",error);
        
    }];
    
}

-(void)requestbooknum{
    NSString *Strurl = [NSString stringWithFormat:@"%@%@",BOOKURL,heroPath];
        
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
               dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
           }else{
               
               dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
           }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];

        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            
            if ([data[@"code"] isEqualToString:@"200"]) {
               bookNum  = [NSString stringWithFormat:@"%@",data[@"data"][@"book_num"]];
               patientnum  = [NSString stringWithFormat:@"%@",data[@"data"][@"patient_num"]];
            }else{
                [self showHint:data[@"message"]];
            }
            
            
        } failure:^(NSError *error) {
            
            GDXZLog(@"%@",error);
            
        }];
}

-(void)gotoHero{
    
    if ([fromStr isEqualToString:@"2"]) {
            
        
             GDXZLog(@"弹框活动");
               UIWindow *window = [UIApplication sharedApplication].keyWindow;
               UIView *view11 = [[UIView alloc] init];
               allCoverView = view11;
               [window addSubview:view11];
               view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //
               view11.backgroundColor = [UIColor colorWithWhite:0.0f alpha: 0.6];
               
               UIImageView *ima = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-98, 90, 25, 50)];
               ima.image = [UIImage imageNamed:@"deleatebook"];
               [view11 addSubview:ima];
               
               UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(kMainScreenWidth-120, 90, 65, 50)];
               [btn addTarget:self action:@selector(deleatebook) forControlEvents:(UIControlEventTouchUpInside)];
               btn.backgroundColor = [UIColor clearColor];
               [view11 addSubview:btn];
               
               UIView *viewbg = [[UIView alloc]initWithFrame:CGRectMake(70, 140, kMainScreenWidth-140, 470)];
               viewbg.backgroundColor = RGB11(204, 42, 119);
               viewbg.layer.masksToBounds = YES;
               viewbg.layer.cornerRadius = 15;
               [view11 addSubview:viewbg];
       //        activeBookNewss
               UIImageView *imagenoe = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, kMainScreenWidth-140-20, 400)];
       //        imagenoe.image = [UIImage imageNamed:@"activeBook"];
               imagenoe.image = [UIImage imageNamed:@"activeBookNewss.jpg"];

               [viewbg addSubview:imagenoe];

               if (DEVICE_IS_IPHONE6) {
       //           viewbg.frame = CGRectMake(50, 140, kMainScreenWidth-100, 470);
       //            imagenoe.frame = CGRectMake(10, 10, kMainScreenWidth-140-20, 400);
                   ima.frame = CGRectMake(kMainScreenWidth-98, 60, 25, 50);
                   btn.frame =CGRectMake(kMainScreenWidth-120, 60, 65, 50);
                   viewbg.frame = CGRectMake(70, 110, kMainScreenWidth-140, 470);
               }else if (DEVICE_IS_IPHONEX){
                   
                   ima.frame = CGRectMake(kMainScreenWidth-98, 115, 25, 50);
                   btn.frame =CGRectMake(kMainScreenWidth-120, 115, 65, 50);
                   viewbg.frame = CGRectMake(70, 165, kMainScreenWidth-140, 470);
               }else if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5){
                   
                   ima.frame = CGRectMake(kMainScreenWidth-98, 60, 25, 50);
                   btn.frame =CGRectMake(kMainScreenWidth-120, 60, 65, 50);
                   imagenoe.frame = CGRectMake(10, 10, kMainScreenWidth-100, 350);
                   viewbg.frame = CGRectMake(40, 110, kMainScreenWidth-80, 420);
                   
               }
               
               
               UILabel *labelone = [[UILabel alloc]initWithFrame:CGRectMake(35, 345, 100, 20)];
                    labelone.text = @"新增随访";
                     labelone.font = SYSTEMFONTNEW(18);
                    [viewbg addSubview:labelone];
                    UILabel *labeltwo = [[UILabel alloc]initWithFrame:CGRectMake(165, 345, 100, 20)];
                    labeltwo.text = @"预期赠书";
                    labeltwo.font = SYSTEMFONTNEW(18);
                    [viewbg addSubview:labeltwo];
                    UILabel *lablethree = [[UILabel alloc]initWithFrame:CGRectMake(5, 373, 80, 30)];
                    lablethree.text = patientnum;
                   lablethree.textAlignment = NSTextAlignmentRight;
                   lablethree.font = SYSTEMFONTNEW(25);
                   lablethree.textColor = [UIColor redColor];
       //             lablethree.backgroundColor = [UIColor redColor];
                    [viewbg addSubview:lablethree];
               
                    UILabel *lablethree1 = [[UILabel alloc]initWithFrame:CGRectMake(85, 380, 30, 20)];
                    lablethree1.text = @" 人";
                    [viewbg addSubview:lablethree1];
               
                       UILabel *lablefour = [[UILabel alloc]initWithFrame:CGRectMake(135, 373, 80, 30)];
                                 lablefour.text =bookNum;
                                lablefour.textAlignment = NSTextAlignmentRight;
                                lablefour.font = SYSTEMFONTNEW(25);
                                lablefour.textColor = [UIColor redColor];
       //                        lablefour.backgroundColor = [UIColor redColor];
                                 [viewbg addSubview:lablefour];
                    UILabel *lablefour1 = [[UILabel alloc]initWithFrame:CGRectMake(215, 380, 30, 20)];
                          lablefour1.text = @" 本";
                          [viewbg addSubview:lablefour1];

               if (DEVICE_IS_IPHONE6||DEVICE_IS_IPHONEX) {
                   labelone.frame =CGRectMake(25, 345, 180, 20);
                   labeltwo.frame =CGRectMake(140, 345, 100, 20);
                   lablethree.frame =CGRectMake(0, 373, 80, 30);
                   lablethree1.frame =CGRectMake(80, 380, 30, 20);
                   lablefour.frame =CGRectMake(105, 373, 80, 30);
                   lablefour1.frame =CGRectMake(185, 380, 30, 20);
               }else if (DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE4){
                  labelone.frame = CGRectMake(30, 305, 100, 20);
                   labeltwo.frame = CGRectMake(140, 305, 100, 20);
                   lablethree.frame =CGRectMake(0, 330, 80, 30);
                   lablethree1.frame = CGRectMake(85, 335, 30, 20);
                    lablefour.frame =CGRectMake(120, 330, 80, 30);
                   lablefour1.frame = CGRectMake(205, 335, 30, 20);
               }

               
               
               UIButton *button = [[UIButton alloc]initWithFrame:CGRectMake(35, 425, kMainScreenWidth-120-90, 30)];
              
               if (DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE4) {
                   button.frame = CGRectMake(20, 375, kMainScreenWidth-120, 30);
               }

               [button setTitle:@"立即参与" forState:(UIControlStateNormal)];
               [button setTitleColor: RGB11(204, 42, 119) forState:(UIControlStateNormal)];
               [button addTarget:self action:@selector(gotoerweima) forControlEvents:(UIControlEventTouchUpInside)];
               button.backgroundColor = [UIColor whiteColor];
               button.layer.masksToBounds = YES;
               button.layer.cornerRadius = 13;
               [viewbg addSubview:button];


            
        }else{
           
            allWebViewVC *vc = [[allWebViewVC alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            vc.titleSyr = activeNameStr;
             allCoverView.hidden = YES;
            vc.STraPath = [NSString stringWithFormat:@"%@",heroPath];
            [self.navigationController pushViewController:vc animated:YES];
        }
        
    
    
}

-(void)gotoerweima{
    GDXZLog(@"跳转到医生二维码页面");
    MyQr_codeVC *codevc = [[MyQr_codeVC alloc]init];
    codevc.hidesBottomBarWhenPushed = YES;
    allCoverView.hidden = YES;
    [self.navigationController pushViewController:codevc animated:YES];
}
-(void)deleatebook{
    [UIView animateWithDuration:0.2 animations:^{
        allCoverView.hidden = YES;
    } completion:^(BOOL finished) {
        allCoverView.hidden = YES;
    }];
}

-(void)getSystemTimeFrom{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf dataRequestVIdeotype];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf dataRequestVIdeotype];
    }];
    
}
#pragma mark--新接口第一批new1--
-(void)dataRequestInterface{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *Srurl = [NSString stringWithFormat:@"%@videoNew",IMAURLAPP];//待gzz1108video
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
     if (sysTimestr.length>2) {
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
           
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
//    WEAKSELFS
    [GDNetworkManager postWithURLString:Srurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            
            NSMutableArray * arrM = [data objectForKey:@"data"];
            if (arrM.count>0) {
                
                [_allVideoTypeArr addObject:@"全部视频"];
                
                //TODO...
                NSMutableArray *tempM = [NSMutableArray array];//gzz1125
                for (int i=0;i<arrM.count;i++) {
                    NSString *sectionStr = [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"name"]];
                    if (![sectionStr isEqualToString:@"z-BMS专家端"]) {
                        
                        [_dataMarrySection addObject:sectionStr];
                        [_allVideoTypeArr addObject:sectionStr];
                        [_dataMarryTayeuuid addObject: [NSString stringWithFormat:@"%@",[[arrM objectAtIndex:i] objectForKey:@"uuid"]]];
                        
                        NSMutableArray *videoArr = [NSMutableArray arrayWithArray:[[arrM objectAtIndex:i] objectForKey:@"video"]];
                        [tempM addObject:videoArr];
                    }
 
                }
                if (tempM.count>0) {
                    
                    [_dataMarryNumber addObjectsFromArray:tempM];
                }
                
                [_myCollectionV reloadData];
             
            }
            
        }else{
            [self showHint:[data  objectForKey:@"message"]];
        }
        
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
      
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        if (_dataMarrySection.count>0 && _dataMarryNumber.count>0) {
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
  
    }];
    
}

#pragma mark ====
-(void)makeUIVideo{
    
    [self selectView];
    [self collecetionVideo];
}

#pragma mark 筛选的界面
- (void)selectView{
    
    self.topCoverView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 10+hightScrollpics+40+10);
    self.topCoverView.backgroundColor = [UIColor yellowColor];
    [self.view addSubview:self.topCoverView];
    if (hightScrollpics>0) {

            cycleScrollView2 = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_WIDTH/2) imageURLStringsGroup:[NSArray arrayWithArray:_mutArrimage]]; // 模拟网络延时情景
            
            cycleScrollView2.pageControlAliment = SDCycleScrollViewPageContolAlimentRight;
            cycleScrollView2.delegate = self;
            cycleScrollView2.pageControlStyle = SDCycleScrollViewPageContolStyleClassic;
            //yz1019
            cycleScrollView2.autoScrollTimeInterval = 5;
            cycleScrollView2.placeholderImage = [UIImage imageNamed:@"morenyz"];
        cycleScrollView2.currentPageDotColor = [UIColor whiteColor];// PATIENTJISECOLOR;
        cycleScrollView2.titleLabelTextColor =  [UIColor whiteColor];
           [self.topCoverView addSubview:cycleScrollView2];
            
    }
    
       UIView *bgSeleview1 = [UIView createViewWithFrame:CGRectMake(0, hightScrollpics, SCREEN_WIDTH, 10) bgColor:ersanjiuColor];
       //    bgSeleview1.backgroundColor = [UIColor blueColor];
       [self.topCoverView addSubview:bgSeleview1];
    
    
//       白色背景40高度
       UIView *bgSeleview = [UIView createViewWithFrame:CGRectMake(0, hightScrollpics+10, SCREEN_WIDTH, 40) bgColor:[UIColor whiteColor]];
       [self.topCoverView addSubview:bgSeleview];
       
       UIView *bgSeleview2 = [UIView createViewWithFrame:CGRectMake(0, hightScrollpics+50, SCREEN_WIDTH, 10) bgColor:ersanjiuColor];
       [self.topCoverView addSubview:bgSeleview2];
       
    
       _selectContentBtn = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2+1, 0, 100, 40)];
       [bgSeleview addSubview:_selectContentBtn];
       [_selectContentBtn setTitle:@"筛选" forState:0];
       [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
       _selectContentBtn.titleLabel.font = SYSTEMFONT(16.0);
       [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
       _selectContentBtn.backgroundColor = [UIColor clearColor];
       [_selectContentBtn sizeToFit];
       _selectContentBtn.frame = CGRectMake(SCREEN_WIDTH-_selectContentBtn.width-15, _selectContentBtn.y, _selectContentBtn.width+5,40);
       [_selectContentBtn addTarget:self action:@selector(selecContentClick) forControlEvents:UIControlEventTouchUpInside];

//      竖线
       UIView *verticalLine = [UIView createViewWithFrame:CGRectMake(SCREEN_WIDTH-11.5-_selectContentBtn.width-10, 11.5, 1, 17) bgColor:[UIColor grayColor]];
       [bgSeleview addSubview:verticalLine];
       
//    gzz20200414
    self.hotOrnewView.frame = CGRectMake(SCREEN_WIDTH-11.5-_selectContentBtn.width-10-45, hightScrollpics+10, 45, 50);
    [self.topCoverView addSubview:self.hotOrnewView];
    self.hotOrnewView.backgroundColor = [UIColor yellowColor];
    WEAKSELFS
    UIButton *nwehot = [UIButton createBtnFrame:CGRectMake(0, 0, 45, 22.5) title:@"最新" bgImageName:nil titleColor:[UIColor redColor] cornerRadius:0.0 maskTobound:NO action:^(UIButton *button) {
        MCLog(@"new");
        [button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];//gzz170309
        [weakSelf.hotButton setTitleColor:[UIColor lightGrayColor] forState:0];

    }];
    self.nweButton = nwehot;
    [self.hotOrnewView addSubview:nwehot];

    UIButton *hotnew = [UIButton createBtnFrame:CGRectMake(0, 22.5, 45, 22.5) title:@"最热" bgImageName:nil titleColor:[UIColor lightGrayColor] cornerRadius:0.0 maskTobound:NO action:^(UIButton *button) {
        MCLog(@"hot");
        [button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];//gzz170309
        [weakSelf.nweButton setTitleColor:[UIColor lightGrayColor] forState:0];


    }];
    self.hotButton = hotnew;

    [self.hotOrnewView addSubview:hotnew];


  //       从右向左
       _leftImageview = [UIImageView creatImageviewWithFrame:CGRectMake(15, 11.5, 17, 17) imaged:[UIImage imageNamed:@"allVideoSMoren"]];
       [bgSeleview addSubview:_leftImageview];
       
       
       _allVideoChange = [[RightIamgeviewSizeBtn alloc]initWithFrame:CGRectMake(CGRectGetMaxX(_leftImageview.frame)+5, 0, 100, 40)];
       [bgSeleview addSubview:_allVideoChange];
       
       [_allVideoChange setTitle:@"全部视频" forState:0];
       [_allVideoChange setTitleColor:[UIColor lightGrayColor] forState:0];
       _allVideoChange.titleLabel.font = SYSTEMFONT(16.0);
       _allVideoChange.titleLabel.lineBreakMode = NSLineBreakByTruncatingTail;
       _allVideoChange.titleLabel.textAlignment = NSTextAlignmentLeft;
       [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSMoren"] originalImage] forState:0];
       _allVideoChange.backgroundColor = [UIColor clearColor];
       [_allVideoChange sizeToFit];
//     max - 45 去掉了21.5
       CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-_selectContentBtn.width-45;

//       CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width;
    
       if (_allVideoChange.width>maxViedoWidth) {
           
           _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);

       }else{
           
           _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);

       }
       [_allVideoChange addTarget:self action:@selector(allVideContentClick) forControlEvents:UIControlEventTouchUpInside];
       

    
    
}


#pragma mark 点击全部视频  按钮
- (void)allVideContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    if (_dataSeletMarr2.count>0 && isSelectSureBtn ) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
    }else{
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
    }
    
    _isHiddenSelectSigns = YES;
    isSelectContent = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
    isAllvideoBtn = !isAllvideoBtn;
    if (isAllvideoBtn) {
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        
        _bgTablview = [UIView createViewWithFrame:CGRectMake(0, 20+40+hightScrollpics, SCREEN_WIDTH, SCREEN_HEIGHT-60-hightScrollpics-SafeAreaBottomHeight) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgTablview];
        
        _tabview = [[UITableView alloc]initWithFrame:CGRectMake(0,0, SCREEN_WIDTH,SCREEN_HEIGHT-60-SafeAreaBottomHeight-hightScrollpics) style:UITableViewStylePlain];
        _tabview.backgroundColor = [UIColor clearColor];
        _tabview.delegate = self;
        _tabview.dataSource = self;
        _tabview.estimatedRowHeight = 45;//gzz170704
        _tabview.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tabview.tableFooterView = [[UIView alloc]init];
        [_bgTablview addSubview:_tabview];
        
        
    }else{
        
        
        _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
        [_allVideoChange setTitleColor:JISECOLOR forState:0];
        [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
        
        [UIView animateWithDuration:0.25 animations:^{
            _bgTablview.hidden = YES;
        } completion:^(BOOL finished) {
            [_tabview removeFromSuperview];
            [_bgTablview removeFromSuperview];
        }];
        
    }
    
    
}


#pragma mark tableview start

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return _allVideoTypeArr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    NSString *cellID = @"cellIDSelectVideo";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleBlue;
    cell.backgroundColor = [UIColor whiteColor];
    

    NSString *typestr = [NSString stringWithFormat:@"%@", [_allVideoTypeArr objectAtIndex:indexPath.row]];
    NSString *tepstr = typestr;
    if (tepstr.length>=6) {
        tepstr = [tepstr substringToIndex:6];
    }else if (tepstr.length>=4){
        tepstr = [tepstr substringToIndex:4];
    }
    
    if([tepstr containsString:@"---"]){
        NSRange range = [tepstr rangeOfString:@"---"];
        typestr = [typestr substringFromIndex:range.location+3];
    }else if ([tepstr containsString:@"--"]) {
        NSRange range = [tepstr rangeOfString:@"--"];
        typestr = [typestr substringFromIndex:range.location+2];
    }else if([tepstr containsString:@"-"]){
        NSRange range = [tepstr rangeOfString:@"-"];
        typestr = [typestr substringFromIndex:range.location+1];
    }
    
    cell.textLabel.text  =  [NSString stringWithFormat:@"%@",typestr];
    
    NSString * str8 =  _allVideoChange.titleLabel.text;
    
    if ([cell.textLabel.text isEqualToString:str8]) {
        
        cell.textLabel.textColor = JISECOLOR;
        
    }else{
        
        cell.textLabel.textColor = [UIColor lightGrayColor];
    }
    
    
    cell.textLabel.font = SYSTEMFONT(15.0);
    cell.textLabel.numberOfLines = 2;
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
    
    UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    cell.textLabel.textColor = JISECOLOR;
    
    _leftImageview.image = [UIImage imageNamed:@"allVideoSIight"];
    [_allVideoChange setTitle:cell.textLabel.text forState:0];
    [_allVideoChange setTitleColor:JISECOLOR forState:0];
    [_allVideoChange setImage:[[UIImage imageNamed:@"arrowSLight"] originalImage] forState:0];
    [_allVideoChange sizeToFit];
//    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-21.5-_selectContentBtn.width; gzz20200407
    CGFloat maxViedoWidth = SCREEN_WIDTH-37-32-_selectContentBtn.width-45;

    if (_allVideoChange.width>maxViedoWidth) {
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, maxViedoWidth+5,40);
    }else{
        
        _allVideoChange.frame = CGRectMake(_allVideoChange.x, _allVideoChange.y, _allVideoChange.width+5,40);
    }
    //    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    
#pragma mark 数据请求More
    if (indexPath.row == 0) {
  
        if (keyWordsStr.length > 0) {
            whichCollectionShow = @"noMore";
            _myCollectionV.hidden = YES;
            _myCollectionNoMore.hidden = NO;
            [_dataMuarry removeAllObjects];
            numbers = 1;
            uuidTypeStr = @"";//点击全部视频时uuid传空
            [self getSystemTimeFrom];
            
        }else{
            
            _myCollectionNoMore.hidden = YES;
            _myCollectionV.hidden = NO;
            whichCollectionShow = @"more";
            uuidTypeStr = @"";//点击全部视频时uuid传空
            [_myCollectionV reloadData];//gzz170629
            
        }
        
    }else{
        
        numbers = 1;
        uuidTypeStr = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:indexPath.row-1]] ;
        [_dataMuarry removeAllObjects];
        [self getSystemTimeFrom];
        
    }
}

#pragma mark tableview end


#pragma mark selectContentClick筛选 按钮
- (void)selecContentClick{
    //移除选中的数据
    [_dataSeletMarr2NoSureBtn removeAllObjects];
    
    _isHiddenTablevie = YES;
    isAllvideoBtn = NO;
    [UIView animateWithDuration:0.25 animations:^{
        _bgTablview.hidden = YES;
    } completion:^(BOOL finished) {
        [_tabview removeFromSuperview];
        [_bgTablview removeFromSuperview];
    }];
    
    
    isSelectContent = !isSelectContent;
    if (isSelectContent) {
        [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
        [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        
        [self tagsUIVideo];
        
        
    }else{
        
        if (_dataSeletMarr2.count>0 && isSelectSureBtn) {
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:JISECOLOR forState:0];
        }else{
            [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
            [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
        }
        
        [self.view endEditing:YES];
        _isHiddenSelectSigns = YES;
        [UIView animateWithDuration:0.25 animations:^{
            _bgSelecSigns.hidden = YES;
            _bgSelecSigns.alpha = 0;
        } completion:^(BOOL finished) {
            [_textTagCollectionView2 removeFromSuperview];
            [_bgSelecSigns removeFromSuperview];
        }];
        
    }
}

#pragma mark 筛选的界面
- (void)tagsUIVideo{
    
    if (_isHiddenSelectSigns) {
        _isHiddenSelectSigns = NO;
        _bgSelecSigns = [UIView createViewWithFrame:CGRectMake(0, 60+hightScrollpics, SCREEN_WIDTH, SCREEN_HEIGHT-60-hightScrollpics) bgColor:[UIColor whiteColor]];//[
        [self.view addSubview:_bgSelecSigns];
        
        
        _textTagCollectionView2 = [[TTGTextTagCollectionView alloc]init];
        [_bgSelecSigns addSubview:_textTagCollectionView2];
        _textTagCollectionView2.selectionLimit = 3;
        _textTagCollectionView2.frame = CGRectMake(10, 20, self.view.frame.size.width-20, SCREEN_HEIGHT-60-45-20-hightScrollpics-10);
        _textTagCollectionView2.backgroundColor = [UIColor clearColor];
        
        _textTagCollectionView2.delegate = self;
        _textTagCollectionView2.showsVerticalScrollIndicator = NO;
        TTGTextTagConfig *config = _textTagCollectionView2.defaultConfig;
        config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
        //文本的颜色
        config.tagTextColor = [UIColor lightGrayColor];
        //选中的样色
        config.tagSelectedTextColor = JISECOLOR;
        
        config.tagBackgroundColor = [UIColor clearColor];
        config.tagSelectedBackgroundColor = [UIColor clearColor];
        
        //水平竖直间距
        if (SCREEN_WIDTH == 320) {
            _textTagCollectionView2.horizontalSpacing = 12.0;
            _textTagCollectionView2.verticalSpacing = 12.0;
        }else if (SCREEN_WIDTH == 375 ){
            
            _textTagCollectionView2.horizontalSpacing = 23.0;
            _textTagCollectionView2.verticalSpacing = 15.0;
        }else if (SCREEN_WIDTH == 414 ){
            
            _textTagCollectionView2.horizontalSpacing = 30.0;
            _textTagCollectionView2.verticalSpacing = 20.0;
        }else{
            //iPhone
            
        }
        
        //外围包裹
        config.tagBorderColor = [UIColor lightGrayColor];
        config.tagSelectedBorderColor = JISECOLOR;
        config.tagBorderWidth = 1;
        config.tagSelectedBorderWidth = 1;
        
        //阴影
        config.tagShadowColor = [UIColor whiteColor];
        config.tagShadowOffset = CGSizeMake(0, 0);
        config.tagShadowOpacity = 0.0f;
        config.tagShadowRadius = 0.0f;
        
        //裁剪
        config.tagCornerRadius = 10.0;
        config.tagSelectedCornerRadius = 10.0;
        
        //扩展宽高
        config.tagExtraSpace = CGSizeMake(10, 10);
        [_textTagCollectionView2 addTags:_tags2];
        _textTagCollectionView2.alignment = 0;
        
        if (isSelectSureBtn) {
            for (int i = 0; i<_dataSeletMarr2.count; i++) {
                NSUInteger index = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:index selected:YES];
            }
            [_dataSeletMarr2NoSureBtn addObjectsFromArray:_dataSeletMarr2];
            
            
            
        }else{
            
            isSelectSureBtn = NO;
            
            [_dataSeletMarr2 removeAllObjects];
        }
        [_textTagCollectionView2 reload];
        
        
        UIButton *resetBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(10, _bgSelecSigns.height-45, (SCREEN_WIDTH-30)/2, 35) title:@"重置" bgImageName:@"d" titleColor:JISECOLOR bgColor:[UIColor whiteColor] titleLabelFont:20 action:^(UIButton *button) {
            
            for (int i = 0; i<_dataSeletMarr2NoSureBtn.count; i++) {
                NSInteger indexs = [_dataSeletMarr2NoSureBtn[i] integerValue];
                [_textTagCollectionView2 setTagAtIndex:indexs selected:NO];
            }
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            [_dataSeletMarr2 removeAllObjects];
            
            keyWordsStr = @"";
            
        }];
        
        if (DEVICE_IS_IPHONEX) {
            
            resetBtn.frame = CGRectMake(10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35);
        }
        
        resetBtn.layer.cornerRadius = 5;
        resetBtn.layer.masksToBounds = YES;
        resetBtn.layer.borderWidth = 1;
        resetBtn.layer.borderColor = JISECOLOR.CGColor;
        [_bgSelecSigns addSubview:resetBtn];
        
        UIButton *sureBtn = [UIButton createTypeTwoBtnFrame:CGRectMake(CGRectGetMaxX(resetBtn.frame)+10, _bgSelecSigns.height-45, (SCREEN_WIDTH-30)/2, 35)  title:@"确定" bgImageName:@"d" titleColor:[UIColor whiteColor] bgColor:JISECOLOR titleLabelFont:20 action:^(UIButton *button) {
            
            isSelectSureBtn = YES;
            
            [self sureBtnClick];
            
            [_dataSeletMarr2 removeAllObjects];
            
            [_dataSeletMarr2 addObjectsFromArray:_dataSeletMarr2NoSureBtn];
            
            //移除选中的数据
            [_dataSeletMarr2NoSureBtn removeAllObjects];
            
            isSelectContent = !isSelectContent;
            if (isSelectContent) {
                [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
                [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                
                
            }else{
                if (_dataSeletMarr2.count>0) {
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shai"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:JISECOLOR forState:0];
                }else{
                    [_selectContentBtn setImage:[[UIImage imageNamed:@"shaiMo"] originalImage] forState:0];
                    [_selectContentBtn setTitleColor:[UIColor lightGrayColor] forState:0];
                }
                
            }
            
            numbers = 1;
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
            if (_dataSeletMarr2.count>0) {
                
                
                _dataMuarry = [[NSMutableArray alloc]init];
                
                NSMutableArray *arrTags = [NSMutableArray array];
                if (_dataSeletMarr2.count >0) {
                    for (int i=0; i<_dataSeletMarr2.count; i++) {
                        NSInteger indesx = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                        [arrTags addObject:[_tags2 objectAtIndex:indesx]];
                    }
                }
                
                keyWordsStr = [arrTags componentsJoinedByString:@","];
                
                [self getSystemTimeFrom];
                
            }else{
                
          
                _dataMuarry = [[NSMutableArray alloc]init];
                
                NSMutableArray *arrTags = [NSMutableArray array];
                if (_dataSeletMarr2.count >0) {
                    for (int i=0; i<_dataSeletMarr2.count; i++) {
                        NSInteger indesx = [[_dataSeletMarr2 objectAtIndex:i] integerValue];
                        [arrTags addObject:[_tags2 objectAtIndex:indesx]];
                    }
                }
                
                keyWordsStr = [arrTags componentsJoinedByString:@","];
                
                if (keyWordsStr.length == 0 && uuidTypeStr.length == 0) {
                    //标签为空 uuid为空 直接是全部
                    _myCollectionV.hidden = NO;
                    _myCollectionNoMore.hidden = YES;
                    [_myCollectionV reloadData];
                    return ;
                }else if(keyWordsStr.length == 0 && uuidTypeStr.length > 0){
                    //标签为空 uuid不为空 请求接口
                    
                    whichCollectionShow = @"noMore";
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    [_dataMuarry removeAllObjects];
                    numbers = 1;
                    [self getSystemTimeFrom];
                }else{
                    whichCollectionShow = @"noMore";
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    [_dataMuarry removeAllObjects];
                    numbers = 1;
                    [self getSystemTimeFrom];
                }
            }
            
            
            
        }];
        if (DEVICE_IS_IPHONEX) {
            
            sureBtn.frame = CGRectMake(CGRectGetMaxX(resetBtn.frame)+10, _bgSelecSigns.height-45-SafeAreaBottomHeight, (SCREEN_WIDTH-30)/2, 35);
        }
        sureBtn.layer.cornerRadius = 5;
        sureBtn.layer.masksToBounds = YES;
        [_bgSelecSigns addSubview:sureBtn];
        
    }
}



#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
        [_dataSeletMarr2NoSureBtn addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<_dataSeletMarr2NoSureBtn.count; i++) {
            if ([[_dataSeletMarr2NoSureBtn objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [_dataSeletMarr2NoSureBtn removeObjectAtIndex:i];
            }
        }
    }
    NSLog(@"---盛放的数据-%@-",_dataSeletMarr2NoSureBtn);
}

#pragma mark 确定
-(void)sureBtnClick{//gzz0207
    
    [self.view endEditing:YES];
    _isHiddenSelectSigns = YES;
    [UIView animateWithDuration:0.25 animations:^{
        _bgSelecSigns.hidden = YES;
        _bgSelecSigns.alpha = 0;
    } completion:^(BOOL finished) {
        [_textTagCollectionView2 removeFromSuperview];
        [_bgSelecSigns removeFromSuperview];
    }];
    
}
-(void)jumpTojingpin{
    
    changVideoVC *vc = [[changVideoVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}


#pragma mark ========================界面

-(void)collecetionVideo{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    

    _myCollectionV = [[UICollectionView alloc]initWithFrame:CGRectMake (0, hightScrollpics+60,  self.view.frame.size.width, kMainScreenHeight-hightScrollpics-60-50-SafeAreaBottomHeight+10) collectionViewLayout:flowL];

    
    _myCollectionV.delegate =self;
    _myCollectionV.dataSource =self;
    //    _myCollectionV.backgroundColor = RGB11(235, 235, 235);// RGB(188, 188, 188);//[UIColor yellowColor];
    _myCollectionV.backgroundColor =  bgLineColor;//gzz1129
    _myCollectionV.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_myCollectionV];
    
    UIButton * button = [[UIButton alloc]initWithFrame:CGRectMake(0, kMainScreenHeight-50-SafeAreaBottomHeight, kMainScreenWidth/2, 50)];
    button.backgroundColor = RGB11(63, 199, 193);
    [button setTitle:@" 患教视频" forState:(UIControlStateNormal)];
    [button setImage:[UIImage imageNamed:@"huanvideo@2x"] forState:(UIControlStateNormal)];
    [button addTarget:self action:@selector(callPhone) forControlEvents:(UIControlEventTouchUpInside)];
    [self.view addSubview:button];
    
    UIButton * button1 = [[UIButton alloc]initWithFrame:CGRectMake(kMainScreenWidth/2, kMainScreenHeight-50-SafeAreaBottomHeight, kMainScreenWidth/2, 50)];
    button1.backgroundColor = RGB11(63, 199, 193);
    [button1 setTitle:@" 精品课程" forState:(UIControlStateNormal)];
    [button1 setImage:[UIImage imageNamed:@"jinpingmake"] forState:(UIControlStateNormal)];
    [button1 addTarget:self action:@selector(jumpTojingpin) forControlEvents:(UIControlEventTouchUpInside)];
    [self.view addSubview:button1];
    
    UILabel *lab = [[UILabel alloc]initWithFrame:CGRectMake(0, 12, 1, 26)];
    lab.backgroundColor = [UIColor whiteColor];
    [button1 addSubview:lab];
    
#pragma mark -- 注册单元格
    [_myCollectionV registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:indentifyVideo];
    
#pragma mark -- 注册头部视图
    [_myCollectionV registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"];
#pragma mark -- 注册尾部视图
    [_myCollectionV registerClass:[MyFooterView class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"];
    

}

-(void)callPhone{
    
    PatientVideoHomeController * patientVC = [[PatientVideoHomeController alloc]init];
    [self.navigationController pushViewController:patientVC animated:YES];
}

#pragma mark --UICollectionView dataSource
//有多少个Section
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    //    return _dataMarrySection.count;
    if (collectionView == _myCollectionV) {
        return _dataMarrySection.count;
        
    }else{
        
        return 2;
        
    }
}

//每个section有多少个元素
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    //    return [[_dataMarryNumber objectAtIndex:section] count];
    if (collectionView == _myCollectionV) {
        return [[_dataMarryNumber objectAtIndex:section] count];
    }else{
        
        if (section == 0) {
            return 0;
            
        }else{
            return _dataMuarry.count;//gzz1114
            
        }
        
    }
}
//每个单元格的数据
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (collectionView == _myCollectionV) {
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:indentifyVideo forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        //    cell.backgroundColor = [UIColor whiteColor];
        cell.backgroundColor = bgLineColor;//gzz1129
        [cell.contentView addSubview:[self   cellIndex:(int)indexPath.item  sectionn:indexPath.section] ];
        return cell;
    }else{
        
        UICollectionViewCell *cell = (UICollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:indentifyVideoTypes forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        cell.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];;//[UIColor purpleColor];
        if (_dataMuarry.count>0) {
            
            [cell.contentView addSubview:[self cellIndex:(int)indexPath.item]];
        }
        return cell;
        
    }
}


#pragma mark 自定义item have  More
-(UIView *)cellIndex:(NSInteger)index sectionn:(NSInteger)section{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]init];
    if (index%2==0) {
        viewdd.frame = CGRectMake(10, 0, widthD, height);
    }else{
        viewdd.frame = CGRectMake(0, 0, widthD, height);
    }
    viewdd.backgroundColor = [UIColor whiteColor];
    
    
    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[[_dataMarryNumber objectAtIndex:section] objectAtIndex:index]];
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD, height)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-10, 10)];
    desLabel.textColor = RGB11(102, 102, 102) ;//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    [viewdd addSubview:desLabel];
    
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];
    desLabel.text= summary;
    
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB11(153,153,153);
    expertLabel.font = [UIFont systemFontOfSize:14];
    NSString *public_name = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];
    
    expertLabel.text = public_name;
    [viewdd addSubview:expertLabel];
    //    expertLabel.backgroundColor = [UIColor blueColor];
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerYy = expertLabel.centerYy;
    [viewdd addSubview:liangView];
    
    
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUID isEqualToString:[dicc objectForKey:@"uuid"]]) {
        NSInteger num = [nums integerValue]+1;
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        
        [[_dataMarryNumber objectAtIndex:section] replaceObjectAtIndex:index withObject:dicc];
        
        readNumsUUID = @"0";
    }
    
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB11(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerYy = image1.centerYy;
    
    //    CGFloat liangX = widthD-image1.width-label2.width-15;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    //    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+10);gzz1129
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    
    
    return viewdd;
}

//每个cell的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    //    CGFloat widthD = (SCREEN_WIDTH-10)/2;
    //    CGFloat widthD1 = (SCREEN_WIDTH-30)/2;
    //
    //    CGFloat height = widthD1/1.61+36+30+16+16-16-5+10;
    //    return CGSizeMake(widthD, height);
    if (collectionView == _myCollectionV) {
        CGFloat widthD = (SCREEN_WIDTH-10)/2;
        CGFloat widthD1 = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD1/1.61+36+30+16-5+10;
        return CGSizeMake(widthD, height);
    }else{
        
        CGFloat widthD = (SCREEN_WIDTH-30)/2;
        CGFloat height = widthD/1.61+36+30+16-5+10;
        
        //    CGFloat height = widthD/1.61+36+30+16;gzz1129
        return CGSizeMake(widthD, height);
    }
    
    
}

//设置头尾部内容
-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        UICollectionReusableView *reusableView =nil;
        
        if (kind ==UICollectionElementKindSectionHeader) {
            //定制头部视图的内容
            _isBlock = @"yesA";//gzz170216   333333333
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"]; //444444 jingxuan_vide
            
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"forIndexPath:indexPath];
            //        headerV.backgroundColor = [UIColor whiteColor];
            headerV.moreLab.text = @"更多";

            headerV.titleStr = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:indexPath.section]];

            headerV.moreIMageview.tag = indexPath.section*1108;
            headerV.moreIMageview.backgroundColor = [UIColor clearColor];
            //        MCLog(@"tag..-===第几个section.%zd.",indexPath.section*1108);
            UITapGestureRecognizer *ges = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(gesTap:)];
            [headerV.moreIMageview addGestureRecognizer:ges];
            reusableView = headerV;
        }
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView *footerV = (MyFooterView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView"forIndexPath:indexPath];
            // footerV.titleLab.text =@"尾部视图";
            reusableView = footerV;
        }
        return reusableView;
        
    }else{
        UICollectionReusableView *reusableView =nil;
        if (kind ==UICollectionElementKindSectionHeader) {
            MyHeaderView *headerV = (MyHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"forIndexPath:indexPath];
            headerV.arrowIMageview.hidden = YES;
            headerV.hidden = YES;
            reusableView = headerV;
            
        }
        
        if (kind ==UICollectionElementKindSectionFooter){
            MyFooterView1 *footerV = (MyFooterView1 *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"forIndexPath:indexPath];
            reusableView = footerV;
            footerV.hidden = YES;
        }
        return reusableView;
    }
    
}

- (CGSize)checTheStringWithHight:(NSString *)theStr fonts:(float)font
{
    
    CGSize sixx= [theStr boundingRectWithSize:CGSizeMake(self.view.frame.size.width-32-40-5-8, MAXFLOAT)  options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont boldSystemFontOfSize:font]} context:nil].size;
    return  sixx;
    
}

#pragma mark 更多的事件点击
-(void)gesTap:(UITapGestureRecognizer *)ges{
//    杨壮
    NSInteger tags = ges.view.tag/1108;
    VideoTypesController *taps = [VideoTypesController new];
    taps.hidesBottomBarWhenPushed = YES;
//    taps.titleStr
    NSString *typestr = [NSString stringWithFormat:@"%@",[_dataMarrySection objectAtIndex:tags]];
        NSString *tepstr = typestr;
         if (tepstr.length>=6) {
             tepstr = [tepstr substringToIndex:6];
         }else if (tepstr.length>=4){
             tepstr = [tepstr substringToIndex:4];
         }
         
         if([tepstr containsString:@"---"]){
             NSRange range = [tepstr rangeOfString:@"---"];
             typestr = [typestr substringFromIndex:range.location+3];
         }else if ([tepstr containsString:@"--"]) {
             NSRange range = [tepstr rangeOfString:@"--"];
             typestr = [typestr substringFromIndex:range.location+2];
         }else if([tepstr containsString:@"-"]){
             NSRange range = [tepstr rangeOfString:@"-"];
             typestr = [typestr substringFromIndex:range.location+1];
         }
    
    taps.titleStr = [NSString stringWithFormat:@"%@",typestr];
    taps.uuidType = [NSString stringWithFormat:@"%@",[_dataMarryTayeuuid objectAtIndex:tags]] ;
    [self.navigationController pushViewController:taps animated:YES];
}


//点击单元格
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView == _myCollectionV) {
        
        //gzz1115 要走read接口
        if (_dataMarryNumber.count>0) {
            
            [self readRequestVideo:indexPath.item section:indexPath.section];
        }
        
    }else{
        
        if (_dataMuarry.count>0) {
            
            [self readRequestVideoType:indexPath.item];
        }
        
    }
}





#pragma mark 点击 阅读量加一的接口
-(void)readRequestVideoType:(NSInteger)itemIndex {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex]  objectForKey:@"uuid"]];
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];// jingxuan_video 777
            _isBlock = @"yesB";//333333
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
//        gzz191101    VideoDetailController *videoDetail = [VideoDetailController new];
            VideosDetailNewVC *videoDetail = [VideosDetailNewVC new];
            videoDetail.polyv_uuidStr = [[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"polyv_uuid"];;//polyv_uuid
            videoDetail.videoPath = [[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"path"];
            videoDetail.contentID = [[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"content"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"uuid"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"public_name"]];
            
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[[_dataMuarry objectAtIndex:itemIndex] objectForKey:@"readnum"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"imgpath"]];
            
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[[_dataMuarry  objectAtIndex:itemIndex] objectForKey:@"name"]];
            
            videoDetail.isCollection = Collection;
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.typesVideo = @"type";
            
            __weak __typeof(self) weakSelf = self;
            videoDetail.reloadBlock = ^(NSString * str){
                readNumsUUIDA = str; //6666
                [weakSelf.myCollectionNoMore reloadData];
                
            };
            
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}


#pragma mark 点击 阅读量加一的接口
-(void)readRequestVideo:(NSInteger)itemIndex section:(NSInteger)sectionNum {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
    
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            _isBlock = @"yesB";  //44444444
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
//            VideoDetailController *videoDetail = [VideoDetailController new];
//
            VideosDetailNewVC *videoDetail = [VideosDetailNewVC new];
videoDetail.polyv_uuidStr = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"polyv_uuid"];
            videoDetail.videoPath = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"path"];
            videoDetail.contentID = [[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"content"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"uuid"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"public_name"]];
            
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"readnum"]];
            
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"imgpath"]];
            
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[[[_dataMarryNumber objectAtIndex:sectionNum] objectAtIndex:itemIndex] objectForKey:@"name"]];
            
            videoDetail.isCollection = Collection;
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.typesVideo = @"videoHome";
            __weak __typeof(self) weakSelf = self;
            videoDetail.reloadBlock = ^(NSString * str){
                
                readNumsUUID = str;
                [weakSelf.myCollectionV reloadData];
                
                
            };
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
    
}



-(CGSize)collectionView:(UICollectionView*)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    if (_myCollectionV == collectionView) {
        //    return CGSizeMake(self.view.frame.size.width, 40);
        CGSize sizes = [self checTheStringWithHight:[_dataMarrySection objectAtIndex:section] fonts:16.0];
        if (sizes.height > 30) {
            return CGSizeMake(self.view.frame.size.width, 57);
            
        }else{
            return CGSizeMake(self.view.frame.size.width, 40);
        }
    }else{
        
        return CGSizeMake(self.view.frame.size.width, 0.1);
    }
    
    
}
//5s的适配

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section{
    if (collectionView == _myCollectionV) {
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }else{
        return CGSizeMake(self.view.frame.size.width, 10);
        
    }
    
    
}

////距边界缩放大小
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0, 0 , 0, 0);//分别为上、左、下、右
    
}

#pragma mark navbar及返回
-(void)navBarVideo{
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(buttonIterm)];
    
    self.navigationItem.leftBarButtonItem=backItem;

    UIView * view5 = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 100, 40)];
    UIButton *pulishButton=[UIButton buttonWithType:(UIButtonTypeCustom)];
    pulishButton.frame = CGRectMake(30, 5, 30, 30);
    [pulishButton setImage:[UIImage imageNamed:@"sousuobtn@2x"] forState:0];
    [pulishButton addTarget:self action:@selector(storeBtn) forControlEvents:UIControlEventTouchUpInside];
    [view5 addSubview:pulishButton];
    
    UIButton *saveButton=[UIButton buttonWithType:(UIButtonTypeCustom)];
    saveButton.frame=CGRectMake(70, 5, 30, 30);
    [saveButton setImage:[UIImage imageNamed:@"videoChange"] forState:0];
    [saveButton addTarget:self action:@selector(changeAction) forControlEvents:UIControlEventTouchUpInside];
    [view5 addSubview:saveButton];
    
    UIBarButtonItem *pulish = [[UIBarButtonItem alloc] initWithCustomView:view5];
    self.navigationItem.rightBarButtonItem = pulish;
}
//右上角搜索按钮点击事件
-(void)storeBtn{
    
    //    _isBlock = @"yesA";//gzz170216   5555555
    //    searchVideoVC * videoVC = [[searchVideoVC alloc]init];
    //    [self.navigationController pushViewController:videoVC animated:YES];
    
    bigSearchVC * vc = [[bigSearchVC alloc]init];
    vc.fromWhat = @"shouye";
    [self.navigationController pushViewController:vc animated:YES];
}
-(void)changeAction{
    
    replayVideoVC * vc = [[replayVideoVC alloc]init];
    vc.isFromvideo = @"肝胆视频";
    [self.navigationController pushViewController:vc animated:YES];
}
-(void)buttonIterm{
    [self.navigationController popViewControllerAnimated:YES];
}

-(NSDictionary *)clearErrorData11:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        NSString * value = [newDict objectForKey:key];
        if ((NSNull *)value == [NSNull null]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}
#pragma mark--新接口第一批new5--
-(void)dataRequestVIdeotype{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//    gzz20200422
    NSString *Srurl = [NSString stringWithFormat:@"%@videoByKeyWordsNew",IMAURLAPP];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
           
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    
    if ([uuidTypeStr isEqualToString:@"(null)"] || [uuidTypeStr isEqualToString:@"null"]|| [uuidTypeStr isEqualToString:@"<null>"] || uuidTypeStr.length == 0) {
        
        uuidTypeStr = @"";
    }
    dicM[@"typeUuid"] = [NSString stringWithFormat:@"%@",uuidTypeStr];
    dicM[@"page"] = [NSString stringWithFormat:@"%zd",numbers];
    dicM[@"keywords"] = keyWordsStr;
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"typeUuid",@"page",@"keywords"];
    
    [GDNetworkManager postWithURLString:Srurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        NSString *coder = [NSString stringWithFormat:@"%@",data[@"code"]];
        if ([coder isEqualToString:@"1"]) {
            NSDictionary *dataDic = [data objectForKey:@"data"];
            if ([dataDic count]>0) {
                
                NSMutableArray *listM = [dataDic objectForKey:@"list"];
                if (listM.count>0) {
                    [_dataMuarry  addObjectsFromArray:listM];
                    _myCollectionV.hidden = YES;
                    _myCollectionNoMore.hidden = NO;
                    
                    [_myCollectionNoMore reloadData];
                    
                }
                
                
            }
            
        }else{
            [self showHint:[data  objectForKey:@"message"]];
        }
        
        _myCollectionV.hidden = YES;
        _myCollectionNoMore.hidden = NO;
        [_myCollectionNoMore reloadData];
        
        if (_dataMuarry.count>0 ) {
            
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        
        [_myCollectionNoMore reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        if (_dataMuarry.count>0 ) {
            
            imagershuju.hidden = YES;
            tiwuxianLab.hidden = YES;
        }else{
            imagershuju.hidden = NO;
            tiwuxianLab.hidden = NO;
            
        }
        [_myCollectionNoMore reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
    }];
}


//下拉刷新
-(void)DownFreshVideotypes{
    
    __unsafe_unretained typeof(self) vc = self;
    // 添加下拉刷新头部控件
    [vc.myCollectionNoMore addHeaderWithCallback:^{
        [_dataMuarry removeAllObjects];
        numbers = 1;
        [vc getSystemTimeFrom];
        [vc.myCollectionNoMore headerEndRefreshing];
        
    }];
    
}

//上拉加载
-(void)upFreshVideotypes{
    __unsafe_unretained typeof(self) vc = self;
    [vc.myCollectionNoMore addFooterWithCallback:^{
        numbers ++;
        [vc getSystemTimeFrom];
        [vc.myCollectionNoMore footerEndRefreshing];
        
        
    }];
    
}


#pragma mark========================================= NOmorecolllection

- (void)makeUiCollectionMOre{
    
    UICollectionViewFlowLayout *flowL = [UICollectionViewFlowLayout new];
    flowL.minimumInteritemSpacing = 0;
    flowL.minimumLineSpacing = 0;
    [flowL setScrollDirection:UICollectionViewScrollDirectionVertical];
    
    CGFloat heigth ;
    if (DEVICE_IS_IPHONEX) {
        heigth =  kMainScreenHeight-hightScrollpics-60-SafeAreaBottomHeight-50;
    }else{
        heigth =   kMainScreenHeight-hightScrollpics-60-SafeAreaBottomHeight-50;
        }
    _myCollectionNoMore = [[UICollectionView alloc]initWithFrame:CGRectMake (10, 60+hightScrollpics,  SCREEN_WIDTH-20, heigth) collectionViewLayout:flowL];

    _myCollectionNoMore.delegate =self;
    _myCollectionNoMore.dataSource =self;
    _myCollectionNoMore.hidden = YES;
    _myCollectionNoMore.backgroundColor = bgLineColor;//gzz1129[UIColor whiteColor];
    _myCollectionNoMore.showsVerticalScrollIndicator = NO;
    _myCollectionNoMore.alwaysBounceVertical = YES;
    [self.view addSubview:_myCollectionNoMore];
    
#pragma mark -- 注册单元格
    [_myCollectionNoMore registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:indentifyVideoTypes];
#pragma mark -- 注册头部视图
    [_myCollectionNoMore registerClass:[MyHeaderView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderViewNOmore"];
#pragma mark -- 注册尾部视图
    [_myCollectionNoMore registerClass:[MyFooterView1 class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:@"FooterView1"];
    
    
    NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
     
     NSString * versonStr = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
     

     UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(tapAction)];
     
     followImage = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-48, kMainScreenHeight-100-SafeAreaBottomHeight-30-70, 48, 48)];
     followImage.image = [UIImage imageNamed:@"xinyiImage@2x"];
     followImage.userInteractionEnabled = YES;
     [followImage addGestureRecognizer:tap];
     
     if ([versonStr isEqualToString:@"1"]) {
         
         [self.view addSubview:followImage];
     }
     
    [self.view addSubview:bookImageview];

    
        [self DownFreshVideotypes];//nomore
        [self upFreshVideotypes];//nomore
}

#pragma mark 自定义itemnoMore
-(UIView *)cellIndex:(NSInteger)index{
    
    CGFloat widthD = (SCREEN_WIDTH-30)/2;
    CGFloat height = widthD/1.61;
    
    UIView  *viewdd = [[UIView alloc]initWithFrame:CGRectMake(1, 1, widthD-2, height-2)];
    viewdd.backgroundColor = [UIColor whiteColor];


    NSMutableDictionary *dicc=  [NSMutableDictionary dictionaryWithDictionary:[self clearErrorData11:[_dataMuarry  objectAtIndex:index]]];
    
    NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl, [dicc objectForKey:@"imgpath"]];
    
    UIImageView *imageViews = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, widthD-2, height-2)];
    [imageViews sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@"videoMM"]];
    [viewdd addSubview:imageViews];
    
    
    UILabel *desLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10, widthD-2-10, 10)];
    
    desLabel.textColor = RGB11(102, 102, 102);//[UIColor blackColor];
    desLabel.numberOfLines=2;
    desLabel.font = [UIFont systemFontOfSize:14];
    [viewdd addSubview:desLabel];
    NSString *summary = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"name"]];//[dicc objectForKey:@"name"];
    desLabel.text= summary;
    [desLabel sizeToFit];
    
    
    UILabel *expertLabel = [[UILabel alloc]initWithFrame:CGRectMake(5, CGRectGetMaxY(imageViews.frame)+10+36+10, 80, 16)];
    expertLabel.textAlignment = NSTextAlignmentLeft;
    expertLabel.textColor = RGB11(153,153,153);;//[UIColor lightGrayColor];
    expertLabel.font = [UIFont systemFontOfSize:14];
    expertLabel.text = [NSString stringWithFormat:@"%@",[dicc objectForKey:@"public_name"]];;//@"张德来专家";
    [viewdd addSubview:expertLabel];
    expertLabel.backgroundColor = [UIColor clearColor];
    
    
    NSString *nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
    if ([ readNumsUUIDA isEqualToString:[dicc objectForKey:@"uuid"]]) {
        //444444
        NSInteger num = [nums integerValue]+1;
        nums = [NSString stringWithFormat:@"%zd",num];
        [dicc setObject:nums forKey:@"readnum"];
        nums=[NSString stringWithFormat:@"%@", [dicc objectForKey:@"readnum"]];
        [_dataMuarry replaceObjectAtIndex:index withObject:dicc];
        readNumsUUIDA = @"0";
    }
    
    //gzz1115包裹后面的 阅读数量及阅读图片  readnum
    UIView *liangView = [[UIView alloc]initWithFrame:CGRectMake(widthD-50, 12, 40, 16)];
    liangView.backgroundColor = [UIColor clearColor];
    liangView.centerYy = expertLabel.centerYy;
    [viewdd addSubview:liangView];
    NSString  *readDa = nums;
    
    if (nums.length>=5) {
        
        NSInteger redNum = [nums integerValue];
        
        NSString  *one,*two;
        
        NSInteger  onee = redNum/10000;
        
        one = [NSString stringWithFormat:@"%zd",onee];
        
        
        
        NSInteger  twoo = redNum%10000;
        
        twoo = twoo/1000;
        
        two = [NSString stringWithFormat:@"%zd",twoo];
        
        if (one.length>1) {
            
            readDa=[NSString stringWithFormat:@"%@万",one];
            
        }else{
            
            readDa=[NSString stringWithFormat:@"%@.%@万",one,two];
            
        }
        
        
        
    }else{
        
        
        readDa=[NSString stringWithFormat:@"%@",nums ];
        
        
    }
    UIImageView *image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 2, 19, 12)];
    image1.image = [UIImage imageNamed:@"liulanShuliang"];
    [liangView addSubview:image1];
    
    UILabel *label2 = [[UILabel alloc]init];
    label2.frame = CGRectMake(CGRectGetMaxX(image1.frame)+5, 2, 30, 16);
    [liangView addSubview:label2];
    label2.font = [UIFont systemFontOfSize:12];
    label2.text = readDa;
    label2.textColor = RGB11(153,153,153);
    label2.backgroundColor = [UIColor clearColor];
    [label2 sizeToFit];
    label2.centerYy = image1.centerYy;
    
    CGFloat liangX = widthD-image1.width-label2.width-11;//gzz1129
    
    liangView.frame = CGRectMake(liangX, liangView.y, image1.width+label2.width+5, liangView.height);
    
    expertLabel.frame = CGRectMake(expertLabel.x, expertLabel.y, liangX-5, expertLabel.height);
    expertLabel.backgroundColor = [UIColor clearColor];
    
    viewdd.frame = CGRectMake(viewdd.frame.origin.x, viewdd.frame.origin.y, viewdd.frame.size.width, CGRectGetMaxY(expertLabel.frame)+5);
    viewdd.layer.cornerRadius = 2;
    viewdd.layer.masksToBounds = YES;
    return viewdd;
}



#pragma mark - SDCycleScrollViewDelegate

- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index
{

    [self topScrollreadRequestVideoType:index];
    
}



//上面的轮播
- (void)NewRequestScroll
{
    NSString *Strurl = [NSString stringWithFormat:@"%@videoRoll",expertAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
      if (sysTimestr.length>2) {
             dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
         }else{
             
             dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
         }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    WEAKSELFS
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
    
        
        if ([data[@"code"] isEqualToString:@"200"]) {
            
            TitleNewsArray = [[NSMutableArray alloc]init];
            
            NSArray * arr = [data objectForKey:@"data"];
            
            for (NSDictionary * ddic in [data objectForKey:@"data"]) {
                
                NSDictionary  *scrollImage=[self clearErrorData:ddic];

                KYModel * YZmodel = [[KYModel alloc]initWithDic:scrollImage];

                [TitleNewsArray addObject:YZmodel];
            }
            
            
            _mutArrimage=[NSMutableArray array];
            _titleArr = [[NSMutableArray alloc]init];
            _pathArr=[[NSMutableArray alloc]init];
            _uuidScrollArr = [[NSMutableArray alloc]init];
            for (NSDictionary * dic in arr) {
                
                
                NSString * path = [dic objectForKey:@"path"];
                NSString * uuidstr = [dic objectForKey:@"uuid"];

                NSString * titleStr = [dic objectForKey:@"name"];
                
                NSString * str1 = [[NSString alloc]init];
                
                if (titleStr.length >= 18) {
                    
                    str1 = [NSString stringWithFormat:@"%@...",[titleStr substringToIndex:18]];
                    
                }else{
                    
                    str1 = titleStr;
                }
                
                NSString * headImgStr = [dic objectForKey:@"imgpath"];
                NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageURL,headImgStr];
                
                [_titleArr addObject:str1];
                [_mutArrimage addObject:imagename];
                [_pathArr addObject:path];
                [_uuidScrollArr addObject:uuidstr];
                
            }
            
            if (_titleArr.count == 0 && _mutArrimage.count == 0) {
                
                cycleScrollView2.imageURLStringsGroup = _defaultArr;
                cycleScrollView2.titlesGroup = _defaultTitleArr;
                hightScrollpics = 0.0;
             dispatch_async(dispatch_get_main_queue(), ^{
                 [weakSelf makeUIVideo];
                 [weakSelf makeUiCollectionMOre];
             });
                
                [weakSelf dataRequestInterface];
            }else{
                hightScrollpics = SCREEN_WIDTH/2.0;
                dispatch_async(dispatch_get_main_queue(), ^{
                     [weakSelf makeUIVideo];
                     [weakSelf makeUiCollectionMOre];
               });
                [weakSelf dataRequestInterface];
                cycleScrollView2.titlesGroup = _titleArr;
                cycleScrollView2.imageURLStringsGroup = _mutArrimage;
            }
            
            
        }else{
            [self showHint:data[@"message"]];
        }
        
        
    } failure:^(NSError *error) {
        
        GDXZLog(@"%@",error);
        
           hightScrollpics = 0.0;
             [weakSelf makeUIVideo];
             [weakSelf makeUiCollectionMOre];
        
    }];

}



#pragma mark 顶部轮播视频 点击 阅读量加一的接口
-(void)topScrollreadRequestVideoType:(NSInteger)itemIndex {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",IMaUrl];
    //    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"]] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[_uuidScrollArr objectAtIndex:itemIndex]];
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            //gzz170216
            NSUserDefaults *des = [NSUserDefaults standardUserDefaults];
            [des setObject:@"noVideo" forKey:@"jingxuan_video"];// jingxuan_video 777
            _isBlock = @"yesB";//333333
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
            VideosDetailNewVC *videoDetail = [VideosDetailNewVC new];

            videoDetail.videoCommentUuid =  [NSString stringWithFormat:@"%@",[_uuidScrollArr objectAtIndex:itemIndex]];;
 
            videoDetail.isCollection = Collection;
//            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.typesVideo = @"type";
            
            __weak __typeof(self) weakSelf = self;
            videoDetail.reloadBlock = ^(NSString * str){
                readNumsUUIDA = str; //6666
                [weakSelf.myCollectionNoMore reloadData];
                
            };
            
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}



//字典 去掉 <>
-(NSDictionary *)clearErrorData:(NSDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        if ([[newDict objectForKey:key]isKindOfClass:[NSNull class]]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
}

@end


gzz20200416
#import "HomeNewVC.h"
#import "SessionViewController.h"//我的患者
#import "HositoryViewController.h"//公益咨询
#import "MYVipViewController.h"//我的VIP
#import "Newswebview.h"
#import "NewLoginViewController.h"
#import "NewLoginViewController.h"
#import "circleChatVC.h"
#import "SDCycleScrollView.h"
#import "SolvemessageTS.h"
#import "KYModel.h"
#import "homePageCell.h"
#import "SysteMessage.h"
#import "QuanChatController.h"//gzz0812
#import "meetingVC.h"
#import "CaseDicussionController.h"
#import "GanActivityViewController.h"
#import "ActivityDetail2Controller.h"
#import "zhiboVC.h"
#import "CaseDicDetailController.h"
#import "AdvertisementVC.h"
#import "GanJiaYuanVC.h"
#import "VideosDetailNewVC.h"
#import "VideoHomeController.h"
#import "bigSearchVC.h"
#import "wanshanVC.h"
#import "ganLiveVideVC.h"
#import "MainInfoController.h"
#import "AboutGandanController.h"
#import "ganbingDelectionVC.h"
#import "GzButtonSearch.h"
#import "MyAccountViewController.h"//我的账户
//#import "DignoseInfoController.h"//出诊计划
#import "CloseClinicVC.h"//新出诊计划
#import "myCollectionVC.h"//我的收藏
#import "myDownloadVC.h"//我的下载
#import "SYLifeManagerController.h"
#import "MyQr_codeVC.h"

#import "alwaysBankListVC.h"//常用银行卡
#import "SetHlepViewController.h"//常用设置
#import "KePuViewController.h"//患教学堂
#import "MyLibraryViewController.h"//诊疗指南
#import "PeriodicalViewController.h"//期刊杂志
#import "medicationNewVC.h"//药品助手
#import "toolVC.h"//常用工具
#import "VideoHomeController.h"//肝胆视频
#import "PatientVideoHomeController.h"//肝胆视频
#import "meetingVC.h"//肝胆会议
#import "CaseDicussionController.h"//病例交流
#import "circleChatVC.h"//经典病例
#import "ganDanKeJianVC.h"
#import "BonusMallsVC.h"
#import "MyBonusPointsVC.h"
#import "NewsgzzLastController.h"
#import "GanActivityViewController.h"
#import "XinshouJiaochengController.h"
#import "daaVC.h"
#import "PatientVideoHomeController.h"
#import "GanHospitalVC.h"
#import "allWebViewVC.h"
#import "GanHospitalVC.h"
#import "SignInView.h"
//测试保利威视
#import "changVideoVC.h"
#import "VideosDetailNewVC.h"
#import "gandanshixunViewController.h"

#import "MyKeyanVC.h"

#import "GzzHomeFourBtn.h"
#import "BonusMallsVC.h"
#import "UIButton+WebCache.h"

#import "NewPatientssViewController.h" //患者审核
#import "patientGroupVC.h"//患者分组
#import "SendMessageShowVC.h"//群发消息
#import "CloseClinicVC.h" //出停诊公告




#define WIDTH [[UIScreen mainScreen] bounds].size.width
#define HEIGHT [[UIScreen mainScreen] bounds].size.height
@interface HomeNewVC ()<SDCycleScrollViewDelegate,UITableViewDelegate,UITableViewDataSource,protocolToVC,UIScrollViewDelegate,UIAlertViewDelegate>{
    
    UIScrollView *scroll;
    UIPageControl *pagecont;
    UIView *viewce;
    BOOL isused;
    int speed;
    int scrollNum;
    int numeter;
    UIFont *titlefont;
    UIView *view;
    
    // 提示的小红花点
    
    UILabel * systemLabel;
    UILabel * patientLabrl;
    UILabel *PublicBfLabel;
    
    UILabel *suifangLabel;
    
    //判断是 那个的提示
    NSString * tishiTypeStr;
    //    NSString * tit
    
    SDCycleScrollView * cycleScrollView2;
    SolvemessageTS * solvemm;
    
    DBOperation * _Db;
    ContactssModel * contactsModel;
    
    //背景scrollview
    UIScrollView * scrollview;
    
    //未回答的公益资讯
    NSMutableArray * NewDataArr;
    float smallbgBtn_W;
    float smallbgBtn_H;
    NSUserDefaults * userdefault;
    NSMutableArray * newPatientArray;// 新的患者数据
    
    BOOL isYes;
    
    UIView * searchView;
    UITextField * text;
    
    UILabel * expertName;
    NSString * expertNameStr;
    UILabel * expertYiyuan;
    NSString * expertYiyuanStr;
    UILabel * expertZhi;
    NSString * expertZhiStr;
    UILabel * flowerCountLB;
    NSString * flowerCountLBStr;
    UILabel * patientCountLB;
    NSString * patientCountLBStr;
    UIImageView * imageViewPhoto;
    NSString * imageViewPhotoStr;
    UILabel * gongyiCountLB;
    NSString * gongyiCountLBStr;
    
    NSString * switchStr;
    NSString * jiaoyuStr;
    NSString * jiaoyuUrl;
    
    UIView * Bagview;
    
    UIScrollView *bgScrollview;
    UIView *lineOne;
    UIView *lineTwo;
    UIView *lineThree;
    UIView *lineFour;
    UIView *lineFive;
    UIView *lineSix;
    
    NSString * qrcode;
    NSString * officeName;
    UIButton * daohangBtn;
    
    BOOL  isHide; //是不是隐藏签到页面
    UIView *coverView;//背景全屏
    //    UIButton *leftItemBtn;//左边item的签到图标
    BOOL isSignIn;//今天是否签到 默认是 NO
    
    UIImageView * imaadd;
    NSString * isSign;
    
    UIImageView * aImage;
    UIImageView * bImage;
    UIImageView * cImage;
    NSString *sysTimestr;
    
    UIView * TestImage;
    NSString *newVersonStr;//线上版本号
    NSString *currentVersonStr;//当前设备上的版本号
    NSString *mustUpdateStr;//是否强更
    NSString *showHeroImg;//是否显示英雄榜图标，0不显示
    NSString *heroPath;
    UIImageView *imagwu;
     UIImageView *imagLibiary;//我的图书馆gzz20200203
    NSString *fromStr;//2弹框活动还是1网页活动
    NSString *activeNameStr;
    UIView *allCoverView;
    NSString *bookNum;
    NSString *patientnum;
    
    
//    gzz20200302 更多左边的那2个
    UIImageView *oneImagelMore;
    UILabel *oneLabelmore;
    
    UIImageView *twoImagelmore;
    UILabel *twoLabelmore;
    
    
}
@property(nonatomic,strong)NSMutableArray *mutArrimage;

@property(nonatomic,strong)NSMutableArray *titleArr;
@property(nonatomic,strong)NSMutableArray *pathArr;
@property(nonatomic,strong)NSArray *defaultArr;
@property(nonatomic,strong)NSArray *defaultTitleArr;
@property (nonatomic, strong) NSTimer *timer;
@property(nonatomic,strong)UITableView * bigTableView;
@property(nonatomic,strong)NSMutableArray * bigArray;
@property(nonatomic,strong)NSMutableArray * guangGaoArray;
@property(nonatomic,strong)NSString * imgageOne;
@property(nonatomic,strong)NSString * imgageTwo;
@property(nonatomic,strong)NSString * imgageThree;
@property(nonatomic,strong)NSString * imgagefour;
@property(nonatomic,strong)NSString * urlOne;
@property(nonatomic,strong)NSString * urlTwo;
@property(nonatomic,strong)NSString * urlThree;
@property(nonatomic,strong)NSString * urlFour;
@property(nonatomic,strong)SignInView * signInView;
@property(nonatomic,strong)AdvertisementVC * launchVC;

/*我的积分详情dic*/
@property (nonatomic, strong) NSMutableDictionary *myBonusPointDicMM;
@end

@implementation HomeNewVC

+(id)ShareDpHome{
    static  HomeNewVC * home ;
    if (home  ==  nil) {
        home  =[[HomeNewVC alloc]init];
    }
    return home;
    
}


- (void)viewDidLoad {
    [super viewDidLoad];
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    [defaults setObject:@"yes" forKey:@"bagviewShow"];
    [defaults synchronize];
    
    //  登陆的通知 ： 主要是看当在本届面的手才调用
    [[ NSNotificationCenter defaultCenter ] addObserver:self selector:@selector(MakeOutLogo) name:@"MAKEOUTLOGO" object:nil];
    
    //签到通知 gzz180725
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(signlistenerTodo:) name:@"signInNotice" object:nil];
 
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(ShowNewPatient) name:@"SHOWNEWPATIENTSQ" object:nil];


    
    if(DEVICE_IS_IPHONE4)
    {
        titlefont=[UIFont systemFontOfSize:16];
    }
    else if(DEVICE_IS_IPHONE5)
    {
        titlefont=[UIFont systemFontOfSize:16];
    }
    else if(DEVICE_IS_IPHONE6)
    {
        titlefont=[UIFont systemFontOfSize:16];
    }
    else if (DEVICE_IS_IPHONE6P)
    {
        titlefont=[UIFont systemFontOfSize:16];
    }
    
    isSignIn = NO;//gzz180711
    
    //  登陆的通知 ： 主要是看当在本届面的手才调用
    [[ NSNotificationCenter defaultCenter ] addObserver:self selector:@selector(MakeOutLogo) name:@"MAKEOUTLOGO" object:nil];
    
    self.navigationController.navigationBar.hidden = YES;
    
    [self getAdvertisementVC];
    [self maketishiLabel];
    
    //  [self requistData];
    [self getSystemTimeFromServer:@"three"];
    [self makeTv]; //gzz20200302
    [self makeNavigationView];
    
//    gzz0302
//    [self getSystemTimeFromServer:@"getIcon"];
    
}

//添加的使用引导
-(void)testtt{
    
    UIWindow *window = [UIApplication sharedApplication].keyWindow;
    //添加手势，点击跳转至银行卡列表页面，选择银行卡
    UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(tapActionbb)];
    
    TestImage = [[UIView alloc]initWithFrame:[UIScreen mainScreen].bounds];
    [window addSubview:TestImage];
    
    //添加手势，点击跳转至银行卡列表页面，选择银行卡
    UITapGestureRecognizer *tapc =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(tapActioncc)];
    
    aImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, kMainScreenHeight)];
    aImage.frame = [UIScreen mainScreen].bounds;
    aImage.image = [UIImage imageNamed:@"fourIntrouce.png"];
    aImage.userInteractionEnabled = YES;
    aImage.hidden = YES;
    [aImage addGestureRecognizer:tapc];
    [TestImage addSubview:aImage];
    
    
    //添加手势，点击跳转至银行卡列表页面，选择银行卡
    UITapGestureRecognizer *tapa =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(tapActionaa)];
    
    bImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, kMainScreenHeight)];
    bImage.frame = [UIScreen mainScreen].bounds;
    bImage.image = [UIImage imageNamed:@"twoIntrouce.png"];
    bImage.userInteractionEnabled = YES;
    bImage.hidden = YES;
    [bImage addGestureRecognizer:tapa];
    [TestImage addSubview:bImage];
    
    cImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, kMainScreenHeight)];
    cImage.image = [UIImage imageNamed:@"oneIntrouce.png"];
    cImage.frame = [UIScreen mainScreen].bounds;
    cImage.userInteractionEnabled = YES;
    [cImage addGestureRecognizer:tap];
    [TestImage addSubview:cImage];
}


-(void)tapActionaa{
    [bImage removeFromSuperview];
    aImage.hidden = NO;
    self.tabBarController.selectedIndex = 4;
}

-(void)tapActionbb{
 
    [cImage removeFromSuperview];
    bImage.hidden = NO;
 
}

-(void)tapActioncc{
    
    [aImage removeFromSuperview];
    [TestImage removeFromSuperview];
}

- (void)signlistenerTodo:(NSNotification *)notice{
    
    [ self getSystemTimeFromServer:@"three"];
}

#pragma mark ------新首页布局开始----- gzz20200302-
-(void)makeTv{
    CGFloat heighthheade = 0.0 ;
    if (DEVICE_IS_IPHONEX) {
        
        heighthheade =  123+64+277+30+8;
        
    }else{
        
        if (ScreenHeightSS == 667.000000) {
            heighthheade = 123+64+277+30+8+15;
        }
        if (ScreenHeightSS == 736.000000) {
            heighthheade =123+64+277+30+8+10;
        }else{
//            其他？gzz20200320  5 5s等
            heighthheade = 123+64+277+30+8+15+10+10+2;

        }
       
    }
    
//    kTopHeight
    
    UIView * headView = [[UIView alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:0 Y:0 width:320 height:heighthheade]];
    headView.backgroundColor = [UIColor colorWithRed:228/255.0 green:228/255.0 blue:228/255.0 alpha:1.0];

    if (DEVICE_IS_IPHONEX) {
//        headView.frame = CGRectMake(0, 0, kMainScreenWidth, 625);
        headView.frame = CGRectMake(0, 0, kMainScreenWidth, 625+13);
    }
//    newHomeBg
//    UIImageView * view1 = [[UIImageView alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:0 Y:0 width:320 height:123+64]];
    CGFloat heighth = 0.0 ;
    if (DEVICE_IS_IPHONEX) {
        
        heighth = 123+64+8;
        
    }else{
        
        if (ScreenHeightSS == 667.000000) {
             heighth = 123+64+8+15;
        }
        if (ScreenHeightSS == 736.000000) {
             heighth = 123+64+8+10;
        }
        else{
        //            其他？gzz20200320
             heighth = 123+64+8+15+10+10+2;
        }
       
    }
    
    UIImageView * view1 = [[UIImageView alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:0 Y:0 width:320 height:heighth]];
//    view1.backgroundColor = [UIColor yellowColor];
//    view1.image = [UIImage imageNamed:@"newBgHome"];
    view1.image = [UIImage imageNamed:@"newBgHomeone"];
    [headView addSubview:view1];
    
    
 
    
    CGFloat heighthhang = 0.0 ;
     if (DEVICE_IS_IPHONEX) {
         MCLog(@"SCREEN_HEIGHT===%lf",ScreenHeightSS);
         heighthhang = 111-30;

     }else{
         
         if (ScreenHeightSS == 667.000000) {
             heighthhang = 111-30+8;
         }
         if (ScreenHeightSS == 736.000000) {
             heighthhang = 111-30+5;
         }
         else{
              //            其他？gzz20200320
               heighthhang = 111-30+8+5+8;
            }
        
     }
    UIImageView * imageView =[[UIImageView alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:252-4 Y:heighthhang width:70 height:33]];

    imageView.image = [UIImage imageNamed:@"homepageHang"];
    [headView addSubview:imageView];
    
    //快速导航按钮
    daohangBtn  =[[UIButton alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:252-4 Y:heighthhang width:70 height:40]];
    daohangBtn.layer.masksToBounds = YES;
    daohangBtn.layer.cornerRadius = daohangBtn.frame.size.height/2.0;
    daohangBtn.backgroundColor = [UIColor clearColor];
    [daohangBtn addTarget:self action:@selector(daohangJump:) forControlEvents:(UIControlEventTouchUpInside)];
    [headView addSubview:daohangBtn];
    
    
    
    if (DEVICE_IS_IPHONEX) {
        
        imageViewPhoto = [[UIImageView alloc]initWithFrame:CGRectMake(15, 95, 70, 70)];
        imageViewPhoto.layer.cornerRadius = 35;
        imageViewPhoto.layer.masksToBounds = YES;

    }else{
        
        imageViewPhoto = [[UIImageView alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:15 Y:10+55 width:60 height:60]];
        imageViewPhoto.layer.cornerRadius = imageViewPhoto.frame.size.height/2.0;
        imageViewPhoto.layer.masksToBounds = YES;
    }
    
    imageViewPhoto.backgroundColor = [UIColor whiteColor];
    NSString * photoStr = [NSString stringWithFormat:@"%@%@",IMaUrl,imageViewPhotoStr];
    [imageViewPhoto sd_setImageWithURL:[NSURL URLWithString:photoStr] placeholderImage:[UIImage imageNamed:@"MyDefaultImage@2x"]];
    [headView addSubview:imageViewPhoto];
    
    
    
    UIButton * button;
    
    if (DEVICE_IS_IPHONEX) {
        
        button = [[UIButton alloc]initWithFrame: CGRectMake(15, 95, 70, 70)];
        button.layer.cornerRadius = 35;
        button.layer.masksToBounds = YES;
    }else{
        
        button = [[UIButton alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:15 Y:10+55 width:60 height:60]];
        button.layer.cornerRadius = button.frame.size.height/2.0;
        button.layer.masksToBounds = YES;
    }
    
    button.backgroundColor = [UIColor clearColor];
    [button addTarget:self action:@selector(pushMainInfo) forControlEvents:(UIControlEventTouchUpInside)];
    [headView addSubview:button];
    
    
    
//    expertName = [[UILabel alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:83 Y:10+55 width:237 height:20]];
    expertName = [[UILabel alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:83 Y:10+55 width:237 height:20]];
    expertName.text = expertNameStr;
    expertName.textColor = WHITECOLORS;
    expertName.textAlignment = NSTextAlignmentLeft;
    
    
    [headView addSubview:expertName];
    
//    expertYiyuan = [[UILabel alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:83 Y:10+55+25 width:237 height:15]];
    expertYiyuan = [[UILabel alloc]initWithFrame:[FrameAutoScaleLFL CGLFLMakeX:83 Y:10+55+25 width:237 height:15]];
    expertYiyuan.text = @"专家工作室";//expertYiyuanStr;
    expertYiyuan.textAlignment = NSTextAlignmentLeft;

    expertYiyuan.textColor = WHITECOLORS;
    [headView addSubview:expertYiyuan];

    
    if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5) {
        
        expertName.font = SYSTEMFONTNEW(17.0);
        patientCountLB.font = SYSTEMFONTNEW(12.0);
        flowerCountLB.font = SYSTEMFONTNEW(12.0);
        gongyiCountLB.font = SYSTEMFONTNEW(12.0);
        expertYiyuan.font = SYSTEMFONTNEW(14.0);
        expertZhi.font = SYSTEMFONTNEW(12.0);
        
        imageViewPhoto.frame = [FrameAutoScaleLFL CGLFLMakeX:15 Y:10+60 width:60 height:60];
        button.frame = [FrameAutoScaleLFL CGLFLMakeX:15 Y:10+60 width:60 height:60];
        button.layer.cornerRadius = button.frame.size.height/2.0;
        
        
        expertName.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+60 width:237 height:20];
        expertYiyuan.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+60+25 width:237 height:15];
        
        expertName.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+60+10 width:237 height:20];
        expertYiyuan.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+60+25+10 width:237 height:15];
        
        
    }else{
        
        expertName.font = SYSTEMFONTNEW(18.0);
        patientCountLB.font = SYSTEMFONTNEW(14.0);
        flowerCountLB.font = SYSTEMFONTNEW(14.0);
        gongyiCountLB.font = SYSTEMFONTNEW(14.0);
        expertYiyuan.font = SYSTEMFONTNEW(14.0);
        expertZhi.font = SYSTEMFONTNEW(14.0);
        
        imageViewPhoto.frame = [FrameAutoScaleLFL CGLFLMakeX:15 Y:10+52 width:60 height:60];
        button.frame = [FrameAutoScaleLFL CGLFLMakeX:15 Y:10+52 width:60 height:60];
        

        expertName.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+52+10 width:237 height:20];
        expertYiyuan.frame = [FrameAutoScaleLFL CGLFLMakeX:83 Y:10+52+25+10 width:237 height:15];
        
        if (DEVICE_IS_IPHONEX) {
            
            imageViewPhoto.frame = CGRectMake(15, 95, 70, 70);
            imageViewPhoto.layer.cornerRadius = 35;
            imageViewPhoto.layer.masksToBounds = YES;
            
            button.frame = CGRectMake(15, 95, 70, 70);
            button.layer.cornerRadius = 35;
            button.layer.masksToBounds = YES;
             
//            gzz20200416 x及以后
            imageView.y = imageView.y +7;
            imageView.height = 40;//高度 导航的高度
        }
        
        
    }
    
    
//    CGFloat Y = CGRectGetMaxY(imageViewPhoto.frame)+12;
    CGFloat Y ; //3.4.9版本 gzz20200324针对亮亮的iphone 7手机 是不是有点懵逼了 masonry
    if (DEVICE_IS_IPHONE6) {
      Y = CGRectGetMaxY(imageViewPhoto.frame)+12+10+5;
//往下微调 //            gzz20200416
        imageViewPhoto.y = imageViewPhoto.y +15;
        expertName.y = imageViewPhoto.y +10;
        expertYiyuan.y = expertYiyuan.y +15;
        
    }else{

        Y = CGRectGetMaxY(imageViewPhoto.frame)+12;

    }
    
    float smallbgBtn_W = SCREEN_WIDTH/4;
    float smallbgBtn_H = 108;
    if (DEVICE_IS_IPHONEX) {
        smallbgBtn_H = 108;

     }else{
         
         if (ScreenHeightSS == 667.000000) {
            smallbgBtn_H = 108;
         }
         if (ScreenHeightSS == 736.000000) {
            smallbgBtn_H = 108;
         }
         else{
            smallbgBtn_H = 68;
            Y = CGRectGetMaxY(imageViewPhoto.frame)+20;

        }
        
     }
    
    
    NSInteger rank = 4;
    CGFloat rankMargin = 0;

    NSArray *oneArrayWords = @[@"患者审核",@"患者分组",@"群发消息",@"出诊计划"];
    NSArray *oneArrayImages = @[@"pati_shenhe",@"pati_fenzu",@"qunfa_message",@"chuzhen_plan"];
    for (int i = 0; i<oneArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);

        UIButton  *Btn1 = [[GzzHomeFourBtn alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        Btn1.backgroundColor = [UIColor yellowColor];
        [Btn1 setTitle:oneArrayWords[i] forState:0];
        [Btn1 setTitleColor:[UIColor whiteColor] forState:0];
        [Btn1 setImage:[UIImage imageNamed:oneArrayImages[i]] forState:0];
        Btn1.tag = 20200302+i;
        [headView addSubview:Btn1];
        [Btn1 addTarget:self action:@selector(fourtopClick:) forControlEvents:UIControlEventTouchUpInside];
        
        if (i == 0) {
            suifangLabel.frame = CGRectMake(smallbgBtn_W-20, 15, 10, 10);
            [Btn1 addSubview:suifangLabel];
        }
      
    }
    
    

    NSArray*imagearr=@[@"newyeHuan@2x",@"shoufei_consult_wei",@"newyeXun@2x",@"newyePin@2x",@"newyeGuan@2x",@"jifen_shop",@"n",@"",@"home_more"];;

    NSArray *titlearr=@[@"我的患者",@"收费咨询",@"公益咨询",@"肝胆视频",@"我的图书馆",@"积分商城",@"",@"",@"更多"];

    smallbgBtn_W=(SCREEN_WIDTH-2)/3;
    smallbgBtn_H=(SCREEN_WIDTH-2)/3*(204/213.0f);
    
    
//    smallbgBtn_H *3;
    patientLabrl.frame = CGRectMake( smallbgBtn_W*(150/213.0f)-2*smallbgBtn_W+6 ,smallbgBtn_H*(33/204.0f)-smallbgBtn_H*2-9 ,  10, 10 );
    PublicBfLabel.frame = CGRectMake(smallbgBtn_W*(150/213.0f)+6, smallbgBtn_H*(33/204.0f)-smallbgBtn_H*2-9 ,  10, 10);
    
    
    for(int i=0;i<9;i++)
    {
        
        UIButton *smallbgBtn=[[UIButton alloc]initWithFrame:CGRectMake((smallbgBtn_W+1)*(i%3), floor(i/3.0f)*(smallbgBtn_H+1)+CGRectGetMaxY(view1.frame), smallbgBtn_W, smallbgBtn_H)];
        [smallbgBtn addTarget:self action:@selector(buttonClick:) forControlEvents:(UIControlEventTouchUpInside)];
        smallbgBtn.tag = 300+i;
        smallbgBtn.backgroundColor = [UIColor whiteColor];

        UIImageView *smallimage=[[UIImageView alloc]initWithFrame:CGRectMake((smallbgBtn_W-smallbgBtn_W*(100/204.0f))/2, smallbgBtn_H*(16/204.0f), smallbgBtn_W*(100/204.0f), smallbgBtn_W*(100/204.0f))];
        
        if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5) {
            
            smallimage.frame = CGRectMake((smallbgBtn_W-smallbgBtn_W*(100/204.0f))/2, smallbgBtn_H*(24/204.0f), smallbgBtn_W*(100/204.0f), smallbgBtn_W*(100/204.0f));
        }else if (DEVICE_IS_IPHONE6){
            
            smallimage.frame = CGRectMake((smallbgBtn_W-smallbgBtn_W*(100/204.0f))/2, smallbgBtn_H*(26/204.0f), smallbgBtn_W*(100/204.0f), smallbgBtn_W*(100/204.0f));
        }else if (DEVICE_IS_IPHONE6P){
            
            smallimage.frame = CGRectMake((smallbgBtn_W-smallbgBtn_W*(100/204.0f))/2, smallbgBtn_H*(28/204.0f), smallbgBtn_W*(100/204.0f), smallbgBtn_W*(100/204.0f));
        }

        UILabel *smallabel=[[UILabel alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(smallimage.frame)+4, smallbgBtn_W, 20)];
        
        if (i == 6 ) {
            oneImagelMore = smallimage;
            oneLabelmore = smallabel;
        }
        if (i == 7) {
              twoImagelmore = smallimage;
              twoLabelmore = smallabel;
        }
        
        smallimage.image=[UIImage imageNamed:imagearr[i]];
        //smallimage.backgroundColor = [UIColor redColor];
        smallabel.text=titlearr[i];
        if (DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE4) {
            
            smallabel.font = [UIFont systemFontOfSize:14.0];
            smallabel.frame = CGRectMake(0, CGRectGetMaxY(smallimage.frame)+8, smallbgBtn_W, 20);
        }else if (DEVICE_IS_IPHONE6){
            
            smallabel.font = [UIFont systemFontOfSize:16.0];
            smallabel.frame = CGRectMake(0, CGRectGetMaxY(smallimage.frame)+12, smallbgBtn_W, 20);
        }else if (DEVICE_IS_IPHONE6P){
            
            smallabel.font = [UIFont systemFontOfSize:16.0];
            smallabel.frame = CGRectMake(0, CGRectGetMaxY(smallimage.frame)+12, smallbgBtn_W, 20);
        }
        
        smallabel.textAlignment = NSTextAlignmentCenter;

        [smallbgBtn addSubview:smallimage];
        if (i==1) {
        imagwu  = [[UIImageView alloc]initWithFrame:CGRectMake(smallbgBtn_W-50, 0, 50, 50)];
        imagwu.image =[UIImage imageNamed:@"wuzhe"];
              [smallbgBtn addSubview:imagwu];
          }
        
        if (i==4) {
             imagLibiary  = [[UIImageView alloc]initWithFrame:CGRectMake(smallbgBtn_W-50, 0, 50, 50)];
             imagLibiary.image =[UIImage imageNamed:@"feiyanZT"];
             [smallbgBtn addSubview:imagLibiary];
         }
         
        
        [smallbgBtn addSubview:smallabel];
        [smallbgBtn addSubview:patientLabrl];
        [smallbgBtn addSubview:PublicBfLabel];
        smallbgBtn.backgroundColor = [UIColor whiteColor];
        if (i == 0) {
//            UIImageView *leftTop = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 25, 25)];
//            leftTop.image = [UIImage imageNamed:@"leftTopimage"];
//
            UIImageView *leftTop = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 20, 20)];

            leftTop.image = [UIImage imageNamed:@"rightImagenn"];//rightImagenn rightImagenn

            [smallbgBtn addSubview:leftTop];
        }
        if (i == 2) {
//                UIImageView *leftTop = [[UIImageView alloc]initWithFrame:CGRectMake(smallbgBtn.width-40, -1, 40, 40)];
//                leftTop.image = [UIImage imageNamed:@"rightTopimage"];
            UIImageView *leftTop = [[UIImageView alloc]initWithFrame:CGRectMake(smallbgBtn.width-20, 0, 20, 20)];

            leftTop.image = [UIImage imageNamed:@"leftImagesnn"];

                [smallbgBtn addSubview:leftTop];
            }
            
        
        
        
        [headView addSubview:smallbgBtn];
      }
    
    
    
    
    _bigTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, HEIGHT-49) style:(UITableViewStylePlain)];
    
    if (DEVICE_IS_IPHONEX) {
        
        _bigTableView.frame = CGRectMake(0, 0, kMainScreenWidth, kMainScreenHeight-20);
    }
    
    _bigTableView.delegate = self;
    _bigTableView.dataSource = self;
    _bigTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _bigTableView.tableFooterView = [[UIView alloc]init];
    _bigTableView.showsVerticalScrollIndicator = NO;
    _bigTableView.tableHeaderView = headView;
    [self.view addSubview:_bigTableView];
    
    
    
}

#pragma mark fourtopClick  患者审核  分组 群发 出诊计划
-(void)fourtopClick:(UIButton *)btn{
    NSInteger tag = btn.tag;
    
    if (tag == 20200302) {
        NewPatientssViewController *vc= [NewPatientssViewController new];
        vc.sysMessage = @"sysMessage";
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
    if (tag == 20200303) {
         patientGroupVC *vc= [patientGroupVC new];
         vc.hidesBottomBarWhenPushed = YES;
         [self.navigationController pushViewController:vc animated:YES];
     }
    if (tag == 20200304) {
          SendMessageShowVC *vc= [SendMessageShowVC new];
          vc.hidesBottomBarWhenPushed = YES;
          [self.navigationController pushViewController:vc animated:YES];
      }

    if (tag == 20200305) {
          CloseClinicVC *vc= [CloseClinicVC new];
          vc.hidesBottomBarWhenPushed = YES;
          [self.navigationController pushViewController:vc animated:YES];
      
     }

    
}
-(void)btnClickedOperations{
    
    
    Bagview  = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, kMainScreenHeight+64+49)];
    Bagview.backgroundColor = RGB11(235, 236, 238);
    
    
    
    CGRect Temp = Bagview.frame;
    Temp.origin.x = [UIScreen mainScreen].bounds.size.width;
    Bagview.frame = Temp;
    Temp.origin.x = 0;
    [UIView animateWithDuration:0.2 animations:^{
        Bagview.frame = Temp;
    }];
    
    
    UIWindow *window = [UIApplication sharedApplication].keyWindow;
    [window addSubview:Bagview];
    
    UIButton * btn = [[UIButton alloc]initWithFrame:CGRectMake(10, 30, 24, 24)];
    //    btn.backgroundColor = [UIColor blackColor];
    //    [btn addTarget:self action:@selector(hidenBagview) forControlEvents:(UIControlEventTouchUpInside)];
    
    if (DEVICE_IS_IPHONEX) {
        
        btn.frame = CGRectMake(10, 52, 24, 24);
    }
    [btn setImage:[UIImage imageNamed:@"gdback"] forState:(UIControlStateNormal)];
    [Bagview addSubview:btn];
    
    UIButton * btn9 = [[UIButton alloc]initWithFrame:CGRectMake(10, 20, 44, 44)];
    
    if (DEVICE_IS_IPHONEX) {
        
        btn9.frame = CGRectMake(10, 42, 44, 44);
    }
    
    btn9.backgroundColor = [UIColor clearColor];
    [btn9 addTarget:self action:@selector(hidenBagview) forControlEvents:(UIControlEventTouchUpInside)];
    //    [btn9 setImage:[UIImage imageNamed:@"gdback"] forState:(UIControlStateNormal)];
    [Bagview addSubview:btn9];
    
    UILabel * label = [[UILabel alloc]initWithFrame:CGRectMake((kMainScreenWidth-120)/2, 20, 120, 44)];
    //    label.backgroundColor = [UIColor blackColor];
    if (DEVICE_IS_IPHONEX) {
        
        label.frame = CGRectMake((kMainScreenWidth-120)/2, 33, 120, 64);
    }
    label.text = @"快速导航";
    label.font = [UIFont systemFontOfSize:20];
    label.textAlignment = NSTextAlignmentCenter;
    label.textColor = RedColor;
    [Bagview addSubview:label];
    
    
    bgScrollview = [[UIScrollView alloc]initWithFrame:CGRectMake(0, SafeAreaTopHeight, kMainScreenWidth, kMainScreenHeight-SafeAreaBottomHeight)];
    bgScrollview.contentSize = CGSizeMake(kMainScreenWidth, kMainScreenHeight);
    bgScrollview.backgroundColor = [UIColor colorWithRed:235 green:236 blue:238 alpha:1.0];
    
    bgScrollview.delegate= self;
    bgScrollview.showsVerticalScrollIndicator =NO;
    bgScrollview.showsHorizontalScrollIndicator =NO;
    [Bagview addSubview:bgScrollview];
    
    [self makeUISearch];
}

//首页导航跳转
-(void)daohangJump:(UIButton*)btnt{
    
    
    btnt.userInteractionEnabled = NO;
    [self btnClickedOperations];
    
}


#pragma mark 界面展示
- (void)makeUISearch{
    
    float smallbgBtn_W = SCREEN_WIDTH/4;
    float smallbgBtn_H = 108;
    NSInteger rank = 4;
    CGFloat rankMargin = 0;
    CGFloat rowMargin = 0;
    //1234
    NSArray *oneArrayWords = @[@"我的账户",@"出诊计划",@"我的收藏",@"我的下载",@"二维码",@"常用银行卡",@"常用设置",@"我的积分",@"积分商城"];
    NSArray *oneArrayImages = @[@"hangMycount",@"hangHua",@"hangCang",@"hangZai",@"hangMa",@"hangCa",@"hangZhi",@"qiandaoji",@"jifenshang"];
    for (int i = 0; i<oneArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn1 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn1 setTitle:oneArrayWords[i] forState:0];
        [Btn1 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn1 setImage:[UIImage imageNamed:oneArrayImages[i]] forState:0];
        Btn1.tag = 170000+i;
        [bgScrollview addSubview:Btn1];
        [Btn1 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == oneArrayWords.count-1) {
            lineOne = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn1.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineOne];
        }
    }
    
    //56789
    NSArray *twoArrayWords = @[@"我的患者",@"公益咨询",@"患教学堂",@"患教视频",@"常见问题"];
    NSArray *twoArrayImages = @[@"hangHuan",@"hangXun",@"hangTang",@"fenleiVideo",@"questionimage@2x"];
    for (int i = 0; i<twoArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineOne.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn2 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn2 setTitle:twoArrayWords[i] forState:0];
        [Btn2 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn2 setImage:[UIImage imageNamed:twoArrayImages[i]] forState:0];
        Btn2.tag = 170000+i+9;
        [bgScrollview addSubview:Btn2];
        [Btn2 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == twoArrayWords.count-1) {
            lineTwo = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn2.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineTwo];
        }
    }
    
    //10 11 12 13 14 15
    NSArray *threeArrayWords = @[@"诊疗指南",@"期刊杂志",@"万方医学",@"肝胆课件",@"药品助手",@"常用工具",@"丙肝药物作用"];
    NSArray *threeArrayImages = @[@"hangNan",@"hangZa",@"hangXue",@"daohangkj",@"hangShou",@"hangGong",@"zuoyongImage@2x"];
    for (int i = 0; i<threeArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineTwo.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn3 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn3 setTitle:threeArrayWords[i] forState:0];
        [Btn3 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn3 setImage:[UIImage imageNamed:threeArrayImages[i]] forState:0];
        if (i==5) {
            Btn3.titleLabel.font = [UIFont systemFontOfSize:13];
        }
        
        //        Btn3.tag = 170000+i+4+5;
        Btn3.tag = 170000+i+9+5;
        //        Btn3.backgroundColor = [UIColor redColor];
        [bgScrollview addSubview:Btn3];
        [Btn3 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == threeArrayWords.count-1) {
            lineThree = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn3.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineThree];
        }
        
    }
    
    
    //16 17 18 19
    NSArray *fourArrayWords = @[@"肝胆视频",@"精品课程",@"肝胆会议",@"肝胆学院",@"肝病检测",@"肝胆医院"];
    NSArray *fourArrayImages = @[@"hangVideo",@"jingpindaohang",@"hangYi",@"hangGan",@"hangCe",@"hangYuan"];
    for (int i = 0; i<fourArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineThree.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn4 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn4 setTitle:fourArrayWords[i] forState:0];
        [Btn4 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn4 setImage:[UIImage imageNamed:fourArrayImages[i]] forState:0];
        Btn4.tag = 170000+i+9+5+7;
        [bgScrollview addSubview:Btn4];
        [Btn4 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == fourArrayWords.count-1) {
            lineFour = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn4.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineFour];
        }
        
    }
    
    //20 21 22
    NSArray *fiveArrayWords = @[@"互动圈",@"病例交流",@"病例分享"];
    NSArray *fiveArrayImages = @[@"hangQuan",@"hangLiu",@"hangLi",];
    
    for (int i = 0; i<fiveArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineFour.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn5 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn5 setTitle:fiveArrayWords[i] forState:0];
        [Btn5 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn5 setImage:[UIImage imageNamed:fiveArrayImages[i]] forState:0];
        Btn5.tag = 170000+i+9+5+7+6;
        [bgScrollview addSubview:Btn5];
        [Btn5 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == fiveArrayWords.count-1) {
            lineFive = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn5.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineFive];
        }
        
    }
    
    NSArray *sixArrayWords = @[@"科研项目",@"肝胆资讯",@"临床招募",@"肝胆活动",@"新手教程"];
    NSArray *sixArrayImages = @[@"hangYan",@"hangZi",@"hangMu",@"hangDong",@"hangChen"];
    
    for (int i = 0; i<sixArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineFive.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn6 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        [Btn6 setTitle:sixArrayWords[i] forState:0];
        [Btn6 setTitleColor:[UIColor lightGrayColor] forState:0];
        [Btn6 setImage:[UIImage imageNamed:sixArrayImages[i]] forState:0];
        Btn6.tag = 170000+i+9+5+7+6+3;
        [bgScrollview addSubview:Btn6];
        [Btn6 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
        if (i == sixArrayWords.count-1) {
            lineSix = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(Btn6.frame), SCREEN_WIDTH, 0.5) bgColor:RGB11(239, 239, 239)];
            [bgScrollview addSubview:lineSix];
            
        }
        
    }
    
    NSArray *sevArrayWords = @[@"乙路前行",@"谈丙话肝",@"病例大赛",@"知识大赛",@"肝愿为你",@"080中国研究"];
    NSArray *sevArrayImages = @[@"yiImage@2x",@"bingImage@2x",@"beiImage@2x",@"zhishiImage@2x",@"ganyuanweini",@"boweilai"];
    
    for (int i = 0; i<sevArrayWords.count; i++) {
        CGFloat X = (i % rank) * (smallbgBtn_W + rankMargin);
        NSUInteger Y = CGRectGetMaxY(lineSix.frame) + (i / rank) * (smallbgBtn_H +rowMargin);
        if (i/3.0>1.0) {
            Y = Y-20;
        }
        UIButton  *Btn7 = [[GzButtonSearch alloc]initWithFrame:CGRectMake(X, Y, smallbgBtn_W, smallbgBtn_H)];
        if (i == sevArrayWords.count-1) {
            
            UIImageView * image = [[UIImageView alloc]initWithFrame:CGRectMake(X+18, Y+25, 92/1.5, 40/1.5)];
            
            image.image = [UIImage imageNamed:sevArrayImages[i]];
            
            [Btn7 setTitle:sevArrayWords[i] forState:0];
            [Btn7 setTitleColor:[UIColor lightGrayColor] forState:0];
            [Btn7 setImage:[UIImage imageNamed:@""] forState:0];
            Btn7.tag = 170000+i+9+5+7+6+3+5;
            [bgScrollview addSubview:Btn7];
            [bgScrollview addSubview:image];
            [Btn7 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
            
            bgScrollview.contentSize = CGSizeMake(0, CGRectGetMaxY(Btn7.frame)+60);
            
            
        }else{
            
            
            [Btn7 setTitle:sevArrayWords[i] forState:0];
            [Btn7 setTitleColor:[UIColor lightGrayColor] forState:0];
            [Btn7 setImage:[UIImage imageNamed:sevArrayImages[i]] forState:0];
            Btn7.tag = 170000+i+9+5+7+6+3+5;
            [bgScrollview addSubview:Btn7];
            [Btn7 addTarget:self action:@selector(BtnClickSearchQuick:) forControlEvents:UIControlEventTouchUpInside];
            
        }
        
        
    }
    
}

-(void)hidenBagview{
    
    Bagview.hidden = YES;
    daohangBtn.userInteractionEnabled = YES;
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    [defaults setObject:@"no" forKey:@"bagviewShow"];
    [defaults synchronize];
}

-(void)BtnClickSearchQuick:(UIButton *)btn{
    Bagview.hidden = YES;
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    [defaults setObject:@"yes" forKey:@"bagviewShow"];
    
    [defaults synchronize];
    
    
    switch (btn.tag) {
            
        case 170000:{
            
            MyAccountViewController * accountVC = [[MyAccountViewController alloc]init];
            accountVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:accountVC animated:YES];
        }
            break;
        case 170001:{
            
            //            DignoseInfoController * DignoseVC = [[DignoseInfoController alloc]init];
            //            DignoseVC.hidesBottomBarWhenPushed = YES;
            //            [self.navigationController pushViewController:DignoseVC animated:YES];
            CloseClinicVC * DignoseVC = [[CloseClinicVC alloc]init];
            DignoseVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:DignoseVC animated:YES];
        }
            break;
        case 170002:{
            
            myCollectionVC * collVC = [[myCollectionVC alloc]init];
            collVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:collVC animated:YES];
        }
            break;
            
        case 170003:{
            
            myDownloadVC * downVC = [[myDownloadVC alloc]init];
            downVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:downVC animated:NO];
        }
            break;
            
            
        case 170004:{
            
//        Qr_codeViewController * codeVC = [[Qr_codeViewController alloc]init];
          
             MyQr_codeVC *codeVC = [MyQr_codeVC new] ;
            codeVC.nameStr = expertNameStr;
            codeVC.photoStr = imageViewPhotoStr;
            codeVC.zhichengStr = expertZhiStr;
            codeVC.hospatialStr = expertYiyuanStr;
            codeVC.keshiStr = officeName;
            
            codeVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:codeVC animated:YES];
        }
            break;
        case 170005:{
            
            alwaysBankListVC * bankVC = [[alwaysBankListVC alloc]init];
            bankVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:bankVC animated:YES];
            
        }
            break;
        case 170006:{
            
            SetHlepViewController * helpVC = [[SetHlepViewController alloc]init];
            helpVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:helpVC animated:YES];
        }
            break;
        case 170007:{
            
            MyBonusPointsVC * helpVC = [[MyBonusPointsVC alloc]init];
            helpVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:helpVC animated:YES];
        }
            break;
        case 170008:{
            
            BonusMallsVC * helpVC = [[BonusMallsVC alloc]init];
            helpVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:helpVC animated:YES];
            
        }
            break;
        case 170009:{
            
            [[NSNotificationCenter defaultCenter] postNotificationName:@"Patient" object:nil];
        }
            break;
        case 170010:{
            
            HositoryViewController *hosi = [[HositoryViewController alloc] init];
            
            hosi.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:hosi animated:YES];
            
        }
            break;
        case 170011:{
            
            KePuViewController * keVC = [[KePuViewController alloc]init];
            keVC.hidesBottomBarWhenPushed = YES;
            keVC.bigDaoHang = @"daohang";
            [self.navigationController pushViewController:keVC animated:YES];
        }
            break;
        case 170012:{
            
            PatientVideoHomeController * libraryVC  = [[PatientVideoHomeController alloc]init];
            libraryVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:libraryVC animated:YES];
        }
            break;
        case 170013:{
            
            //常见问题
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"常见问题";
//            vc.STraPath = @"http://wx.igandan.com/QaA/toindex?share=1";
            vc.STraPath = @"http://wx.igandan.com/QaA/toindex";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170014:{
            
            MyLibraryViewController * libraryVC  = [[MyLibraryViewController alloc]init];
            libraryVC.title = @"诊疗指南";
            libraryVC.bigDaoHang = @"daohang";
            libraryVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:libraryVC animated:YES];
        }
            break;
        case 170015:{
            
            PeriodicalViewController * PeriodVC  = [[PeriodicalViewController alloc]init];
            PeriodVC.title = @"期刊杂志";
            PeriodVC.bigDaoHang = @"daohang";
            PeriodVC.feiWanFang = @"yes";
            PeriodVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodVC animated:YES];
        }
            break;
        case 170016:{
            
            PeriodicalViewController * PeriodicalVC  = [[PeriodicalViewController alloc]init];
            PeriodicalVC.title = @"期刊杂志";
            PeriodicalVC.bigDaoHang = @"daohang";
            PeriodicalVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodicalVC animated:YES];
        }
            break;
        case 170017:{
            
            ganDanKeJianVC * kejianVC  = [[ganDanKeJianVC alloc]init];
            kejianVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:kejianVC animated:YES];
        }
            break;
        case 170018:{
            
            medicationNewVC * medical  = [[medicationNewVC alloc]init];
            medical.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:medical animated:YES];
        }
            break;
        case 170019:{
            
            toolVC * toolvcd  = [[toolVC alloc]init];
            toolvcd.bigDaoHang = @"daohang";
            toolvcd.title = @"常用工具";
            toolvcd.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:toolvcd animated:YES];
        }
            break;
        case 170020:{
            
            daaVC * medicaVC  = [[daaVC alloc]init];
            medicaVC.title = @"丙肝DAA和其他药物相互作用在线查询";
            medicaVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:medicaVC animated:YES];
        }
            break;
            
        case 170021:{
            
            VideoHomeController * PeriodVC  = [[VideoHomeController alloc]init];
            PeriodVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodVC animated:YES];
        }
            break;
        case 170022:{
            
            changVideoVC * PeriodVC  = [[changVideoVC alloc]init];
            PeriodVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodVC animated:YES];
        }
            break;
        case 170023:{
            
            meetingVC * PeriodicalVC  = [[meetingVC alloc]init];
            PeriodicalVC.bigDaoHang = @"daohang";
            PeriodicalVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodicalVC animated:YES];
        }
            break;
        case 170024:{
            
            ganLiveVideVC * vc = [[ganLiveVideVC alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170025:{
            
            ganbingDelectionVC *hosi = [[ganbingDelectionVC alloc] init];
            hosi.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:hosi animated:YES];
            
        }
            break;
        case 170026:{
            
            GanHospitalVC * ganvc = [[GanHospitalVC alloc]init];
            ganvc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:ganvc animated:YES];
            
        }
            break;
        case 170027:{
            
            GanJiaYuanVC * vc = [[GanJiaYuanVC alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170028:{
            
            CaseDicussionController *hosi = [[CaseDicussionController alloc] init];
            hosi.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:hosi animated:YES];
            
        }
            break;
        case 170029:{
            
            circleChatVC *circleVC = [[circleChatVC alloc] init];
            circleVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:circleVC animated:YES];;
        }
            break;
        case 170030:{
            
//            [[NSNotificationCenter defaultCenter] postNotificationName:@"ComeInKY" object:nil];
            
            MyKeyanVC *vc= [MyKeyanVC new];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            
        }
            break;
        case 170031:{
            
            NewsgzzLastController * newsvc = [[NewsgzzLastController alloc]init];
            newsvc.bigDaoHang = @"daohang";
            newsvc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:newsvc animated:YES];
        }
            break;
        case 170032:{
            
            GanActivityViewController * ganvc = [[GanActivityViewController alloc]init];
            ganvc.hidesBottomBarWhenPushed = YES;
            ganvc.isZhaomu = @"yes";
            [self.navigationController pushViewController:ganvc animated:YES];
        }
            break;
        case 170033:{
            
            GanActivityViewController *hosi = [[GanActivityViewController alloc] init];
            hosi.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:hosi animated:YES];
            
        }
            break;
        case 170034:{
            
            XinshouJiaochengController *jiaochengVC = [[XinshouJiaochengController alloc] init];
            jiaochengVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:jiaochengVC animated:YES];;
        }
            break;
        case 170035:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"乙路前行";
            vc.STraPath = @"http://wx.igandan.com/yilu/toindex?share=1";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            return;
            
        }
            break;
        case 170036:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"谈丙话肝";
            vc.STraPath = @"http://wx.igandan.com/bing/index?share=1";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170037:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"病例大赛";
            vc.STraPath = @"http://www.igandan.com/web/blds/toindex";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            return;
            return;
        }
            break;
        case 170038:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"知识大赛";
            vc.STraPath = @"http://www.igandan.com/web/yishi/toindex";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170039:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"肝愿为你";
            vc.STraPath = @"http://ylxb.igandan.com/bmspatient/toindex";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 170040:{
            
            allWebViewVC * vc = [[allWebViewVC alloc]init];
            vc.titleSyr = @"080中国研究";
            vc.STraPath = @"http://080.igandan.com/bmsexpert/toindex";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        default:
            break;
    }
    
}


//创建假的navgationbar
-(void)makeNavigationView{
    
    UITapGestureRecognizer *aTapGR = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapGRAction)];
    
    searchView  = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kMainScreenWidth, 64)];
    searchView.backgroundColor = [UIColor clearColor];
    searchView.alpha = 1.0;
    
    imaadd   = [[UIImageView alloc]initWithFrame:CGRectMake(10, 30, 23, 23)];
    
    if ([isSign isEqualToString:@"1"]) {
        
        imaadd.image = [UIImage imageNamed:@"yqiandao@2x"];
        
    }else{
        
        imaadd.image = [UIImage imageNamed:@"wqiandao@2x"];
    }
    
    
    [searchView addSubview:imaadd];
    
    UIButton * btnadd = [[UIButton alloc]initWithFrame:CGRectMake(10, 30, 23, 23)];
    [btnadd addTarget:self action:@selector(qiandaoAction) forControlEvents:(UIControlEventTouchUpInside)];
    [btnadd setTitleColor:[UIColor whiteColor] forState:(UIControlStateNormal)];
    [searchView addSubview:btnadd];
    
    
    UILabel * label = [[UILabel alloc]initWithFrame:CGRectMake(53, 25, kMainScreenWidth-66-40, 34)];
    
    label.backgroundColor = [UIColor whiteColor];
    label.layer.borderWidth = 0.5f;
    label.layer.borderColor = [UIColor grayColor].CGColor;
    label.layer.cornerRadius = 6;
    label.layer.masksToBounds = YES;
    label.userInteractionEnabled = YES;
    [label addGestureRecognizer:aTapGR];
    [searchView addSubview:label];
    
    
    
    UIImageView * ima = [[UIImageView alloc]initWithFrame:CGRectMake(58, 32, 20, 20)];
    ima.image = [UIImage imageNamed:@"sousuo"];
    [searchView addSubview:ima];
    
    text = [[UITextField alloc]initWithFrame:CGRectMake(58+5+20, 25, kMainScreenWidth-66-40-30, 34)];
    text.backgroundColor = [UIColor clearColor];
    
    if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5) {
        
        text.placeholder = @"搜索视频、用药、指南、万方医学等";
        
    }else{
        
        text.placeholder = @"搜索视频、用药、指南、万方医学等";
    }
    
    
    text.font = SYSTEMFONTNEW(14.0);
    text.userInteractionEnabled = NO;
    [searchView addSubview:text];
    
    UIImageView * ima1 = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-33, 30, 23, 23)];
    ima1.image = [UIImage imageNamed:@"shouyeMessage@2x"];
    [searchView addSubview:ima1];
    
    UIButton * btn = [[UIButton alloc]initWithFrame:CGRectMake(kMainScreenWidth-35, 19, 35, 35)];
    [btn addTarget:self action:@selector(buttonIterm) forControlEvents:(UIControlEventTouchUpInside)];
    [btn setTitleColor:[UIColor whiteColor] forState:(UIControlStateNormal)];
    [searchView addSubview:btn];
    
    [ima1 addSubview:systemLabel];
    
    if (DEVICE_IS_IPHONEX) {
        
        searchView.frame  = CGRectMake(0, 0, kMainScreenWidth, 88);
        imaadd.frame = CGRectMake(10, 30+24, 23, 23);
        btnadd.frame = CGRectMake(10, 30+24, 23, 23);
        label.frame = CGRectMake(53, 25+24, kMainScreenWidth-66-40, 34);
        ima.frame = CGRectMake(58, 32+24, 20, 20);
        text.frame = CGRectMake(58+5+20, 25+24, kMainScreenWidth-66-40-30, 34);
        ima1.frame = CGRectMake(kMainScreenWidth-33, 30+24, 23, 23);
        btn.frame = CGRectMake(kMainScreenWidth-35, 19+24, 35, 35);
    }
    
    [self.view addSubview:searchView];
    
}

//懒加载 我的积分详情dic
- (NSMutableDictionary *)myBonusPointDicMM{
    
    if (!_myBonusPointDicMM) {
        _myBonusPointDicMM = [NSMutableDictionary dictionary];
    }
    return _myBonusPointDicMM;
    
}

//签到事件
#pragma mark 左边item gzz180710
-(void)qiandaoAction{
    
    if (isSignIn) {
        
        UIAlertController *alertController= [UIAlertController alertControllerWithTitle:@"温馨提醒" message:@"今日已签到，每日只能签到一次。\n请明日继续哦~"  preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"关闭" style:UIAlertActionStyleCancel handler:nil];
        [alertController addAction:cancelAction];
        [self presentViewController:alertController animated:YES completion:nil];
        
    }else{
        
        [self getSystemTimeFromServerNow];
        
    }
}
-(void)getSystemTimeFromServerNow{
//        [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf addbonus:sysTimestr];

        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf addbonus:sysTimestr];
        
    }];
    
}
//添加积分
-(void)addbonus:(NSString *)timestr{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString * str = [NSString stringWithFormat:@"%@addBonusPoints",IMAURLAPP];
    NSString * typeStr = [NSString stringWithFormat:@"%@",@"1"];
    
    [GDNetworkManager addBonusPostWithURLString:str typeString:typeStr dateString:timestr  parameters:nil success:^(NSDictionary *data) {
        
        NSString *code = [NSString stringWithFormat:@"%@",data[@"code"]];
        
        if ([code isEqualToString:@"1"]) {
            
            isSignIn = YES;
            NSUserDefaults * stan = [NSUserDefaults standardUserDefaults];
            [stan setValue:@"yiqian" forKey:@"qiandao"];
            //            [leftItemBtn setImage:[UIImage imageNamed:@"signInOK"]forState:UIControlStateNormal];
            imaadd.image = [UIImage imageNamed:@"yqiandao@2x"];
            [self.myBonusPointDicMM addEntriesFromDictionary:data];
            [self  signInviewshow];
            
            
        } if ([code isEqualToString:@"201"]) {
            isSignIn = YES;
            
            NSUserDefaults * stan1 = [NSUserDefaults standardUserDefaults];
            [stan1 setValue:@"yiqian" forKey:@"qiandao"];
            UIAlertController *alertController= [UIAlertController alertControllerWithTitle:@"温馨提醒" message:@"今日已签到，每日只能签到一次。\n请明日继续哦~"  preferredStyle:UIAlertControllerStyleAlert];
            
            UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"关闭" style:UIAlertActionStyleCancel handler:nil];
            [alertController addAction:cancelAction];
            [self presentViewController:alertController animated:YES completion:nil];
            //
            
        }
        else{
        }
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
    } failure:^(NSError *error) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}
#pragma mark 签到页面展示
-(void)signInviewshow{
    if (self.myBonusPointDicMM.count>0) {
        coverView.hidden = NO;
        self.signInView.hidden = NO;
        [self.signInView initData:self.myBonusPointDicMM];
        
    }
}

#pragma mark 覆盖背景
- (SignInView *)signInView{
    if (!_signInView) {
        
        UIWindow *window = [UIApplication sharedApplication].keyWindow;
        UIView *view11 = [[UIView alloc] init];
        coverView = view11;
        [window addSubview:view11];
        view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //
        view11.backgroundColor = [UIColor colorWithWhite:0.0f alpha: 0.6];
        
        
        CGRect rect = CGRectMake(15, 64+110, SCREEN_WIDTH-30, 300);
        _signInView = [[SignInView alloc] initViewWithFrame:rect];
        //        [_signInView initData:[NSDictionary dictionary]];
        [view11 addSubview:_signInView];
        _signInView.backgroundColor = RGB11(255, 161, 24);
        _signInView.layer.cornerRadius = 8.0;
        _signInView.layer.masksToBounds = YES;
        WEAKSELFS
        _signInView.deleImageBlock = ^(NSString *str) {
            MCLog(@"strstr%@",str);
            [weakSelf jumpUrl];
        };
        
        
        UIImageView *bgimgvv0 = [UIImageView creatImageviewWithFrame:CGRectMake(SCREEN_WIDTH-40, CGRectGetMinY(_signInView.frame)-70, 20, 70) imaged:[UIImage imageNamed:@"friendDelBack"]];
        [view11 addSubview:bgimgvv0];
        
        UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-80, CGRectGetMinY(_signInView.frame)-70, 60, 70)];
        [view11 addSubview:btn];
        btn.backgroundColor = [UIColor clearColor];
        [btn addTarget:self action:@selector(tapGestured2) forControlEvents:UIControlEventTouchUpInside];
        
        
    }
    return _signInView;
}

- (void)tapGestured2 //签到页面消失
{
    
    [UIView animateWithDuration:0.2 animations:^{
        
        MClogFunc
        //        if (isHide) {
        coverView.hidden = YES;
        self.signInView.hidden = YES;
        
        isHide = NO;
     
        
    } completion:^(BOOL finished) {
        coverView.hidden = YES;
        self.signInView.hidden = YES;
        MClogFunc
        isHide = NO;
        
        //        [coverView removeFromSuperview];
        
    }];
    
}

#pragma mark jumpUrl url跳转
-(void)jumpUrl{
    if (self.myBonusPointDicMM.count>0) {
        coverView.hidden = YES;
        self.signInView.hidden = YES;
        NSString *url  = [NSString stringWithFormat:@"%@",[self.myBonusPointDicMM[@"news"]  objectForKey:@"path"]];
        AboutGandanController * vc = [[AboutGandanController alloc]init];
        vc.fromWhat = @"gaishow";//展示详情
        vc.htmlPath = [NSString stringWithFormat:@"%@%@",ImageUrl,url];
        vc.title = @"新闻详情";
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
    
}


-(void)pushMainInfo{
    
    MainInfoController * vc = [[MainInfoController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}

-(void)tapGRAction{
    
    bigSearchVC * searchVC = [[bigSearchVC alloc]init];
    searchVC.fromWhat = @"shouye";
    searchVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:searchVC animated:YES];
}



-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    if ([switchStr isEqualToString:@"1"]) {
        
        if (_guangGaoArray.count>0) {
            
            return _bigArray.count+1;
            
        }else{
            
            return _bigArray.count;
        }
        
    }else{
        
        
        return _bigArray.count;
    }
    
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
    if ([switchStr isEqualToString:@"1"]) {
        
        NSMutableArray * datArr = [[NSMutableArray alloc]init];
        //        NSString * countStr = [[NSString alloc]init];
        NSMutableString * muStr = [[NSMutableString alloc]init];
        for (int i =0 ; i<_guangGaoArray.count; i++) {
            
            NSString * str = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"position"]];
            
            [datArr addObject:str];
            [muStr appendString:str];
        }
        
        NSLog(@"返回图片的个数%@",muStr);
        
        
        if (_guangGaoArray.count>0) {
            
            if (indexPath.row==0) {
                
                static NSString *cellIn=@"cellVideoEssential";
                UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellIn ];
                if (!cell) {
                    cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIn];
                }
                
                cell.backgroundColor = [UIColor colorWithRed:239/255.0 green:239/255.0 blue:239/255.0 alpha:1.0];
                
                for (UIView *view in cell.contentView.subviews) {
                    [view removeFromSuperview];
                }
                
                UIButton * buttonOne = [[UIButton alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*10, kMainScreenWidth-10, kMainScreenWidth/640.0f*90)];
                [buttonOne addTarget:self action:@selector(oneClick) forControlEvents:(UIControlEventTouchUpInside)];
                UIImageView * imageViewOne = [[UIImageView alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*10, kMainScreenWidth-10, kMainScreenWidth/640.0f*90)];
                
                UIButton * buttonTwo = [[UIButton alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*110, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90)];
                [buttonTwo addTarget:self action:@selector(twoClick) forControlEvents:(UIControlEventTouchUpInside)];
                UIImageView * imageViewTwo = [[UIImageView alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*110, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90)];
                
                
                UIButton * buttonThree = [[UIButton alloc]initWithFrame:CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*110, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90)];
                [buttonThree addTarget:self action:@selector(threeClick) forControlEvents:(UIControlEventTouchUpInside)];
                UIImageView * imageViewThree = [[UIImageView alloc]initWithFrame:CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*110, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90)];
                
                
                UIButton * buttonFour = [[UIButton alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*210, kMainScreenWidth-10, kMainScreenWidth/640.0f*90)];
                [buttonFour addTarget:self action:@selector(fourClick) forControlEvents:(UIControlEventTouchUpInside)];
                UIImageView * imageViewFour = [[UIImageView alloc]initWithFrame:CGRectMake(5, kMainScreenWidth/640.0f*210, kMainScreenWidth-10, kMainScreenWidth/640.0f*90)];
                
                if (_guangGaoArray.count==4) {
                    
                    NSLog(@"四个广告条完全显示");
                    [cell.contentView addSubview:imageViewOne];
                    [cell.contentView addSubview:buttonOne];
                    [cell.contentView addSubview:imageViewTwo];
                    [cell.contentView addSubview:buttonTwo];
                    [cell.contentView addSubview:imageViewThree];
                    [cell.contentView addSubview:buttonThree];
                    [cell.contentView addSubview:imageViewFour];
                    [cell.contentView addSubview:buttonFour];
                    
                    [imageViewOne sd_setImageWithURL:[NSURL URLWithString:_imgageOne] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                    [imageViewTwo sd_setImageWithURL:[NSURL URLWithString:_imgageTwo] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                    [imageViewThree sd_setImageWithURL:[NSURL URLWithString:_imgageThree] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                    [imageViewFour sd_setImageWithURL:[NSURL URLWithString:_imgagefour] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                    
                }else if (_guangGaoArray.count == 3){
                    
                    if ([muStr isEqualToString:@"123"]) {
                        
                        [imageViewOne sd_setImageWithURL:[NSURL URLWithString:_imgageOne] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                        [imageViewTwo sd_setImageWithURL:[NSURL URLWithString:_imgageTwo] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        [imageViewThree sd_setImageWithURL:[NSURL URLWithString:_imgageThree] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        
                        [cell.contentView addSubview:imageViewOne];
                        [cell.contentView addSubview:buttonOne];
                        [cell.contentView addSubview:imageViewTwo];
                        [cell.contentView addSubview:buttonTwo];
                        [cell.contentView addSubview:imageViewThree];
                        [cell.contentView addSubview:buttonThree];
                        
                        
                        
                    }else if ([muStr isEqualToString:@"234"]){
                        
                        buttonTwo.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        imageViewTwo.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);

                        buttonThree.frame = CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        imageViewThree.frame = CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        
                        
                        buttonFour.frame =CGRectMake(5, kMainScreenWidth/640.0f*110, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        imageViewFour.frame = CGRectMake(5, kMainScreenWidth/640.0f*110, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        [cell.contentView addSubview:imageViewTwo];
                        [cell.contentView addSubview:buttonTwo];
                        [cell.contentView addSubview:imageViewThree];
                        [cell.contentView addSubview:buttonThree];
                        [cell.contentView addSubview:imageViewFour];
                        [cell.contentView addSubview:buttonFour];
                        
                        //                    [imageViewOne sd_setImageWithURL:[NSURL URLWithString:_imgageOne] placeholderImage:[UIImage imageNamed:@"shouyeNewBigtu"]];
                        [imageViewTwo sd_setImageWithURL:[NSURL URLWithString:_imgageTwo] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        [imageViewThree sd_setImageWithURL:[NSURL URLWithString:_imgageThree] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        [imageViewFour sd_setImageWithURL:[NSURL URLWithString:_imgagefour] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                    }
                    
                }else if (_guangGaoArray.count == 2){
                    
                    
                    if ([muStr isEqualToString:@"14"]){
                        
                        [cell.contentView addSubview:imageViewOne];
                        [cell.contentView addSubview:buttonOne];
                        
                        [cell.contentView addSubview:imageViewFour];
                        [cell.contentView addSubview:buttonFour];
                        
                        buttonFour.frame = CGRectMake(5, kMainScreenWidth/640.0f*110, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        imageViewFour.frame = CGRectMake(5, kMainScreenWidth/640.0f*110, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        [imageViewOne sd_setImageWithURL:[NSURL URLWithString:_imgageOne] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                        [imageViewFour sd_setImageWithURL:[NSURL URLWithString:_imgagefour] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                        
                    }else if ([muStr isEqualToString:@"23"]){
                        
                        
                        buttonTwo.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        imageViewTwo.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        buttonThree.frame = CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        imageViewThree.frame = CGRectMake((kMainScreenWidth-15)/2+10, kMainScreenWidth/640.0f*10, (kMainScreenWidth-15)/2, kMainScreenWidth/640.0f*90);
                        
                        [cell.contentView addSubview:imageViewTwo];
                        [cell.contentView addSubview:buttonTwo];
                        [cell.contentView addSubview:imageViewThree];
                        [cell.contentView addSubview:buttonThree];
                        
                        [imageViewTwo sd_setImageWithURL:[NSURL URLWithString:_imgageTwo] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        [imageViewThree sd_setImageWithURL:[NSURL URLWithString:_imgageThree] placeholderImage:[UIImage imageNamed:@"homepageRefre"]];
                        
                        
                    }
                    
                    
                }else if (_guangGaoArray.count == 1){
                    
                    NSLog(@"%@",muStr);
                    if ([muStr isEqualToString:@"1"]) {
                        
                        [cell.contentView addSubview:imageViewOne];
                        [cell.contentView addSubview:buttonOne];
                        [imageViewOne sd_setImageWithURL:[NSURL URLWithString:_imgageOne] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                        
                        
                        
                    }else if ([muStr isEqualToString:@"4"]){
                        
                        imageViewFour.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        buttonFour.frame = CGRectMake(5, kMainScreenWidth/640.0f*10, kMainScreenWidth-10, kMainScreenWidth/640.0f*90);
                        
                        [cell.contentView addSubview:imageViewFour];
                        [cell.contentView addSubview:buttonFour];
                        [imageViewFour sd_setImageWithURL:[NSURL URLWithString:_imgagefour] placeholderImage:[UIImage imageNamed:@"homepageRefreTwo"]];
                        
                    }
                }else{
                    
                    return cell;
                }
                
                
                return cell;
                
            }else{
                
                
                homePageCell *cell =[tableView dequeueReusableCellWithIdentifier:@"HOMECELL"];
                
                if (!cell) {
                    
                    cell = [[homePageCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"identPatient"];
                }
                
                cell.delegate = self;
                if (_bigArray.count>0) {
                    
                    [cell setDic:[_bigArray objectAtIndex:indexPath.row-1]];
                }
                
                
                cell.backgroundColor = [UIColor colorWithRed:239/255.0 green:239/255.0 blue:239/255.0 alpha:1.0];
                return cell;
                
            }
            
            
        }else{
            
            
            homePageCell *cell =[tableView dequeueReusableCellWithIdentifier:@"HOMECELL"];
            
            if (!cell) {
                
                cell = [[homePageCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"identPatient"];
            }
            
            cell.delegate = self;
            if (_bigArray.count>0) {
                
                [cell setDic:[_bigArray objectAtIndex:indexPath.row]];
            }
            
            
            cell.backgroundColor = [UIColor colorWithRed:239/255.0 green:239/255.0 blue:239/255.0 alpha:1.0];
            return cell;
        }
        
        
        
    }else{
        
        homePageCell *cell =[tableView dequeueReusableCellWithIdentifier:@"HOMECELL"];
        
        if (!cell) {
            
            cell = [[homePageCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"identPatient"];
        }
        
        cell.delegate = self;
        if (_bigArray.count>0) {
            
            [cell setDic:[_bigArray objectAtIndex:indexPath.row]];
        }
        
        
        cell.backgroundColor = [UIColor colorWithRed:239/255.0 green:239/255.0 blue:239/255.0 alpha:1.0];
        return cell;
        
        
    }
    
}

-(void)oneClick{
    
    GDXZLog(@"%@",_guangGaoArray);
    if (_urlOne.length>1) {
        
        AboutGandanController * searchVC = [[AboutGandanController alloc]init];
        searchVC.fromWhat = @"yes";
        searchVC.htmlPath = _urlOne;
        searchVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:searchVC animated:YES];
        //        NSLog(@"%@",_urlOne);
    }
    
}
-(void)twoClick{
    
    if (_urlTwo.length>1) {
        
        AboutGandanController * searchVC = [[AboutGandanController alloc]init];
        searchVC.fromWhat = @"yes";
        searchVC.htmlPath = _urlTwo;
        searchVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:searchVC animated:YES];
        //        NSLog(@"%@",_urlTwo);
    }
}
-(void)threeClick{
    
    if (_urlThree.length>1) {
        
        AboutGandanController * searchVC = [[AboutGandanController alloc]init];
        searchVC.fromWhat = @"yes";
        searchVC.htmlPath = _urlThree;
        searchVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:searchVC animated:YES];
        //        NSLog(@"%@",_urlThree);
    }
}
-(void)fourClick{
    
    if (_urlFour.length>1) {
        
        AboutGandanController * searchVC = [[AboutGandanController alloc]init];
        searchVC.fromWhat = @"yes";
        searchVC.htmlPath = _urlFour;
        searchVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:searchVC animated:YES];
        //        NSLog(@"%@",_urlFour);
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if ([switchStr isEqualToString:@"1"]) {
        //开关打开
        
        if (_guangGaoArray.count>0) {
            
            NSMutableArray * datArr = [[NSMutableArray alloc]init];
            NSMutableString * muStr = [[NSMutableString alloc]init];
            
            for (int i =0 ; i<_guangGaoArray.count; i++) {
                
                NSString * str = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"position"]];
                
                [datArr addObject:str];
                [muStr appendString:str];
            }
            
            //开关开了，但是有广告，显示会议直播等高度
            if (indexPath.row == 0) {
                
                if (_guangGaoArray.count == 4) {
                    
                    return kMainScreenWidth/640.0f*300;
                    
                }else if (_guangGaoArray.count == 3){
                    
                    return kMainScreenWidth/640.0f*200;
                    
                }else if (_guangGaoArray.count == 2){
                    
                    
                    if ([muStr isEqualToString:@"14"]) {
                        
                        return kMainScreenWidth/640.0f*200;
                        
                        
                    }else {
                        
                        return kMainScreenWidth/640.0f*100;
                        
                    }
                }else{
                    
                    return kMainScreenWidth/640.0f*100;
                }
                
                
            }else{
                
                //有广告情况下，除去第零行，其他行高
                return kMainScreenWidth/640.0f*100;
            }
            
        }else{
            
            //开关开了，但是没广告，显示会议直播等高度
            return kMainScreenWidth/640.0f*100;
        }
        
    }else{
        
        //开关关闭,显示会议直播等高度
        return kMainScreenWidth/640.0f*100;
    }
    
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    if ([switchStr isEqualToString:@"1"]) {
        
        if (_guangGaoArray.count>0) {
            
            if (indexPath.row == 0) {
                
                GDXZLog(@"您点击了丙肝继续教育");
                
                
            }else{

                NSDictionary * dic = [_bigArray objectAtIndex:indexPath.row-1];
                NSString * btypeStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"btype"]];
                
                if ([btypeStr isEqualToString:@"6"]) {
                    ActivityDetail2Controller  *acD = [ActivityDetail2Controller new];
                    acD.STraPath = [dic objectForKey:@"path"];
                    acD.TitTEXtStr = [dic objectForKey:@"title"];
                    acD.StrImager = [dic objectForKey:@"imgpath"];
                    acD.concerText = @"肝胆活动";// @"gzz0810";//gzz0902
                    acD.activityUuid = [dic objectForKey:@"article_uuid"];
                    acD.hidesBottomBarWhenPushed = YES;
                    [self.navigationController pushViewController:acD animated:YES];
                }else if ([btypeStr isEqualToString:@"2"]){
                    
                    zhiboVC * vc = [[zhiboVC alloc]init];
                    vc.boUrl = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
                    vc.ddic = dic;
                    vc.hidesBottomBarWhenPushed = YES;
                    [self.navigationController pushViewController:vc animated:YES];
                }else if ([btypeStr isEqualToString:@"4"]){
                    
                    CaseDicDetailController *caseDic = [CaseDicDetailController new];
                    caseDic.hidesBottomBarWhenPushed = YES;
                    caseDic.caseDicUUid = [dic objectForKey:@"article_uuid"];
                    caseDic.isMyself = @"yes";
                    [self.navigationController pushViewController:caseDic animated:YES];
                }else if ([btypeStr isEqualToString:@"8"]){
                    
//                    VideoDetailController * detailVC = [[VideoDetailController alloc]init];
                    //1112视频跳转
                    VideosDetailNewVC *detailVC = [VideosDetailNewVC new];
                    NSString * contentStr = [dic objectForKey:@"content"];
                    NSArray * arr = [contentStr componentsSeparatedByString:@"★"];
                    detailVC.videoDescribeStr = arr[0];
                    detailVC.titleName = arr[1];
                    detailVC.readnum = arr[2];
                    detailVC.imagePath = arr[3];
                    detailVC.public_name = arr[4];
                    detailVC.videoPath = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
                    detailVC.isShouYe = @"yes";
                    //                    NSLog(@"%@",arr);
                    detailVC.videoCommentUuid =[NSString stringWithFormat:@"%@",[dic objectForKey:@"article_uuid"]];
                    //                    detailVC.contentID = [NSString stringWithFormat:@"%@",[dic objectForKey:@"content"]];
                    detailVC.hidesBottomBarWhenPushed = YES;
                    [self.navigationController pushViewController:detailVC animated:YES];
                }
                
            }
            
        }else{
            
            if (_bigArray.count<=0) {
                
                return;
            }
            
            NSDictionary * dic = [_bigArray objectAtIndex:indexPath.row];
            NSString * btypeStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"btype"]];
            
            if ([btypeStr isEqualToString:@"6"]) {
                ActivityDetail2Controller  *acD = [ActivityDetail2Controller new];
                acD.STraPath = [dic objectForKey:@"path"];
                acD.TitTEXtStr = [dic objectForKey:@"title"];
                acD.StrImager = [dic objectForKey:@"imgpath"];
                acD.concerText = [dic objectForKey:@"content"];// @"gzz0810";//gzz0902
                acD.activityUuid = [dic objectForKey:@"article_uuid"];
                acD.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:acD animated:YES];
            }else if ([btypeStr isEqualToString:@"2"]){
                
                zhiboVC * vc = [[zhiboVC alloc]init];
                vc.boUrl = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
                vc.ddic = dic;
                vc.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:vc animated:YES];
            }else if ([btypeStr isEqualToString:@"4"]){
                
                CaseDicDetailController *caseDic = [CaseDicDetailController new];
                caseDic.hidesBottomBarWhenPushed = YES;
                caseDic.caseDicUUid = [dic objectForKey:@"article_uuid"];
                caseDic.isMyself = @"yes";
                [self.navigationController pushViewController:caseDic animated:YES];
            }else if ([btypeStr isEqualToString:@"8"]){
                
                //1112视频跳转
                VideosDetailNewVC *detailVC = [VideosDetailNewVC new];
//                VideoDetailController * detailVC = [[VideoDetailController alloc]init];
                NSString * contentStr = [dic objectForKey:@"content"];
                NSArray * arr = [contentStr componentsSeparatedByString:@"★"];
                detailVC.videoDescribeStr = arr[0];
                detailVC.titleName = arr[1];
                detailVC.readnum = arr[2];
                detailVC.imagePath = arr[3];
                detailVC.public_name = arr[4];
                detailVC.videoPath = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
                detailVC.isShouYe = @"yes";
                detailVC.videoCommentUuid =[NSString stringWithFormat:@"%@",[dic objectForKey:@"article_uuid"]];
                detailVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:detailVC animated:YES];
            }
        }
        
        
        
        
    }else{
        
        NSDictionary * dic = [_bigArray objectAtIndex:indexPath.row];
        NSString * btypeStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"btype"]];
        
        if ([btypeStr isEqualToString:@"6"]) {
            ActivityDetail2Controller  *acD = [ActivityDetail2Controller new];
            acD.STraPath = [dic objectForKey:@"path"];
            acD.TitTEXtStr = [dic objectForKey:@"title"];
            acD.StrImager = [dic objectForKey:@"imgpath"];
            acD.concerText = [dic objectForKey:@"content"];// @"gzz0810";//gzz0902
            acD.activityUuid = [dic objectForKey:@"article_uuid"];
            acD.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:acD animated:YES];
        }else if ([btypeStr isEqualToString:@"2"]){
            
            zhiboVC * vc = [[zhiboVC alloc]init];
            vc.boUrl = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
            vc.ddic = dic;
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }else if ([btypeStr isEqualToString:@"4"]){
            
            CaseDicDetailController *caseDic = [CaseDicDetailController new];
            caseDic.hidesBottomBarWhenPushed = YES;
            caseDic.caseDicUUid = [dic objectForKey:@"article_uuid"];
            caseDic.isMyself = @"yes";
            [self.navigationController pushViewController:caseDic animated:YES];
        }else if ([btypeStr isEqualToString:@"8"]){
            
            //1112视频跳转
             VideosDetailNewVC *detailVC = [VideosDetailNewVC new];
//            VideoDetailController * detailVC = [[VideoDetailController alloc]init];
            NSString * contentStr = [dic objectForKey:@"content"];
            NSArray * arr = [contentStr componentsSeparatedByString:@"★"];
            detailVC.videoDescribeStr = arr[0];
            detailVC.titleName = arr[1];
            detailVC.readnum = arr[2];
            detailVC.imagePath = arr[3];
            detailVC.public_name = arr[4];
            detailVC.videoPath = [NSString stringWithFormat:@"%@",[dic objectForKey:@"path"]];
            detailVC.isShouYe = @"yes";
            detailVC.videoCommentUuid =[NSString stringWithFormat:@"%@",[dic objectForKey:@"article_uuid"]];
            detailVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:detailVC animated:YES];
        }
        
    }
    
}
//tableview button的代理方法
-(void)pushToVC:(NSString *)type{
    
    if ([type isEqualToString:@"2"]) {
        
        self.tabBarController.selectedIndex = 3;
        
    }else if ([type isEqualToString:@"6"]){
        
        GDXZLog(@"肝胆活动");
        GanActivityViewController * vc = [[GanActivityViewController alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }else if ([type isEqualToString:@"4"]){
        
        GDXZLog(@"病例讨论");
        CaseDicussionController * vc = [[CaseDicussionController alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }else if ([type isEqualToString:@"8"]){
        
        VideoHomeController * vc = [[VideoHomeController alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
        
    }
    
}

//创建 红点提示的三个label
-(void)maketishiLabel{
    
    PublicBfLabel =[[UILabel alloc]initWithFrame:CGRectMake(3,3, 10, 10)];
    PublicBfLabel.layer.masksToBounds = YES;
    PublicBfLabel.layer.cornerRadius = 5;
    PublicBfLabel.backgroundColor =[UIColor redColor];
    
    patientLabrl =[[UILabel alloc]initWithFrame:CGRectMake(3, 3, 10, 10)];
    patientLabrl.layer.masksToBounds = YES;
    patientLabrl.layer.cornerRadius = 5;
    patientLabrl.backgroundColor =[UIColor redColor];
    
    systemLabel =[[UILabel alloc]initWithFrame:CGRectMake(19, 0, 8, 8)];
    systemLabel.layer.masksToBounds = YES;
    systemLabel.layer.cornerRadius = 4;
    //    systemLabel.backgroundColor =[UIColor whiteColor];
    systemLabel.backgroundColor = RGB11(239, 253, 3);
    
    
    
      suifangLabel =[[UILabel alloc]initWithFrame:CGRectMake(3, 3, 10, 10)];
      suifangLabel.layer.masksToBounds = YES;
      suifangLabel.layer.cornerRadius = 5;
      suifangLabel.backgroundColor =[UIColor redColor];
      suifangLabel.hidden = YES;
    
    
    PublicBfLabel.hidden  = YES;
    systemLabel.hidden  = YES;
    patientLabrl.hidden  = YES;
    
    // 用于显示 l消息提示的label
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(TshilabrlShow:) name:@"TISHILASHOW" object:nil];
    
    
}
//红点消息通知
-(void)TshilabrlShow:(NSNotification *)notification{
    
    /*
     传参的时候 只传一个  key  - value  先判断 类型 在判断状态
     
     定义好字段   0 没有   1 有
     systeam    系统消息
     patient    我的患者
     public     公益咨询
     */
    
    NSDictionary * notifiDic  =[[NSMutableDictionary alloc]initWithDictionary:notification.userInfo];
    //    NSLog(@"%@ == ",notification);
    if (notifiDic.allKeys.count >  0) {
        tishiTypeStr =[NSString stringWithFormat:@"%@",notifiDic.allKeys[0]];
    }
    
    if ([tishiTypeStr isEqualToString:@"systeam"]) {
        tishiTypeStr =[notifiDic objectForKey:@"systeam"];
        if ([tishiTypeStr isEqualToString:@"1"]) {
            systemLabel.hidden = NO;
        }else{
            systemLabel.hidden = YES;
        }
        
    }else if ([tishiTypeStr isEqualToString:@"patient"]){
        tishiTypeStr =[notifiDic objectForKey:@"patient"];
        if ([tishiTypeStr isEqualToString:@"1"]) {
            [[NSNotificationCenter defaultCenter] postNotificationName:@"RELOADHISTORYTV" object:nil];
            
            patientLabrl.hidden = NO;
        }else{
            
            if (newPatientArray.count>0) {
                
                patientLabrl.hidden = NO;
                
            }else{
                
                patientLabrl.hidden = YES;
            }
            
        }
    }else if ([tishiTypeStr isEqualToString:@"public"]){
        tishiTypeStr =[notifiDic objectForKey:@"public"];
        if ([tishiTypeStr isEqualToString:@"1"]) {
            isYes = YES;
            PublicBfLabel.hidden = NO;
            [[NSNotificationCenter defaultCenter] postNotificationName:@"RELOADHISTORYTV" object:nil];
        }else{
            isYes = NO;
            PublicBfLabel.hidden = YES;
        }
    }else if([tishiTypeStr isEqualToString:@"suifang"]){
        
        patientLabrl.hidden = NO;
        

    }
}

//新的公益资讯数目请求
-(void)makeNewConsult{
    
    NSString *LoginStr =[NSString stringWithFormat: NEWCONSULTLIST ];
    LoginStr =[LoginStr stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Uuidnew=[NSString stringWithFormat:@"%@",[USERDEFAULT objectForKey:@"Uuid"]];
    
    NSMutableDictionary *dic11=[[NSMutableDictionary alloc]init];
    
    dic11[@"expertUuid"]=Uuidnew;
    dic11[@"page"]=@"1";
    
    [manager POST: LoginStr parameters:dic11 progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              
              NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
              
              NSString * code =[NSString stringWithFormat:@"%@",[dic objectForKey:@"code"]];
              
              if ([code isEqualToString:@"1"]) {
                  
                  NewDataArr =[[NSMutableArray alloc]initWithArray:[dic objectForKey:@"data"]];
                  
                  if (NewDataArr.count>0) {
                      
                      PublicBfLabel.hidden = NO;
                      
                  }else{
                      
                      if (isYes == YES) {
                          
                          PublicBfLabel.hidden = NO;
                          
                      }else{
                          
                          PublicBfLabel.hidden = YES;
                      }
                      
                  }
                  
              }else{
                  
                  NSLog(@"出现情况");
              }
              
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              
              [self hideHud];
              
          }];
    
}

//未读消息的获取
-(void)makeWithUnRead{
    
    ISunreadMessage = NO;
    UnreadataArray  =[[NSMutableArray alloc]init];
    [UnreadataArray addObjectsFromArray:[[DeviceDBHelper sharedInstance] getMyCustomSession]];
    
    for ( ECSession* session in UnreadataArray) {
        if ( session.unreadCount  > 0) {
            _Db =[DBOperation shareDBOperation];
            contactsModel =[_Db getDataFormodel:session.sessionId];
 
            if ([contactsModel.style isEqualToString:@"1"]) {
                
                ISunreadMessage  = YES;
            }
            
        }
    }
    if (ISunreadMessage == NO) {// 没有未读消息 的话  删除红点
        
        [solvemm remoAllPatienMessage];
    }else{
        
        patientLabrl.hidden  = NO;
        
    }
    
}

//3.23有新的患者申请展示首页红点提示
-(void)ShowNewPatient{
    
    userdefault =[NSUserDefaults standardUserDefaults];
    
    newPatientArray  = [[NSMutableArray alloc]initWithArray:(NSArray *)[userdefault objectForKey:@"NewPatient"]];
    
    if (newPatientArray.count >  0) {
        
        patientLabrl.hidden = NO;
         suifangLabel.hidden =  NO;
    }else{
        
        patientLabrl.hidden  = YES;
        
        suifangLabel.hidden =  YES;
    }
    
}


//gzz患者审核 小红点
-(void)ShowNewShenPatient{
    
    userdefault =[NSUserDefaults standardUserDefaults];
    
    newPatientArray  = [[NSMutableArray alloc]initWithArray:(NSArray *)[userdefault objectForKey:@"NewPatient"]];
    
    if (newPatientArray.count >  0) {
//         patientLabrl.hidden = NO;
         suifangLabel.hidden =  NO;
    }else{
//        patientLabrl.hidden  = YES;
        suifangLabel.hidden =  YES;
    }
    
}


//请求新的岁患患者数目
-(void)makeNewPatientData{
    
    NSString *LoginStr =[NSString stringWithFormat:APPLIST];
    //    NSString *LoginStr =[NSString stringWithFormat:BACKUPMESSAGE];
    LoginStr =[LoginStr stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    
    manager.responseSerializer.acceptableContentTypes =[NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json",nil];
    //
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    //
    NSArray *KeyArr =@[@"expertUuid"];
    // 没有 申请的uuid
    
    NSString * Uiuid =[NSString stringWithFormat:@"%@",[USERDEFAULT objectForKey:@"Uuid"]];
    NSArray *ValueArr  =@[Uiuid];
    
    
    NSDictionary *dic =[[NSDictionary alloc]initWithObjects:ValueArr forKeys:KeyArr];
    
    [manager POST: LoginStr parameters:dic progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              
              
              NSString * code =[NSString stringWithFormat:@"%@",[responseObject objectForKey:@"code"]];
              
              
              if ([code isEqualToString:@"1"]) {
                  NSArray * sdataArray =[[NSArray alloc]initWithArray:[responseObject objectForKey:@"data"]];
                  newPatientArray =[[NSMutableArray alloc]init];
                  
                  for ( NSMutableDictionary * ddic in sdataArray) {
                      
                      [newPatientArray addObject:[self clearErrorData:ddic]];
                  }
                  
                  userdefault =[NSUserDefaults standardUserDefaults];
                  
                  [userdefault setObject:newPatientArray forKey:@"NewPatient"];
                  //          [userdefault setValue:newPatientArray forKey:@"NewPatient"];
                  [userdefault synchronize];
                  
                  [self ShowNewShenPatient];
                  
              }
              
              
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              
              NSLog(@"%@",error);
          }];
}

-(void)buttonClick:(UIButton *)btn{
    
    if (btn.tag == 300) {
        //        patientLabrl.hidden = YES;
        [[NSNotificationCenter defaultCenter] postNotificationName:@"Patient" object:nil];
        
    }else if (btn.tag == 301){
        
        //        [[NSNotificationCenter defaultCenter] postNotificationName:@"ComeInVip" object:nil];
        [self showHint:@"暂未开放"];
//        VideoHomeController * ganVC = [[VideoHomeController alloc]init];
//        ganVC.hidesBottomBarWhenPushed = YES;
//        [self.navigationController pushViewController:ganVC animated:YES];
        
    }else if (btn.tag == 302){
        
        HositoryViewController *hosi = [[HositoryViewController alloc] init];
        
        hosi.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:hosi animated:YES];
    }else if (btn.tag == 303){
//        gzz20200302
//        MyKeyanVC *vc= [MyKeyanVC new];
//        vc.hidesBottomBarWhenPushed = YES;
//        [self.navigationController pushViewController:vc animated:YES];
        
        VideoHomeController * ganVC = [[VideoHomeController alloc]init];
        ganVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:ganVC animated:YES];
        
//        [[NSNotificationCenter defaultCenter] postNotificationName:@"ComeInKY" object:nil];
    }else if (btn.tag == 304){
        
        [[NSNotificationCenter defaultCenter] postNotificationName:@"ComeInLibrary" object:nil];
    }else if(btn.tag == 305){
        
        
//        #import "BonusMallsVC.h"
        BonusMallsVC *vc= [BonusMallsVC new];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];

//        QuanChatController * vc = [[QuanChatController alloc]init];
//        vc.hidesBottomBarWhenPushed = YES;
//        [self.navigationController pushViewController:vc animated:YES];
        //
        
    }else if (btn.tag == 306){
        
         NSString *titleName = [NSString stringWithFormat:@"%@",oneLabelmore.text];
       if ([titleName isEqualToString:@"肝胆时讯"]) {
           gandanshixunViewController *vc= [gandanshixunViewController new];
           vc.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:vc animated:YES];

       }else if([titleName isEqualToString:@"名医名科"]){
           GanHospitalVC *vc= [GanHospitalVC new];
           vc.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:vc animated:YES];
       }else if([titleName isEqualToString:@"药品助手"]){
           medicationNewVC * medical  = [[medicationNewVC alloc]init];
           medical.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:medical animated:YES];
           
       }else if([titleName isEqualToString:@"肝胆课件"]){
           
           ganDanKeJianVC * kejianVC  = [[ganDanKeJianVC alloc]init];
           kejianVC.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:kejianVC animated:YES];
           
       }else if([titleName isEqualToString:@"精品课程"]){
           
           meetingVC * PeriodicalVC  = [[meetingVC alloc]init];
           PeriodicalVC.bigDaoHang = @"daohang";
           PeriodicalVC.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:PeriodicalVC animated:YES];
           
       }else if([titleName isEqualToString:@"肝病学院"]){
           
           ganbingDelectionVC *hosi = [[ganbingDelectionVC alloc] init];
           hosi.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:hosi animated:YES];
           
       }else if([titleName isEqualToString:@"病例分享"]){
           circleChatVC *circleVC = [[circleChatVC alloc] init];
           circleVC.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:circleVC animated:YES];;
           
       }else if([titleName isEqualToString:@"科研项目"]){
           MyKeyanVC *vc= [MyKeyanVC new];
           vc.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:vc animated:YES];
           
       }else if([titleName isEqualToString:@"肝病检测"]){
           ganbingDelectionVC *vc= [ganbingDelectionVC new];
           vc.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:vc animated:YES];
           
       }else if([titleName isEqualToString:@"我的下载"]){
           
           myDownloadVC * downVC = [[myDownloadVC alloc]init];
           downVC.hidesBottomBarWhenPushed = YES;
           [self.navigationController pushViewController:downVC animated:NO];
           
       }
       
    }else if (btn.tag == 307){
//        030303
//        ganbingDelectionVC *hosi = [[ganbingDelectionVC alloc] init];
//
//        hosi.hidesBottomBarWhenPushed = YES;
//        [self.navigationController pushViewController:hosi animated:YES];
//        “肝胆时讯”、“ 名医名科”、药品助手、肝胆课件、精品课程、肝病学院、病例分享、科研项目、肝病检测、我的下载
        NSString *titleName = [NSString stringWithFormat:@"%@",twoLabelmore.text];
        if ([titleName isEqualToString:@"肝胆时讯"]) {
            gandanshixunViewController *vc= [gandanshixunViewController new];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];

        }else if([titleName isEqualToString:@"名医名科"]){
            GanHospitalVC *vc= [GanHospitalVC new];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }else if([titleName isEqualToString:@"药品助手"]){
            medicationNewVC * medical  = [[medicationNewVC alloc]init];
            medical.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:medical animated:YES];
            
        }else if([titleName isEqualToString:@"肝胆课件"]){
            
            ganDanKeJianVC * kejianVC  = [[ganDanKeJianVC alloc]init];
            kejianVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:kejianVC animated:YES];
            
        }else if([titleName isEqualToString:@"精品课程"]){
            
            meetingVC * PeriodicalVC  = [[meetingVC alloc]init];
            PeriodicalVC.bigDaoHang = @"daohang";
            PeriodicalVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:PeriodicalVC animated:YES];
            
        }else if([titleName isEqualToString:@"肝病学院"]){
            
         ganLiveVideVC * vc = [[ganLiveVideVC alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            
        }else if([titleName isEqualToString:@"病例分享"]){
            circleChatVC *circleVC = [[circleChatVC alloc] init];
            circleVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:circleVC animated:YES];;
            
        }else if([titleName isEqualToString:@"科研项目"]){
            MyKeyanVC *vc= [MyKeyanVC new];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            
        }else if([titleName isEqualToString:@"肝病检测"]){
            ganbingDelectionVC *vc= [ganbingDelectionVC new];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            
        }else if([titleName isEqualToString:@"我的下载"]){
            
            myDownloadVC * downVC = [[myDownloadVC alloc]init];
            downVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:downVC animated:NO];
            
        }
        
        
        
    }else if (btn.tag == 308){
        
        
        SYLifeManagerController *editvc = [[SYLifeManagerController alloc]init];
        editvc.hidesBottomBarWhenPushed = YES;
        WEAKSELFS
        editvc.updateBlock = ^(NSString *isyes) {
            if ([isyes isEqualToString:@"yes"]) {
//                [weakSelf getSystemTimeFromServer:@"getIcon"];
            }
        };
        [self.navigationController pushViewController:editvc animated:YES];
    }
     
}
//广告页
-(void)getAdvertisementVC{
    
    _launchVC = [[AdvertisementVC alloc]init];
    _launchVC.logoImageView.alpha = 1.0;
    _launchVC.logoImageView.image = [UIImage imageNamed:@"yzigandan"];
    [_launchVC.view addSubview:_launchVC.logoImageView];
    
    AppDelegate * app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    UIWindow * window = app.window;
    [window addSubview:_launchVC.view];
    
    [self imageviewRequestStart];
    [_launchVC.jumpBtn addTarget:self action:@selector(removeImageView) forControlEvents:(UIControlEventTouchUpInside)];
    [window bringSubviewToFront:_launchVC.view];
}

-(void)removeImageView{
    
    [_launchVC.timer invalidate];
    [_launchVC.jumpBtn removeFromSuperview];
    [UIView animateWithDuration:1 animations:^{
        
        CATransform3D transform =CATransform3DMakeScale(1.2, 1.2, 1.0);
        
        _launchVC.logoImageView.layer.transform = transform;
        _launchVC.logoImageView.alpha = 0.0;
        
    }completion:^(BOOL finished) {
        
        [_launchVC.view removeFromSuperview];
        
        
    }];
    
    NSLog(@"广告走了几次");
    
}

-(void)timerAction{
    
    --_launchVC.time;
    [_launchVC.jumpBtn setTitle:[NSString stringWithFormat:@"%ds | 跳过",_launchVC.time] forState:(UIControlStateNormal)];
    if (_launchVC.time ==0) {
        
        [_launchVC.jumpBtn removeFromSuperview];
        [_launchVC.timer invalidate];
    }
}

-(void)imageviewRequestStart{

    //yz313
    NSString * url = [NSString stringWithFormat:@"%@startpage",IMAURLAPP];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dicc = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *stracode =[NSString stringWithFormat:@"%@",dicc[@"code"]];
        
        NSDictionary * dic = [dicc objectForKey:@"data"];
        NSString * string = [[NSString alloc]init];
        
        if ([stracode isEqualToString:@"1"]) {
            
            if (![dic isEqual:[NSNull null]]) {
                
                string = [NSString stringWithFormat:@"%@%@",ImageUrl,[dic objectForKey:@"path"]];
                //                _launchVC.logoImageView.image = [UIImage imageWithData:[NSData dataWithContentsOfURL:[NSURL URLWithString:string]]];
                [_launchVC.logoImageView sd_setImageWithURL:[NSURL URLWithString:string] placeholderImage:[UIImage imageNamed:@"yzigandan"]];
            }else{
                
                _launchVC.logoImageView.image = [UIImage imageNamed:@"yzigandan"];
            }
            
            
            
            [_launchVC.view addSubview:_launchVC.jumpBtn];
            _launchVC.timer = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(timerAction) userInfo:nil repeats:YES];
            
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(_launchVC.time * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                
                [self removeImageView];
                
            });
            
        }else{
            
            _launchVC.logoImageView.image = [UIImage imageNamed:@"yzigandan"];
        }
        
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
        
        [_launchVC.view removeFromSuperview];
    }];
    
    
}

//字典 去掉 <>
-(NSDictionary *)clearErrorData:(NSMutableDictionary *)dictionary{
    
    NSMutableDictionary  *newDict = [[NSMutableDictionary alloc] initWithDictionary:dictionary]
    ;
    NSArray * allkeys = [newDict allKeys];
    for (int i = 0; i < [allkeys count]; i ++) {
        // 获取下标对应的key
        NSString * key = [allkeys objectAtIndex:i];
        // 根据key获取value
        
        if ([[newDict objectForKey:key]isKindOfClass:[NSNull class]]) {
            newDict[key] = @"";
        }
    }
    return newDict;
}



#pragma mark ------新首页布局end------
-(void)MakeOutLogo{
    
    NewLoginViewController * log =[[NewLoginViewController alloc]init];
    log.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:log animated:NO];
    return;
    
    
}
-(void)islogo{
    
    NSUserDefaults * user  =  [NSUserDefaults standardUserDefaults];
    NSString * sstt =[user objectForKey:@"LogState"];
    NSString * wwUuid = [user objectForKey:@"Uuid"];
    
    if([sstt isEqualToString:@"6"] && wwUuid.length>10){
        
        
        
    }else{
        
        NewLoginViewController * log =[[NewLoginViewController alloc]init];
        log.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:log animated:NO];
        
    }
    
}

- (void)buttonIterm{
    SysteMessage * sys = [[SysteMessage alloc]init];
    sys.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:sys animated:YES];
    
}
#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)which{
//        [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",IMaUrlYZ];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
//        1581782400
        if ([sysTimestr doubleValue]>1581782400) {
            imagwu.hidden = YES;
        }
        if ([sysTimestr doubleValue]>1584633600) {
            imagLibiary.hidden = YES;
        }

        
        if ([which isEqualToString:@"one"]) {
            [weakSelf NewRequestScroll];
        }else  if ([which isEqualToString:@"two"]){
            [weakSelf heroRequest];
//getIcon
        }else if ([which isEqualToString:@"getIcon"]){
                    [weakSelf getIconRequest];
        //getIcon
        }
        else{
            [weakSelf newRollsignRequest];
        }

        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
         if ([which isEqualToString:@"one"]) {
                  [weakSelf NewRequestScroll];
              }else  if ([which isEqualToString:@"two"]){
                  [weakSelf heroRequest];

              }else if ([which isEqualToString:@"getIcon"]){
                          [weakSelf getIconRequest];
              //getIcon
              }
              else{
                  [weakSelf newRollsignRequest];
              }
        
    }];
    
}

#pragma mark  变动的图标 变动的图标变动的图标变动的图标
-(void)getIconRequest{
    NSString *Strurl = [NSString stringWithFormat:@"%@getUserIcon",expertAPI];
       NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
       dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
       NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
       dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
       NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
              dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
          }else{
              
              dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
          }
       dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
       
       NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
   
       [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
           
           if ([data[@"code"] isEqualToString:@"200"]) {
               NSArray *arr  = [NSArray arrayWithArray:data[@"data"]];
               NSMutableArray *marr = [NSMutableArray  array];
               for (int i =0; i<arr.count; i++) {
                   NSDictionary *dic = [NSDictionary dictionaryWithDictionary:arr[i]];
                   NSString *seletctstr = [NSString stringWithFormat:@"%@",dic[@"selected"]];

                   if ([seletctstr isEqualToString:@"false"]) {
                       
                   }else{
                       [marr addObject:dic];

                   }

               }
     
               
               for (int i=0; i<marr.count; i++) {
                   NSDictionary *dic = [NSDictionary dictionaryWithDictionary:marr[i]];
                   if (i == 0) {
                       oneLabelmore.text = dic[@"name"];
                         NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl,[dic objectForKey:@"img"]];
                       [oneImagelMore sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@""]];
//                     UIButton *btn = (UIButton *)[self.view viewWithTag:306];
//                      [btn setTitle:dic[@"name"] forState:0];
//                       NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl,[dic objectForKey:@"img"]];
//                    [btn sd_setImageWithURL:[NSURL URLWithString:hearImagecell] forState:0];
                       
                   }else{
                       
                       twoLabelmore.text = dic[@"name"];
                        NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl,[dic objectForKey:@"img"]];
                        [twoImagelmore sd_setImageWithURL:[NSURL URLWithString:hearImagecell] placeholderImage:[UIImage imageNamed:@""]];
//                       UIButton *btn = (UIButton *)[self.view viewWithTag:307];
//                                         [btn setTitle:dic[@"name"] forState:0];
//                      NSString *hearImagecell = [NSString stringWithFormat:@"%@%@",ImageUrl,[dic objectForKey:@"img"]];
//                      [btn sd_setImageWithURL:[NSURL URLWithString:hearImagecell] forState:0];
                                          
                       
                   }
                   
               }
               
                
           }else{
               
               [self showHint:data[@"message"]];
           }
           
           
       } failure:^(NSError *error) {
           
           GDXZLog(@"%@",error);
           
       }];
       
    
    
}
- (void)NewRequestScroll
{
    NSString *Strurl = [NSString stringWithFormat:@"%@newsRollIndex",IMaUrl];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
     if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        if ([data[@"code"] isEqualToString:@"1"]) {
            
            TitleNewsArray = [[NSMutableArray alloc]init];
            
            NSArray * arr = [data objectForKey:@"data"];
            for (NSDictionary * ddic in [data objectForKey:@"data"]) {
                KYModel * YZmodel = [[KYModel alloc]initWithDic:ddic];
                [TitleNewsArray addObject:YZmodel];
            }
            
            _mutArrimage=[NSMutableArray array];
            _titleArr = [[NSMutableArray alloc]init];
            _pathArr=[[NSMutableArray alloc]init];
            
            
            for (NSDictionary * dic in arr) {
                
                NSString * path = [dic objectForKey:@"path"];
                
                NSString * titleStr = [dic objectForKey:@"title"];
                
                NSString * str1 = [[NSString alloc]init];
                
                if (titleStr.length >= 18) {
                    
                    str1 = [NSString stringWithFormat:@"%@...",[titleStr substringToIndex:18]];
                    
                }else{
                    
                    str1 = titleStr;
                }
                
                NSString * headImgStr = [dic objectForKey:@"headImg"];
                NSString  *imagename=[NSString stringWithFormat:@"%@%@",ImageURL,headImgStr];
                
                [_titleArr addObject:str1];
                [_mutArrimage addObject:imagename];
                [_pathArr addObject:path];
                
            }
            
            if (_titleArr.count == 0 && _mutArrimage.count == 0) {
                
                cycleScrollView2.imageURLStringsGroup = _defaultArr;
                cycleScrollView2.titlesGroup = _defaultTitleArr;
            }else{
                
                cycleScrollView2.titlesGroup = _titleArr;
                cycleScrollView2.imageURLStringsGroup = _mutArrimage;
            }
            
            
        }else{
            [self showHint:data[@"message"]];
        }
        
        
    } failure:^(NSError *error) {
        
        GDXZLog(@"%@",error);
        
    }];
    
}
- (void)heroRequest
{
    NSString *Strurl = [NSString stringWithFormat:@"%@getAppActivity",expertAPI];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    dicM[@"id"] = [NSString stringWithFormat:@"%@",@"6"];
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"id"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        
        if ([data[@"code"] isEqualToString:@"200"]) {
//             = [NSString stringWithFormat:@"%@",data[@"data"][@"status"]];
            if ([data[@"data"] isKindOfClass:[NSDictionary class]]) {
                
                showHeroImg = [NSString stringWithFormat:@"%@",data[@"data"][@"status"]];
                heroPath = [NSString stringWithFormat:@"%@",data[@"data"][@"url_path"]];
                 NSString *imgpath = [NSString stringWithFormat:@"%@",data[@"data"][@"img"]];
                 fromStr = [NSString stringWithFormat:@"%@",data[@"data"][@"form"]];
                activeNameStr = [NSString stringWithFormat:@"%@",data[@"data"][@"name"]];
                    //添加手势，点击跳转到英雄榜页面
                UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(gotoHero)];

//                    UIImageView *followImage = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-72, kMainScreenHeight-100-SafeAreaBottomHeight-30, 72, 48)];
                UIImageView *followImage = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-76, kMainScreenHeight-100-SafeAreaBottomHeight-30, 76, 40)];

//                    followImage.image = [UIImage imageNamed:@"gandanhero"];
                  [followImage sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",ImageURL,imgpath]]];
                    followImage.userInteractionEnabled = YES;
                    [followImage addGestureRecognizer:tap];
                    [self.view addSubview:followImage];
                if ([fromStr isEqualToString:@"2"]) {
                            [self requestbooknum];
                     }
            }
        
        }else{
            [self showHint:data[@"message"]];
        }
        
        
    } failure:^(NSError *error) {
        
        GDXZLog(@"%@",error);
        
    }];
    
}
-(void)requestbooknum{
    NSString *Strurl = [NSString stringWithFormat:@"%@%@",BOOKURL,heroPath];
        
        NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
        dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
        NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
        dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
        if (sysTimestr.length>2) {
               dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
           }else{
               
               dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
           }
        dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
        NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];

        [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
            
            if ([data[@"code"] isEqualToString:@"200"]) {
               bookNum  = [NSString stringWithFormat:@"%@",data[@"data"][@"book_num"]];
               patientnum  = [NSString stringWithFormat:@"%@",data[@"data"][@"patient_num"]];
            }else{
                [self showHint:data[@"message"]];
            }
            
            
        } failure:^(NSError *error) {
            
            GDXZLog(@"%@",error);
            
        }];
}
//- (void)heroRequest
//{
//    NSString *Strurl = [NSString stringWithFormat:@"%@hero2019",expertAPI];
//
//    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
//    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
//    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
//    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//    if (sysTimestr.length>2) {
//           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
//       }else{
//
//           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
//       }
//    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
//
//    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
//
//    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
//
//        if ([data[@"code"] isEqualToString:@"200"]) {
//            showHeroImg = [NSString stringWithFormat:@"%@",data[@"data"][@"status"]];
//            heroPath = [NSString stringWithFormat:@"%@",data[@"data"][@"url_path"]];
//        //添加手势，点击跳转到英雄榜页面
//        UITapGestureRecognizer *tap =[[UITapGestureRecognizer alloc]initWithTarget:self  action:@selector(gotoHero)];
//
//        UIImageView *followImage = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-48, kMainScreenHeight-100-SafeAreaBottomHeight-30, 48, 48)];
//        followImage.image = [UIImage imageNamed:@"gandanhero"];
//        followImage.userInteractionEnabled = YES;
//        [followImage addGestureRecognizer:tap];
//            followImage.hidden = YES;
//        [self.view addSubview:followImage];
//
//        if (![showHeroImg isEqualToString:@"0"]) {
//            NSString *strhero = @"yes";
//            NSUserDefaults *stadefau = [NSUserDefaults standardUserDefaults];
//            [stadefau setObject:strhero forKey:@"herobang"];
//            [stadefau setObject:heroPath forKey:@"herobangpath"];
//            [stadefau synchronize];
//            followImage.hidden = NO;
//
//        }
//        //"url_path" = "http://wx.igandan.com/activity/hero2019";
//
//        }else{
//            [self showHint:data[@"message"]];
//        }
//
//
//    } failure:^(NSError *error) {
//
//        GDXZLog(@"%@",error);
//
//    }];
//
//}

//gzz20200407 福利赠书
-(void)gotoHero{
    
    if ([fromStr isEqualToString:@"2"]) {
        
        GDXZLog(@"弹框活动");
        UIWindow *window = [UIApplication sharedApplication].keyWindow;
        UIView *view11 = [[UIView alloc] init];
        allCoverView = view11;
        [window addSubview:view11];
        view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //
        view11.backgroundColor = [UIColor colorWithWhite:0.0f alpha: 0.6];
        
        UIImageView *ima = [[UIImageView alloc]initWithFrame:CGRectMake(kMainScreenWidth-98, 90, 25, 50)];
        ima.image = [UIImage imageNamed:@"deleatebook"];
        [view11 addSubview:ima];
        
        UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(kMainScreenWidth-120, 90, 65, 50)];
        [btn addTarget:self action:@selector(deleatebook) forControlEvents:(UIControlEventTouchUpInside)];
        btn.backgroundColor = [UIColor clearColor];
        [view11 addSubview:btn];
        
        UIView *viewbg = [[UIView alloc]initWithFrame:CGRectMake(70, 140, kMainScreenWidth-140, 470)];
        viewbg.backgroundColor = RGB11(204, 42, 119);
        viewbg.layer.masksToBounds = YES;
        viewbg.layer.cornerRadius = 15;
        [view11 addSubview:viewbg];
//        activeBookNewss
        UIImageView *imagenoe = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, kMainScreenWidth-140-20, 400)];
//        imagenoe.image = [UIImage imageNamed:@"activeBook"];
        imagenoe.image = [UIImage imageNamed:@"activeBookNewss.jpg"];

        [viewbg addSubview:imagenoe];

        if (DEVICE_IS_IPHONE6) {
//           viewbg.frame = CGRectMake(50, 140, kMainScreenWidth-100, 470);
//            imagenoe.frame = CGRectMake(10, 10, kMainScreenWidth-140-20, 400);
            ima.frame = CGRectMake(kMainScreenWidth-98, 60, 25, 50);
            btn.frame =CGRectMake(kMainScreenWidth-120, 60, 65, 50);
            viewbg.frame = CGRectMake(70, 110, kMainScreenWidth-140, 470);
        }else if (DEVICE_IS_IPHONEX){
            
            ima.frame = CGRectMake(kMainScreenWidth-98, 115, 25, 50);
            btn.frame =CGRectMake(kMainScreenWidth-120, 115, 65, 50);
            viewbg.frame = CGRectMake(70, 165, kMainScreenWidth-140, 470);
        }else if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5){
            
            ima.frame = CGRectMake(kMainScreenWidth-98, 60, 25, 50);
            btn.frame =CGRectMake(kMainScreenWidth-120, 60, 65, 50);
            imagenoe.frame = CGRectMake(10, 10, kMainScreenWidth-100, 350);
            viewbg.frame = CGRectMake(40, 110, kMainScreenWidth-80, 420);
            
        }
        
        
        UILabel *labelone = [[UILabel alloc]initWithFrame:CGRectMake(35, 345, 100, 20)];
             labelone.text = @"新增随访";
              labelone.font = SYSTEMFONTNEW(18);
             [viewbg addSubview:labelone];
             UILabel *labeltwo = [[UILabel alloc]initWithFrame:CGRectMake(165, 345, 100, 20)];
             labeltwo.text = @"预期赠书";
             labeltwo.font = SYSTEMFONTNEW(18);
             [viewbg addSubview:labeltwo];
             UILabel *lablethree = [[UILabel alloc]initWithFrame:CGRectMake(5, 373, 80, 30)];
             lablethree.text = patientnum;
            lablethree.textAlignment = NSTextAlignmentRight;
            lablethree.font = SYSTEMFONTNEW(25);
            lablethree.textColor = [UIColor redColor];
//             lablethree.backgroundColor = [UIColor redColor];
             [viewbg addSubview:lablethree];
        
             UILabel *lablethree1 = [[UILabel alloc]initWithFrame:CGRectMake(85, 380, 30, 20)];
             lablethree1.text = @" 人";
             [viewbg addSubview:lablethree1];
        
                UILabel *lablefour = [[UILabel alloc]initWithFrame:CGRectMake(135, 373, 80, 30)];
                          lablefour.text =bookNum;
                         lablefour.textAlignment = NSTextAlignmentRight;
                         lablefour.font = SYSTEMFONTNEW(25);
                         lablefour.textColor = [UIColor redColor];
//                        lablefour.backgroundColor = [UIColor redColor];
                          [viewbg addSubview:lablefour];
             UILabel *lablefour1 = [[UILabel alloc]initWithFrame:CGRectMake(215, 380, 30, 20)];
                   lablefour1.text = @" 本";
                   [viewbg addSubview:lablefour1];

        if (DEVICE_IS_IPHONE6||DEVICE_IS_IPHONEX) {
            labelone.frame =CGRectMake(25, 345, 180, 20);
            labeltwo.frame =CGRectMake(140, 345, 100, 20);
            lablethree.frame =CGRectMake(0, 373, 80, 30);
            lablethree1.frame =CGRectMake(80, 380, 30, 20);
            lablefour.frame =CGRectMake(105, 373, 80, 30);
            lablefour1.frame =CGRectMake(185, 380, 30, 20);
        }else if (DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE4){
           labelone.frame = CGRectMake(30, 305, 100, 20);
            labeltwo.frame = CGRectMake(140, 305, 100, 20);
            lablethree.frame =CGRectMake(0, 330, 80, 30);
            lablethree1.frame = CGRectMake(85, 335, 30, 20);
             lablefour.frame =CGRectMake(120, 330, 80, 30);
            lablefour1.frame = CGRectMake(205, 335, 30, 20);
        }

        
        
        UIButton *button = [[UIButton alloc]initWithFrame:CGRectMake(35, 425, kMainScreenWidth-120-90, 30)];
       
        if (DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE4) {
            button.frame = CGRectMake(20, 375, kMainScreenWidth-120, 30);
        }

        [button setTitle:@"立即参与" forState:(UIControlStateNormal)];
        [button setTitleColor: RGB11(204, 42, 119) forState:(UIControlStateNormal)];
        [button addTarget:self action:@selector(gotoerweima) forControlEvents:(UIControlEventTouchUpInside)];
        button.backgroundColor = [UIColor whiteColor];
        button.layer.masksToBounds = YES;
        button.layer.cornerRadius = 13;
        [viewbg addSubview:button];

        
    }else{
       
        allWebViewVC *vc = [[allWebViewVC alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        vc.titleSyr = activeNameStr;
         allCoverView.hidden = YES;
        vc.STraPath = [NSString stringWithFormat:@"%@",heroPath];
        [self.navigationController pushViewController:vc animated:YES];
    }
    
    
}
-(void)gotoerweima{
    GDXZLog(@"跳转到医生二维码页面");
    MyQr_codeVC *codevc = [[MyQr_codeVC alloc]init];
    codevc.hidesBottomBarWhenPushed = YES;
    allCoverView.hidden = YES;
//    codevc.nameStr = expertNameStr;
    [self.navigationController pushViewController:codevc animated:YES];
}
-(void)deleatebook{
    [UIView animateWithDuration:0.2 animations:^{
        allCoverView.hidden = YES;
    } completion:^(BOOL finished) {
        allCoverView.hidden = YES;
    }];
}
#pragma mark - SDCycleScrollViewDelegate

- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index
{
    
    KYModel * model = TitleNewsArray[index];
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    NSString * url = [NSString stringWithFormat:READ];
    
    NSString * str = [NSString stringWithFormat:@"%d",1];
    NSDictionary * Dic = @{@"user_uuid":[[NSUserDefaults standardUserDefaults] objectForKey:@"Uuid"],@"news_article_uuid":model.keUuid,@"type":str};
    
    
    [manager POST: url parameters:Dic progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              
              if ([[responseObject objectForKey:@"code"] isEqualToString:@"1"]) {
                  
                  
                  Newswebview *news=[Newswebview new];
                  news.hidesBottomBarWhenPushed=YES;
                  news.model= TitleNewsArray[index];
                  
                  
                  news.STraPath=_pathArr[index];
                  
                  news.isAgree = [NSString stringWithFormat:@"%@",[responseObject objectForKey:@"isAgree"]];
                  //    [NSString stringWithFormat:@"%@",[news.model objectForKey:@"isAgree"]];
                  news.keUuid = model.keUuid;
                  news.agreeCount = [NSString stringWithFormat:@"%@",model.agreenum] ;
                  news.readCount =[NSString stringWithFormat:@"%@",model.readnum] ;
                  news.titleSyr =@"新闻详情";
                  //    NSLog(@"%@",news.STraPath);
                  [self.navigationController pushViewController:news animated:YES];
                  
                  
              }else{
                  
                  
                  [self showHint:[responseObject objectForKey:@"message"]];
              }
              
              
              
              
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              
              NSLog(@"%@",error);
              [MBProgressHUD hideHUDForView:self.view animated:YES];
              [self showHint:@"数据请求失败！"];
          }];
    
    
    
    
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    //    NSLog(@"%f",scrollView.contentOffset.y);
    
    CGFloat alp=scrollView.contentOffset.y/64;
    searchView.backgroundColor=[UIColor colorWithRed:226/255.f green:64/255.f blue:48/255.f alpha:alp];
    //        navView.alpha=scrollView.contentOffset.y/64;
}

- (void)setStatusBarBackgroundColor:(UIColor *)color {
//  gzz20191109
#warning 注释
//    UIView *statusBar = [[[UIApplication sharedApplication] valueForKey:@"statusBarWindow"] valueForKey:@"statusBar"];
//    if ([statusBar respondsToSelector:@selector(setBackgroundColor:)]) {
//        statusBar.backgroundColor = color;
//    }
}
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    self.navigationController.navigationBar.hidden=NO;
    [self setStatusBarBackgroundColor:[UIColor clearColor]];
    [UIApplication sharedApplication].statusBarStyle=UIStatusBarStyleDefault;
    
}

//#pragma mark - UIAlertViewDelegate
//- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
//
//    if (alertView.tag==10809) {
//
//        //普通更新弹框
//        if (buttonIndex==0) {
//            //点了忽略按钮
//            NSUserDefaults *usedefault = [NSUserDefaults standardUserDefaults];
//            //            [usedefault setObject:@"yes" forKey:@"NoUpdateYZ"];
//            [usedefault setObject:currentVersonStr forKey:@"currentVersonStr"];
//            [usedefault setObject:newVersonStr forKey:@"newVersonStr"];
//            [usedefault synchronize];
//
//        }else{
//
//            //点了去更新按钮
//            NSString  *strUrl=[NSString stringWithFormat:@"itms-apps://itunes.apple.com/cn/app/gan-dan-xiang-zhao-zhuan-jia/id1076458655?mt=8"];
//            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:strUrl]];
//        }
//    }else if (alertView.tag==10819){
//
//        //点了去更新按钮
//        NSString  *strUrl=[NSString stringWithFormat:@"itms-apps://itunes.apple.com/cn/app/gan-dan-xiang-zhao-zhuan-jia/id1076458655?mt=8"];
//        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:strUrl]];
//
//        UIAlertView *alt = [[UIAlertView alloc]initWithTitle:@"重大更新请务必升级" message:nil  delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
//        alt.tag = 10819;
//        [alt show];
//
//    }else{
//
//        //点击了取消按钮，保存当前时间，过一天再去提醒
//        NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
//        //        NSString *timestamp = @"1566666";
//        NSUserDefaults *usedefault = [NSUserDefaults standardUserDefaults];
//        [usedefault setObject:timestamp forKey:@"NowDateYZ"];
//        [usedefault synchronize];
//        if (buttonIndex == 1) { // 去设置界面，打开通知权限
//
//            if ([[[UIDevice currentDevice] systemVersion] floatValue] > 8.0) {//iOS8以后跳转到设置界面的代码也出现了变化 下面这段代码是直接跳转到APP的设置界面
//                //跳入当前App设置界面
//                [[UIApplication sharedApplication] openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString]];
//            }else{
//                //适配iOS7 ,跳入系统设置界面
//                [[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"prefs:General&path=Reset"]];
//            }
//
//        }
//    }
//
//}
-(void)viewWillAppear:(BOOL)animated{

    IOS_Frame
    NSString * strBag = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"bagviewShow"] ] ;
    
    if ([strBag isEqualToString:@"yes"]) {
        Bagview.hidden = NO;
        
    }else{
        Bagview.hidden = YES;
    }
    
    if (@available(iOS 11.0, *)) {
        self.bigTableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    } else {
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
    
    NSUserDefaults * user  =  [NSUserDefaults standardUserDefaults];
    NSString * sstt =[user objectForKey:@"Uuid"];
    if(sstt.length > 10){
        DeviceDBHelper *idbddd=[DeviceDBHelper sharedInstance];
        [idbddd  openDataBasePath:sstt];
 
    }
    
    
    _urlOne = @"";
    _urlTwo = @"";
    _urlThree = @"";
    _urlFour = @"";
    _imgageOne = @"";
    _imgageTwo = @"";
    _imgageThree = @"";
    _imgagefour = @"";
    _guangGaoArray = [[NSMutableArray alloc]init];
    _bigArray = [[NSMutableArray alloc]init];
    
    [self getSystemTimeFromServer:@"two"];
    solvemm  =  [SolvemessageTS defaultFormessageSovel];
    [solvemm showmessageTs];
    
    [self ShowNewPatient];
    [self makeNewConsult];
    
    
    [self getSystemTimeFromServer:@"three"];
    
    [self setStatusBarBackgroundColor:[UIColor clearColor]];
    self.navigationController.navigationBar.hidden=YES;
    [UIApplication sharedApplication].statusBarStyle=UIStatusBarStyleLightContent;
    
    SessionViewController * ssve =[SessionViewController sharedManager];
    [ssve loginWithHaveUserLogined];
    
    [self islogo];
    [self makeWithUnRead];
    
    
    
    NSString * strverson = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSString * versonStr = [[NSUserDefaults standardUserDefaults] objectForKey:@"versonStr"];
    
    if (versonStr.length>1) {
        
        if (![versonStr isEqualToString:strverson]) {
            
            
            NSUserDefaults *versonCount = [NSUserDefaults standardUserDefaults];
            [versonCount setValue:strverson forKey:@"versonStr"];
            //            [self testtt];
        }
        
    }else{

        NSString * introuc = [[NSUserDefaults standardUserDefaults] objectForKey:@"introuced"];
        
        NSLog(@"走了两次我的天啊？%@",introuc);
        
        if ([introuc isEqualToString:@"yes"]) {
            
            NSUserDefaults *TimeOfBootCount = [NSUserDefaults standardUserDefaults];
            if (![TimeOfBootCount valueForKey:@"timefirst"]) {
                [TimeOfBootCount setValue:@"sdds" forKey:@"timefirst"];
                
                NSUserDefaults *versonCount = [NSUserDefaults standardUserDefaults];
                [versonCount setValue:strverson forKey:@"versonStr"];
                NSLog(@"这个判断只会走一次吧");
                //                [self testtt];
                
            }else{
                
            }
            
        }
        
    }
    
     [self getSystemTimeFromServer:@"getIcon"];
    
//    gzz 小红点 患者h审核
    
    [self makeNewPatientData];
    
}

//广告条接口
#pragma mark 加密后的 首页滚动 -new  接口调试gzz180613
-(void)newRollsignRequest{
    
    //    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    manager.requestSerializer = [AFJSONRequestSerializer serializer];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/json",@"application/json",nil];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@expertrollNew",IMAURLAPP];
    NSString * uuidStr = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults]objectForKey:@"Uuid"]];
//     uuidStr = @"nMGjgC1RNIf1vX0Mvt1";
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    dicM[@"uuid"] = [NSString stringWithFormat:@"%@",uuidStr];//2
    NSString *timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    if (sysTimestr.length>2) {
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",sysTimestr];
       }else{
           
           dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
       }
    dicM[@"version"] = [NSString stringWithFormat:@"%@",VERSONNUN];
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"uuid"];
    //1：sign 拼接字符串
    NSString *signStr = [DicRemove array:arr dicData:dicM];
    //    MCLog(@"signStr=%@",signStr);
    //2：时间戳MD5
    NSString *timeStampStr = [NSString stringWithFormat:@"%@",[DicRemove md5To32bit:dicM[@"timestamp"]]];
    //3：sign 拼接MD5
    signStr = [NSString stringWithFormat:@"%@%@",signStr,timeStampStr];
    //4：sign MD5加密
    signStr = [NSString stringWithFormat:@"%@",[DicRemove md5To32bit:signStr]];
    // 5：url base 64
    signStr = [NSString stringWithFormat:@"%@",[DicRemove safeUrlBase64Encode:[NSData data] str:signStr]];
    
    //6 request header
    AFHTTPRequestSerializer *requestSerializer =  [AFJSONRequestSerializer serializer];
    NSDictionary *headerFieldValueDictionary = @{@"sign":signStr};
    if (headerFieldValueDictionary != nil) {
        for (NSString *httpHeaderField in headerFieldValueDictionary.allKeys) {
            NSString *value = headerFieldValueDictionary[httpHeaderField];
            [requestSerializer setValue:value forHTTPHeaderField:httpHeaderField];
        }
    }
    manager.requestSerializer = requestSerializer;
    [manager POST: Strurl parameters:dicM progress:nil
          success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
              NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
              
              NSString *codestr = [NSString stringWithFormat:@"%@",dic[@"code"]];
              isSign  = [NSString stringWithFormat:@"%@",dic[@"signIn"]];
              
              if ([isSign isEqualToString:@"1"]) {
                  
                  isSignIn = YES;
                  NSUserDefaults * stan2 = [NSUserDefaults standardUserDefaults];
                  [stan2 setValue:@"yiqian" forKey:@"qiandao"];
                  imaadd.image = [UIImage imageNamed:@"yqiandao@2x"];
                  
              }else{
                  isSignIn = NO;
                  NSUserDefaults * stan2 = [NSUserDefaults standardUserDefaults];
                  [stan2 setValue:@"weiqian" forKey:@"qiandao"];
                  imaadd.image = [UIImage imageNamed:@"wqiandao@2x"];
              }
              
              if ([codestr isEqualToString:@"1"]) {
                  
                  
                  _bigArray = [[NSMutableArray alloc]init];
                  _guangGaoArray = [[NSMutableArray alloc]init];
                  
                  NSDictionary * expertDic = [dic objectForKey:@"expert"];
                  
                  if ([expertDic isKindOfClass:[NSNull class]]) {
                      
                      NewLoginViewController * log =[[NewLoginViewController alloc]init];
                      log.hidesBottomBarWhenPushed = YES;
                      [self.navigationController pushViewController:log animated:NO];
                      
                      return ;
                  }
                  
                  expertZhiStr = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"positionName"]];
                  expertYiyuanStr = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"hospitalName"]];
                  expertNameStr = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"realName"]];
                  imageViewPhotoStr = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"photo"]];
                  officeName = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"officeName"]];
                  qrcode = [NSString stringWithFormat:@"%@",[expertDic objectForKey:@"qrcode"]];
                  
                  flowerCountLBStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"pingFlowewrnum"]];
                  patientCountLBStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"expertApplyNum"]];
                  gongyiCountLBStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"ConsultTotalNum"]];
                  
                  [theUserDefaultGcc setObject:flowerCountLBStr forKey:@"pingFlowewrnum"];
                  [theUserDefaultGcc setObject:patientCountLBStr forKey:@"expertApplyNum"];
                  [theUserDefaultGcc setObject:gongyiCountLBStr forKey:@"ConsultTotalNum"];

                  
                  //杨壮需要
                  expertZhi.text = expertZhiStr;
                  expertYiyuan.text =  @"专家工作室" ;//expertYiyuanStr;
                  expertName.text = expertNameStr;
                  
                  
                  if (DEVICE_IS_IPHONE4||DEVICE_IS_IPHONE5||DEVICE_IS_IPHONE6) {
                      
                      
                      if (expertNameStr.length>9) {
                          
                          expertName.text = [NSString stringWithFormat:@"%@",expertNameStr];
                      }else{
                          expertName.text = [NSString stringWithFormat:@"%@",expertNameStr];

                      }
                      
                  }else if (DEVICE_IS_IPHONE6P){
                      
                      if (expertNameStr.length>10) {
                          
                          expertName.text = [NSString stringWithFormat:@"%@",expertNameStr];
                      }else{
                          expertName.text = [NSString stringWithFormat:@"%@",expertNameStr];

                        }
                      
                      
                      
                  }
//                  expertName.text = @"高兴";
                  
                  if (expertName.text.length == 2) {
                      NSString *first =  [expertName.text substringToIndex:1];
                      NSString *last = [expertName.text substringFromIndex:expertName.text.length-1];//字符串结尾

                      expertName.text =  [NSString stringWithFormat:@"%@  %@",first,last];

                  }else{
                      expertName.text =  [self nameFormat:expertName.text];

                  }

                  
  
                  
                  
                  NSString * str  = [[NSString alloc]init];
                  str = [NSString stringWithFormat:@"%@%@",ImageUrl,imageViewPhotoStr];
                  [imageViewPhoto sd_setImageWithURL:[NSURL URLWithString:str] placeholderImage:[UIImage imageNamed:@"MyDefaultImage@2x"]];
                  
                  flowerCountLB.text = [NSString stringWithFormat:@"：%@",flowerCountLBStr];
                  patientCountLB.text = [NSString stringWithFormat:@"：%@",patientCountLBStr];
                  gongyiCountLB.text = [NSString stringWithFormat:@"：%@",gongyiCountLBStr];
              
                  
                  switchStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"moocswitch"]];
                  jiaoyuStr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"moocimg"]];
                  jiaoyuUrl = [NSString stringWithFormat:@"%@",[dic objectForKey:@"moocurl"]];
                  
                  NSArray * arr = [dic objectForKey:@"data"];
                  
                  if ([arr isKindOfClass:[NSArray class]]) {
                      
                      for (NSDictionary * ddic in arr) {
                          [_bigArray addObject:ddic];
                      }
                  }
                  
                  
                  NSArray * arrone = [dic objectForKey:@"adlist"];
                  
                  if ([arrone isKindOfClass:[NSArray class]]) {
                      
                      for (NSDictionary * ddicc in arrone) {
                          [_guangGaoArray addObject:ddicc];
                      }
                      
                      for (int i =0 ; i<_guangGaoArray.count; i++) {
                          
                          NSString * str = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"position"]];
                          
                          if ([str isEqualToString:@"1"]) {
                              
                              _imgageOne = [NSString stringWithFormat:@"%@%@",ImageURL,[_guangGaoArray[i]objectForKey:@"img"]];
                              _urlOne = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"url"]];
                              GDXZLog(@"_urlOne===%@",_urlOne);
                              
                          }else if ([str isEqualToString:@"2"]){
                              
                              
                              _imgageTwo = [NSString stringWithFormat:@"%@%@",ImageURL,[_guangGaoArray[i]objectForKey:@"img"]];
                              _urlTwo = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"url"]];
                              GDXZLog(@"_urlTwo===%@",_urlTwo);
                              
                          }else if ([str isEqualToString:@"3"]){
                              
                              _imgageThree = [NSString stringWithFormat:@"%@%@",ImageURL,[_guangGaoArray[i]objectForKey:@"img"]];
                              _urlThree = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"url"]];
                              GDXZLog(@"_urlThree===%@",_urlThree);
                              
                          }else if ([str isEqualToString:@"4"]){
                              
                              _imgagefour = [NSString stringWithFormat:@"%@%@",ImageURL,[_guangGaoArray[i]objectForKey:@"img"]];
                              _urlFour = [NSString stringWithFormat:@"%@",[_guangGaoArray[i]objectForKey:@"url"]];
                              GDXZLog(@"_urlFour===%@",_urlFour);
                          }
                          
                          
                      }
                      
                  }
                  
                  
                  
                  
                  
                  
                  [_bigTableView reloadData];
                  
                  
                  
                  
                  
              }else{
              
              }
              
              [_bigTableView reloadData];
              //              [MBProgressHUD hideHUDForView:self.view animated:YES];
          } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
              //              [MBProgressHUD hideHUDForView:self.view animated:YES];
              
              MCLog(@"%@",error);
          }];
    
}



/*
 *每个字后加上空格
 */
#pragma mark - 拼接成中间有空格的字符串
-(NSString *)nameFormat:(NSString *)str
{
    NSString *getString = @"";
    
    int a = (int)str.length/1;
    int b = (int)str.length%1;
    int c = a;
    if (b>0)
    {
        c = a+1;
    }
    else
    {
        c = a;
    }
    for (int i = 0 ; i<c; i++)
    {
        NSString *string = @"";
        
        if (i == (c-1))
        {
            if (b>0)
            {
                string = [str substringWithRange:NSMakeRange(1*(c-1), b)];
            }
            else
            {
                string = [str substringWithRange:NSMakeRange(1*i, 1)];
            }
            
        }
        else
        {
            string = [str substringWithRange:NSMakeRange(1*i, 1)];
        }
        getString = [NSString stringWithFormat:@"%@ %@",getString,string];
    }
    return getString;
}


- (void)didReceiveMemoryWarning {
}


@end








//gzz20200414
//  ChatViewController.m
//  ECSDKDemo_OC
//
//  Created by jiazy on 14/12/5.
//  Copyright (c) 2014年 ronglian. All rights reserved.
//                                 [derFau setObject:[_dataFromSvDic objectForKey:@"photo"] forKey:@"benrenPhoto"];


#import <MediaPlayer/MediaPlayer.h>
#import <MobileCoreServices/MobileCoreServices.h>
#import <AVFoundation/AVFoundation.h>
#import <objc/runtime.h>

#import <AssetsLibrary/ALAssetsLibrary.h>
#import <AssetsLibrary/ALAssetRepresentation.h>

#import "ChatViewController.h"
#import "ChatViewCell.h"
#import "ChatViewTextCell.h"
#import "ChatViewFileCell.h"
#import "ChatViewVoiceCell.h"
#import "ChatViewImageCell.h"
#import "ChatViewVideoCell.h"
#import "DetailsViewController.h"
#import "ContactDetailViewController.h"

#import "HPGrowingTextView.h"
#import "CommonTools.h"

#import "MWPhotoBrowser.h"
#import "MWPhoto.h"

#import "CustomEmojiView.h"
#import "VoipCallController.h"
#import "VideoViewController.h"

#import "ECMessage.h"
#import "ECDevice.h"
#import "ECFileMessageBody.h"
#import "ECVideoMessageBody.h"
#import "ECVoiceMessageBody.h"
#import "ECImageMessageBody.h"

#import "DocDetailNewVC.h"

#import "FollowUpController.h"
#import "SendFlowersAndHeartVC.h"
//#import "PublicAdvisoryViewController.h"
#import "PostWebviewController.h"
#import <Photos/Photos.h>
#import <CTAssetsPickerController/CTAssetsPickerController.h>



//gzz170829
#import "WkwebViewController.h"
#import "ChatViewPreviewCell.h"


//gzz171016
#import "ChatRevokeCell.h"
#import "ECRevokeMessageBody.h"

#import "ServiceEvaluationVC.h"
#import <AVKit/AVKit.h> //gzz20190917

#import "SendFlowerShowView.h"// 送花提示


#define RevokeMessageTime 120000

#define ToolbarInputViewHeight 43.0f //上面对话框的高度
#define ToolbarMoreViewHeight 90.0f //图片 摄像 那两个的高度
#define ToolbarDefaultTotalHeigth 133.0f

#define Alert_ResendMessage_Tag 1500


#define KNOTIFICATION_ScrollTable       @"KNOTIFICATION_ScrollTable"
#define KNOTIFICATION_RefreshMoreData   @"KNOTIFICATION_RefreshMoreData"

#define MessagePageSize 15

typedef enum {
    ToolbarDisplay_None=0,
    ToolbarDisplay_Emoji,
    ToolbarDisplay_More,
    ToolbarDisplay_Record
}ToolbarDisplay;

@interface ChatViewController()<UITableViewDataSource, UITableViewDelegate,HPGrowingTextViewDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate,MWPhotoBrowserDelegate,CustomEmojiViewDelegate,ChatViewTEXTCellDelegate,CTAssetsPickerControllerDelegate,WebBrowserBaseViewControllerDelegate> {
    
    BOOL isGroup;
    dispatch_once_t emojiCreateOnce;
    dispatch_once_t scrollBTMOnce;
    NSIndexPath* _longPressIndexPath;
    UIMenuController*  _menuController;
    UIMenuItem *_copyMenuItem;
    UIMenuItem *_deleteMenuItem;
    
    UIMenuItem *_revokeMenuItem;//gzz171016

    CGFloat viewHeight; //???? 显示屏幕的高度
    BOOL isScrollToButtom;
    
    NSMutableArray *REqumutarr;
    NSMutableArray *PulistChatMutarr;
    NSUserDefaults *nsuserdf;
    
    NSString *docNAME;
    
    //gzz1128
    NSMutableArray *doccuuidarrE;
    NSUserDefaults *DocUserdefulE;
    
    UIView *moreviewHide;//gzz180411 图片 和 拍照的父控件gzz1901016
    
    
    NSString *dragIsYes;//是不是下拉的 dragIsYes = @"no"; gzz190117
    
    BOOL islinkSuccessed;//是否连接成功
    

}

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSString* sessionId;
@property (nonatomic, strong) NSMutableArray* messageArray;  //消息数组gzz190304
@property (strong, nonatomic) NSMutableArray *photos;

//#warning 录音效果页面
@property (nonatomic, strong) UIImageView *amplitudeImageView;
@property (nonatomic, strong) UILabel *recordInfoLabel;
@property (nonatomic, strong) ECMessage *playVoiceMessage;


@property (nonatomic, strong) SendFlowerShowView *sendFlowerShowView;

/*<#code#>*/
@property (nonatomic, strong)   UIView *coverView;//送花提示;


@end

const char KAlertResendMessage;

static FMDatabase *db;

@implementation ChatViewController{
    
//#warning 切换工具栏显示
    UIView* _containerView;
    UIImageView *_inputMaskImage;
    HPGrowingTextView *_inputTextView;
    ToolbarDisplay toolbarDisplay;
    BOOL _isDisplayKeyborad;
    CGFloat _oldInputHeight;
    UIView* _inputView;
    UIButton *_recordBtn;
    
//#warning 表情页面
    UIButton *_emojiBtn;
    UIButton *_switchVoiceBtn;
    UIButton *_moreBtn;
    CustomEmojiView *_emojiView;
}

// 送花提示 0407

- (SendFlowerShowView *)sendFlowerShowView{
    if (!_sendFlowerShowView) {
        UIWindow *window = [UIApplication sharedApplication].keyWindow;
        UIView *view11 = [[UIView alloc] init];
        self.coverView = view11;
        [window addSubview:view11];
        view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //
//        view11.backgroundColor = [UIColor colorWithWhite:0.0f alpha: 0.3];
//        window.backgroundColor = [UIColor whiteColor];;
        view11.backgroundColor = [UIColor blackColor];
        view11.alpha = 0.3;

        CGFloat height = 60/320.0*SCREEN_WIDTH;
        
        CGRect rect = CGRectMake(0, [UIScreen mainScreen].bounds.size.height, SCREEN_WIDTH, height);
//        CGRect rect = CGRectMake(0, 100, SCREEN_WIDTH, height);

        _sendFlowerShowView = [[SendFlowerShowView alloc] initViewWithFrame:rect];
        [window addSubview:_sendFlowerShowView];
        WEAKSELFS
        _sendFlowerShowView.deleImageBlock = ^(NSString *str) {
            MCLog(@"strstr=======%@",str);
            [weakSelf deleOut];
           
        };
        _sendFlowerShowView.sendFlowersBlock = ^(UIButton * btn) {
            
            [weakSelf gosendflower];

        };

    }
    return _sendFlowerShowView;
}


#pragma mark dddddd
-(void)gosendflower{
      CGFloat height = 60/320.0*SCREEN_WIDTH;
                     
            [UIView animateWithDuration:0.25 animations:^{
                 self.sendFlowerShowView.frame = CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, height);

              } completion:^(BOOL finished) {
                  self.coverView.hidden = YES;
              }];
               
         
           SendFlowersAndHeartVC *send = [[SendFlowersAndHeartVC alloc]init];
           send.FlowerExeruuid = self.experDocuuid;
           send.docPhoto = self.HearImage;
           send.docNamee = self.DocNameChat;
           [self.navigationController pushViewController:send animated:YES];
    
}

-(void)deleOut{
        
     CGFloat height = 60/320.0*SCREEN_WIDTH;
              
     [UIView animateWithDuration:0.25 animations:^{
          self.sendFlowerShowView.frame = CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, height);

       } completion:^(BOOL finished) {
           self.coverView.hidden = YES;
       }];
        


}

- (instancetype)init {
    NSAssert(NO, @"ChatViewController: use +initWithSessionId");
    return nil;
}

-(instancetype)initWithSessionId:(NSString*)aSessionId {
    if (self = [super init]) {
        
        self.sessionId = [NSString stringWithFormat:@"8a48b5514fba2f87014fca72dec021e4#%@",aSessionId];
        isGroup = [aSessionId hasPrefix:@"g"];
    }
    return self;
}

-(void)viewDidLoad {
    [super viewDidLoad];
    
    
    
    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) {
        self.edgesForExtendedLayout =  UIRectEdgeNone;
    }
    islinkSuccessed = NO;
    dragIsYes = @"no"; //gzz190117
    [DeviceDelegateHelper sharedInstance].sessionId = self.sessionId;//gzz0906r
    
//    viewHeight = [UIScreen mainScreen].bounds.size.height-64.0f;
    
    viewHeight = [UIScreen mainScreen].bounds.size.height-kTopHeight;//gzz190117

    self.view.backgroundColor = [UIColor colorWithRed:0.93 green:0.93 blue:0.93 alpha:1];
    self.messageArray = [NSMutableArray array];
    
//    gzz20200407
//    当前聊天医生的uuid
//    [theUserDefaultGcc setObject:self.experDocuuid forKey:@"currentDocuuid"];

//    NSMutableDictionary *mdicc = [NSMutableDictionary dictionary];
//    NSString *keystr = [NSString stringWithFormat:@"%@uuidCount",self.experDocuuid];
//    mdicc[@"docUuid"] = self.experDocuuid;
//    [theUserDefaultGcc setObject:mdicc forKey:keystr];
    
    
    UIImageView *imageBim = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"jianbian5"]];
    imageBim.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    [self.view addSubview:imageBim];
    //gzz190116
//    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, self.view.frame.size.width,self.view.frame.size.height-ToolbarInputViewHeight-64.0f) style:UITableViewStylePlain];
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, self.view.frame.size.width,self.view.frame.size.height-ToolbarInputViewHeight-kTopHeight) style:UITableViewStylePlain];

    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) {
        self.tableView.frame = CGRectMake(0.0f, 0.0f, self.view.frame.size.width,self.view.frame.size.height-ToolbarInputViewHeight-kTopHeight);
    }
//    else {
//        self.tableView.frame = CGRectMake(0.0f, 0.0f, self.view.frame.size.width,self.view.frame.size.height-ToolbarInputViewHeight-44.0f);
//    }
    self.tableView.scrollsToTop = YES;
    self.tableView.tableFooterView = [[UIView alloc] init];
    self.tableView.dataSource = self;
    self.tableView.delegate = self;
    self.tableView.backgroundColor = [UIColor clearColor];
    
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    isScrollToButtom = YES;
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(scrollViewWillBeginDragging:)];
    [self.tableView addGestureRecognizer:tap];
    
    [self.view addSubview:self.tableView];
    
    
    
    //gzz171122
//    ECMessage *message = (ECMessage*)cellContent;
//    BOOL isSender = (message.messageState==ECMessageState_Receive?NO:YES);//gzz0427接受消息
//
//    NSInteger fileType = message.messageBody.messageBodyType;
//
//    NSString *cellidentifier = [NSString stringWithFormat:@"%@_%@_%d", isSender?@"issender":@"isreceiver",NSStringFromClass([message.messageBody class]),(int)fileType];
//    [self.tableView registerClass:[ChatViewCell class] forCellReuseIdentifier:cellidentifier];
    
    //gzz0330dev
    NSString  *steeee=[NSString stringWithFormat:@"%@",_DocNameChat];
    
    if (steeee.length>5) {
        self.navigationItem.title=steeee;
    }else{
        self.navigationItem.title=[NSString stringWithFormat:@"%@专家工作室",steeee];
        
    }
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback3"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(popViewController:)];
    
    self.navigationItem.leftBarButtonItem=backItem;
    
    
    UIView * bgview = [UIView createViewWithFrame:CGRectMake(0, 0, 40, 40) bgColor:[UIColor clearColor]];
    UIImageView *img = [UIImageView creatImageviewWithFrame:CGRectMake(11, 9.11, 18, 21.78) imaged:[UIImage imageNamed:@"fujindeyisheng"]];
    [bgview addSubview:img];
    
    UIButton *imagerger=[[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40,40)];
//    [imagerger setBackgroundImage:[UIImage imageNamed:@"fujindeyisheng"] forState:UIControlStateNormal];
    [imagerger addTarget:self action:@selector(addClickCh) forControlEvents:UIControlEventTouchUpInside];
    [bgview addSubview:imagerger];
  
    
    
    UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithCustomView:bgview];
    UIBarButtonItem *space=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    space.width=-10;
    
    self.navigationItem.rightBarButtonItems = @[space,item];
   
    
    //自定义后退按钮后，手势返回上一级控制器的功能恢复
    self.navigationController.interactivePopGestureRecognizer.delegate = nil;
    
    
    
    
    
//    [self createToolBarView];//gzz180115
    
    self.amplitudeImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"press_speak_icon_07"]];
    _amplitudeImageView.center = self.view.center;
    self.recordInfoLabel = [[UILabel alloc] initWithFrame:CGRectMake(0.0f, _amplitudeImageView.frame.size.height-40.0f, _amplitudeImageView.frame.size.width, 30.0f)];
    _recordInfoLabel.backgroundColor = [UIColor clearColor];
    _recordInfoLabel.textAlignment = NSTextAlignmentCenter;
    _recordInfoLabel.textColor = [UIColor whiteColor];
    _recordInfoLabel.font = [UIFont systemFontOfSize:13.0f];
    
    [_amplitudeImageView addSubview:_recordInfoLabel];
    [self.view addSubview:_amplitudeImageView];
    [self.view sendSubviewToBack:_amplitudeImageView];//gzz0803这段没用到在新的里面
    
    [self refreshTableView:nil];
    

}



- (void)addClickCh
{
    

    
    DocDetailNewVC *docer = [[DocDetailNewVC alloc]init];
    docer.strDocuuid = self.experDocuuid;
    docer.hidesBottomBarWhenPushed=YES;
    [self.navigationController pushViewController:docer animated:YES];
    
}


//获取会话消息里面为图片消息的路径数组 //gzz0823
- (NSArray *)getImageMessageLocalPath
{
   NSArray *imageMessage = [[DeviceDBHelper sharedInstance] getAllTypeMessageOfSessionId:self.sessionId type:MessageBodyType_Image];
    NSMutableArray *localPathArray = [NSMutableArray array];
    NSString *localPath ;//gzz0909= [NSString string];//gzz0317
//    NSString *localPath;

    for (int index = 0; index < imageMessage.count; index++) {
        localPath = [[imageMessage objectAtIndex:index] localPath];
        if (localPath) {//图片路径
            localPath = [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:localPath.lastPathComponent];
            [localPathArray addObject:localPath];
        }
    }
    return localPathArray;
}

#pragma mark 接口
- (void)DocdetlieRequest
{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    Dlpontlerexple *dlop = [Dlpontlerexple shareIndence];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    //    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    
    
    NSString *str = [NSString stringWithFormat:@"%@expertDetail",Public_URL];
    NSMutableDictionary *mdic = [NSMutableDictionary dictionary];
    mdic[@"patientUuid"] = dlop.uuidstring;
    mdic[@"expertUuid"] = self.experDocuuid;
    
    [manager POST: str parameters:mdic progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSMutableDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];//g11
        NSDictionary *Arrim=[NSDictionary dictionary];//gzz0406

        NSString *str;
        NSString *stracode =[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([stracode isEqualToString:@"1"]) {
            
        Arrim = [DicRemove clearErrorData11a:dic];//gzz0406

        str = [NSString stringWithFormat:@"%@",Arrim[@"data"]];
            if ([dic[@"data"] count]>0) {//gzz0912下午
                NSString *docNmae = [NSString stringWithFormat:@"%@",[dic[@"data"] objectForKey:@"realName"]];
                if (docNmae.length == 19 ) {//== 19
                    docNmae = [NSString stringWithFormat:@"%@专家工作室",[dic[@"data"] objectForKey:@"realName"]];

                    self.navigationItem.title  = docNmae;
                }else {
                
                
                }
                
            }
        }else{
            
            
        }
        MCLog(@"--chat专家详情－－%@",dic);
        if ([str isEqualToString:@"暂无"]) {
          
        }
        else{
            

            NSDictionary *_dicDetail =[DicRemove clearErrorData11a:dic[@"data"]];//gzz0406

            _HearImage = _dicDetail[@"photo"];
  
        }
        
        [self.tableView reloadData];

    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        

    }];
}



// 返回点击图片的索引号
- (NSInteger)getImageMessageIndex:(ECImageMessageBody *)mediaBody
{
    NSArray *array = [self getImageMessageLocalPath];
    NSInteger index = 0;
    for (int i= 0;i<array.count;i++) {
        
        if ([[array objectAtIndex:i] isEqualToString:mediaBody.localPath]) {
            index = i;
        }
    }
    return index;
}

- (void)scrollViewToBottom:(BOOL)animated {
    if (self.tableView && self.tableView.contentSize.height > self.tableView.frame.size.height) {
        CGPoint offset = CGPointMake(0, self.tableView.contentSize.height - self.tableView.frame.size.height);
        [self.tableView setContentOffset:offset animated:YES];
    }
}



//view出现时触发
-(void)viewWillAppear:(BOOL)animated {
    
    [super viewWillAppear:animated];
    
    //gzz0314
//    PublicAdvisoryViewController  *pub=[PublicAdvisoryViewController new];
//    //gzz0303点击红点消失
//
//    pub.tabBarItem.badgeValue =nil;
    
    self.navigationController.navigationBar.barTintColor = RGB(60, 199, 192);
    [self.navigationController.navigationBar setTitleTextAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:NavTitleFont],
                                                                      
                                                                      NSForegroundColorAttributeName:[UIColor whiteColor]}];
    [_containerView removeFromSuperview];//gzz180411
     [self createToolBarView];//gzz180115
    Dlpontlerexple *ddd=[Dlpontlerexple shareIndence];
    NSString *uu = [NSString stringWithFormat:@"%@", ddd.uuidstring];
    MCLog(@"uuid ===%@",uu);
    
    DeviceDBHelper *idbddd=[DeviceDBHelper sharedInstance];
    [idbddd  openDataBasePath:uu];
    NSString *strcll = [NSString stringWithFormat:@"%@",_dicerdoceNofi];
    if ([strcll isEqualToString:@"nofi"])
    {
        [self DocdetlieRequest];//不是从我的专家进的话 得不到信息 重新请求下
  
    }
    //else{
        
        [self.tableView reloadData];//gzz180601 推送点进来时toolbar上去又回来

//    }
    nsuserdf = [NSUserDefaults standardUserDefaults];
    
    //gzz0912 gzz20200414
//    __weak ChatViewController *weakself = self;// gzz0912
//    dispatch_once(&scrollBTMOnce , ^{
//        [weakself scrollViewToBottom:YES];
//    });
    
 
//    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshTableView:) name:KNOTIFICATION_onMesssageChanged object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(recordingAmplitude:) name:KNOTIFICATION_onRecordingAmplitude object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrame:) name:UIKeyboardWillChangeFrameNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(sendMessageCompletion:) name:KNOTIFICATION_SendMessageCompletion object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(clearMessageArray:) name:KNotification_DeleteLocalSessionMessage object:nil];

    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(downloadMediaAttachFileCompletion:) name:KNOTIFICATION_DownloadMessageCompletion object:nil];

    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(scrollTableView) name:KNOTIFICATION_ScrollTable object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(loadMoreMessage) name:KNOTIFICATION_RefreshMoreData object:nil];

    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(notifer11) name:@"CancelExpertDot" object:nil];//gzz1128


}

-(void)notifer11{//gzz1128
    
    DocUserdefulE = [NSUserDefaults standardUserDefaults];
    doccuuidarrE =[[NSMutableArray alloc]initWithArray:[DocUserdefulE objectForKey:@"expertInfo"]];
    if ([doccuuidarrE containsObject:_experDocuuid]) {
        //包含这个uuid 不做事情
    }else{
        [self.navigationController popViewControllerAnimated:YES];
 
    }
}

//view出现后触发
-(void)viewDidAppear:(BOOL)animated {
    
    [super viewDidAppear:animated];
    

    
    extern NSString *const Notification_ChangeMainDisplay;
    [[NSNotificationCenter defaultCenter] postNotificationName:Notification_ChangeMainDisplay object:@0];
    
    dispatch_once(&emojiCreateOnce, ^{
        _emojiView = [CustomEmojiView shardInstance];
        _emojiView.delegate = self; //现在是在最下面
        _emojiView.frame = CGRectMake(0, self.view.frame.size.height, self.view.frame.size.width, 216.0f);
        
        if (_emojiView.superview == nil) {
            [self.view addSubview:_emojiView];
        }
    });
    
    [[DeviceDBHelper sharedInstance] markMessagesAsReadOfSession:self.sessionId];
    
}



//view消失时触发
-(void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];

    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillChangeFrameNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:KNOTIFICATION_onRecordingAmplitude object:nil];
    
    if (self.playVoiceMessage) {
        //如果前一个在播放
        objc_setAssociatedObject(self.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
        [[ECDevice sharedInstance].messageManager stopPlayingVoiceMessage];
    }
    
//退出对话时清除对话中的通知
    REqumutarr = [[NSMutableArray alloc]initWithArray:[nsuserdf objectForKey:@"FLLOWDOCEXPERT"]]; //2
//    NSMutableArray *nofitmutrr = [NSMutableArray array];gzz0309
    
//    nofitMutarray =[[NSMutableArray alloc]initWithArray:[defaults objectForKey:@"FLLOWDOCEXPERT"]];
    NSString *measeguuid = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];
    NSString *sessiondid = [NSString stringWithFormat:@"%@",self.sessionId];

    for (int i=0; i<REqumutarr.count; i++) {
        NSString *messageforms = [NSString stringWithFormat:@"%@",[[REqumutarr objectAtIndex:i] objectForKey:@"messageuuid"]];
        NSString *gxmessageforms = [NSString stringWithFormat:@"%@",[[REqumutarr objectAtIndex:i] objectForKey:@"messagefroms"]];
    
        if ([messageforms isEqualToString:measeguuid]&&[gxmessageforms isEqualToString:sessiondid]) {
            [REqumutarr removeObjectAtIndex:i];
        }
    }
    [nsuserdf setValue:REqumutarr forKey:@"FLLOWDOCEXPERT"]; //gzz0310 清除之后重新设置值 //2 set
    
    
    //gzz0310 forkey
    MCLog(@"chatview  forkey就这一个 这个文件中  fllowdocecpert  ==%@",[nsuserdf objectForKey:@"FLLOWDOCEXPERT"]);
   
    
    
    PulistChatMutarr = [[NSMutableArray alloc]initWithArray:[nsuserdf objectForKey:@"PUBLICBENEFITCONSULT"]];

    for (int i=0; i<PulistChatMutarr.count; i++) {
        NSString *messageforms = [NSString stringWithFormat:@"%@",[[PulistChatMutarr objectAtIndex:i] objectForKey:@"messageuuid"]];
        NSString *gxmessageforms = [NSString stringWithFormat:@"%@",[[PulistChatMutarr objectAtIndex:i] objectForKey:@"messagefroms"]];
        //measeguuid 患者的uuid  ; sessiondid 专家的uuid 发送者的uuid
        if ([messageforms isEqualToString:measeguuid]&&[gxmessageforms isEqualToString:sessiondid]) {
            [PulistChatMutarr removeObjectAtIndex:i];
        }
    }
  //gzz0315读过公益咨询后,删除此会话
//    if ([PulistChatMutarr containsObject:self.sessionId]) {
//        [PulistChatMutarr removeObject:self.sessionId];
//    }
    [nsuserdf setValue:PulistChatMutarr forKey:@"PUBLICBENEFITCONSULT"];
    [nsuserdf synchronize];
    
    self.playVoiceMessage = nil;
    [[NSNotificationCenter defaultCenter] postNotificationName:@"MYDOCLabelDot" object:nil];//gzz0627
//    [super viewWillDisappear:animated];gzz170411

}

-(void)dealloc {
    [self.tableView.layer removeAllAnimations];
    self.tableView = nil;
    [DeviceDelegateHelper sharedInstance].sessionId = nil;//gzz0906r
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

#pragma mark - private method  gzz0427加载更多消息
-(void)loadMoreMessage {
    
    ECMessage *message = [self.messageArray objectAtIndex:1];
    NSArray * array = [[DeviceDBHelper sharedInstance] getMessageOfSessionId:self.sessionId beforeTime:message.timestamp andPageSize:MessagePageSize];
    
    CGFloat offsetOfButtom = self.tableView.contentSize.height-self.tableView.contentOffset.y;
    
    NSInteger arraycount = array.count;
    if (array.count == 0) {
        [self.messageArray removeObjectAtIndex:0];
    } else {
        NSIndexSet *indexset = [NSIndexSet indexSetWithIndexesInRange:NSMakeRange(1, arraycount)];
        [self.messageArray insertObjects:array atIndexes:indexset];
        if (array.count < MessagePageSize) {
            [self.messageArray removeObjectAtIndex:0];
        }
    }
    [self.tableView reloadData];
    self.tableView.contentOffset = CGPointMake(0.0f, self.tableView.contentSize.height-offsetOfButtom);

//    [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:arraycount inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:NO];
}

//清空聊天记录  没有被调用gzz0427
-(void)clearBtnClicked {
    [self endOperation];
    MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.labelText = @"正在清除聊天内容";
    hud.margin = 10.f;
    hud.removeFromSuperViewOnHide = YES;
    hud.dimBackground = YES;
    
    [self performSelectorOnMainThread:@selector(clearTableView) withObject:nil waitUntilDone:[NSThread isMainThread]];

    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        [[DeviceDBHelper sharedInstance] deleteAllMessageOfSession:self.sessionId];
        dispatch_async(dispatch_get_main_queue(), ^{
            [[NSNotificationCenter defaultCenter] postNotificationName:@"mainviewdidappear" object:nil];
            [hud hide:YES afterDelay:1.0];
        });
    });
}

//导航栏的右按钮  现在没有到  可能以后有群组的时候用到0427
-(void)navRightBarItemTap:(id)sender {
    
    DetailsViewController *groupDetailView = [[DetailsViewController alloc] init];
    groupDetailView.groupId = self.sessionId;
    [self.navigationController pushViewController:groupDetailView animated:YES];
}

//返回上一层
-(void)popViewController:(id)sender {//gzz1130!
    
//    if ([self.sessionId isEqualToString:KDeskNumber]) {
//        [[ECDevice sharedInstance].messageManager finishConsultationWithAgent:KDeskNumber completion:^(ECError *error, NSString *agent) {
//            //gzz0616zheng
//        }];
//    }
    
    isScrollToButtom = NO;
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillChangeFrameNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:KNOTIFICATION_ScrollTable object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:KNOTIFICATION_RefreshMoreData object:nil];
    [[DeviceDBHelper sharedInstance] markMessagesAsReadOfSession:self.sessionId];
    [self.view.layer removeAllAnimations];
    [self.tableView.layer removeAllAnimations];
    
    NSString *strcll = [NSString stringWithFormat:@"%@",_dicerdoceNofi];
    if ([strcll isEqualToString:@"nofi"]) {
        [[NSNotificationCenter defaultCenter] postNotificationName:@"YIDIDENGLUTISHI" object:nil];

    }
    else{
    [self.navigationController popViewControllerAnimated:YES];
}
}


- (void)showMenuViewController:(UIView *)showInView messageType:(MessageBodyType)messageType message:(ECMessage*)message {
    
//    UIImageView *iamgev = (UIImageView *)[self.view viewWithTag:1000];
//    iamgev.backgroundColor = [UIColor clearColor];gzz0718 改变背景色但是没有成功
    
    if (_menuController == nil) {
        _menuController = [UIMenuController sharedMenuController];
    }
    
    if (_copyMenuItem == nil) {
        _copyMenuItem = [[UIMenuItem alloc] initWithTitle:@"复制" action:@selector(copyMenuAction:)];
    }
    
    if (_deleteMenuItem == nil) {
        _deleteMenuItem = [[UIMenuItem alloc] initWithTitle:@"删除" action:@selector(deleteMenuAction:)];
    }
    
    
    if (_revokeMenuItem == nil) {
        _revokeMenuItem = [[UIMenuItem alloc] initWithTitle:@"撤回" action:@selector(revokeMessage:)];
    }//gzz171016
    
    if (messageType == MessageBodyType_Text) {
        [_menuController setMenuItems:@[_copyMenuItem, _deleteMenuItem]];
    } else {
        [_menuController setMenuItems:@[_deleteMenuItem]];
    }
    
    
    //gzz171016
    NSTimeInterval tmp = [[NSDate date] timeIntervalSince1970]*1000;
    NSInteger count = tmp - message.timestamp.longLongValue;
    if (message.messageState == ECMessageState_SendSuccess && count<=RevokeMessageTime && ![message.from isEqualToString:message.to]) {
        NSMutableArray *arr = [_menuController.menuItems mutableCopy];
        [arr addObject:_revokeMenuItem];
        _menuController.menuItems = arr;
    }
    
    
    [_menuController setTargetRect:showInView.frame inView:showInView.superview];
    [_menuController setMenuVisible:YES animated:YES];
}

#pragma mark - notification method

-(void)clearMessageArray:(NSNotification*)notification{
    NSString *session = (NSString*)notification.object;
    if ([session isEqualToString:self.sessionId]) {
        [self performSelectorOnMainThread:@selector(clearTableView) withObject:nil waitUntilDone:[NSThread isMainThread]];
    }
}

-(void)clearTableView {
    [self.messageArray removeAllObjects];
    [self.tableView reloadData];
}
//gzz0419 刷新tableview 内容是容联中的数据 0407
-(void)refreshTableView:(NSNotification*)notification {
    
 
////    gzz20200407 在这里进行判断
    NSUserDefaults *expertInfo=[NSUserDefaults standardUserDefaults];
                  NSMutableArray *arrY=[NSMutableArray array];
       if ([[expertInfo objectForKey:@"expertInfo"] isKindOfClass:[NSArray class]]) {
                      arrY =  [NSMutableArray  arrayWithArray:[expertInfo objectForKey:@"expertInfo"]];;
        }
    if ([arrY containsObject:self.experDocuuid]) {
//        随访患者
        NSMutableDictionary *mdic = [NSMutableDictionary dictionary];
         NSString *keystr = [NSString stringWithFormat:@"%@+uuidCountDoc",self.experDocuuid];
         mdic =  [NSMutableDictionary dictionaryWithDictionary:[theUserDefaultGcc objectForKey:keystr]];
         NSString *countstr = [NSString stringWithFormat:@"%@",mdic[@"count"]];
        NSInteger count = [countstr integerValue];

        if (count==5) {
            NSString *todaystr = [NSString stringWithFormat:@"%@",[DicRemove todayDate]];
            NSString *datekeystr = [NSString stringWithFormat:@"%@docDate",self.experDocuuid];
            NSString *dateSte = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:datekeystr]];
            BOOL isPass = NO;//今天是不是已经提示过了
            if ([dateSte isEqualToString:todaystr]) {
                isPass = YES;
            }else{
                isPass = NO;
                [theUserDefaultGcc setObject:todaystr forKey:datekeystr];
            }
            if (isPass) {

            }else{

                //   0407
                [self.sendFlowerShowView  initData:[NSDictionary dictionary]];
                self.coverView.hidden = NO;
                CGFloat height = 60/320.0*SCREEN_WIDTH+SafeAreaBottomHeight;

                [UIView animateWithDuration:0.25 animations:^{
                 
                     self.sendFlowerShowView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height-height, [UIScreen mainScreen].bounds.size.width, height);
                }];

            }




        }else{

        }


    }else{
//        公益咨询
        NSMutableDictionary *mdic = [NSMutableDictionary dictionary];
             NSString *keystr = [NSString stringWithFormat:@"%@+uuidCountCousult",self.experDocuuid];
             mdic =  [NSMutableDictionary dictionaryWithDictionary:[theUserDefaultGcc objectForKey:keystr]];
             NSString *countstr = [NSString stringWithFormat:@"%@",mdic[@"count"]];
            NSInteger count = [countstr integerValue];
            if (count==3) {
 MCLog(@"===ogong=公益咨询=")

                NSString *todaystr = [NSString stringWithFormat:@"%@",[DicRemove todayDate]];

//                           NSString *dateSte = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:@"consultDate"]];
                
                NSString *datekeystr = [NSString stringWithFormat:@"%@consultDate",self.experDocuuid];
                NSString *dateSte = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:datekeystr]];
                           BOOL isPass = NO;//今天是不是已经提示过了
                           if ([dateSte isEqualToString:todaystr]) {
                               isPass = YES;
                           }else{
                               isPass = NO;
                               [theUserDefaultGcc setObject:todaystr forKey:datekeystr];
                           }
                           if (isPass) {

                           }else{
                               [self.sendFlowerShowView  initData:[NSDictionary dictionary]];
                                            self.coverView.hidden = NO;
                                            CGFloat height = 60/320.0*SCREEN_WIDTH+SafeAreaBottomHeight;

                                [UIView animateWithDuration:0.25 animations:^{
                                 
                                     self.sendFlowerShowView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height-height, [UIScreen mainScreen].bounds.size.width, height);
                                }];
                               
                           }
            }else{

            }

    }

//
    
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    
    if (notification == nil) {
        
        [self.messageArray removeAllObjects];
        
        NSArray* message = [[DeviceDBHelper sharedInstance] getLatestHundredMessageOfSessionId:self.sessionId andSize:MessagePageSize];
        if (message.count == MessagePageSize) {
            [self.messageArray addObject:[NSNull null]];
        }
        [self.messageArray addObjectsFromArray:message];
        [self.tableView reloadData];
        
    } else {//gzz171130这里是针对撤回消息的
        if (notification.userInfo.allValues.count <= 0) {
            ECMessage *message = (ECMessage*)notification.object;
            if (![message.sessionId isEqualToString:self.sessionId]) {
                return;
            }
            
            [[NSNotificationCenter defaultCenter] postNotificationName:@"mainviewdidappear" object:nil];
            [self.messageArray addObject:message];
            [self.tableView insertRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:self.messageArray.count-1 inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
        }else{
            NSString *message = notification.userInfo[@"sessionid"];
            if (![message isEqualToString:self.sessionId]) {
                return;
            }
            
//            [[NSNotificationCenter defaultCenter] postNotificationName:@"mainviewdidappear" object:nil];
//            [self.messageArray addObject:message];
//            [self.tableView insertRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:self.messageArray.count-1 inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
            
        }
        
//        ECMessage *message = (ECMessage*)notification.object;
//        if (![message.sessionId isEqualToString:self.sessionId]) {
//            return;
//        }
//
//        [[NSNotificationCenter defaultCenter] postNotificationName:@"mainviewdidappear" object:nil];
//        [self.messageArray addObject:message];
//        [self.tableView insertRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:self.messageArray.count-1 inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
    }
WEAKSELFS
    if (self.messageArray.count>0){//1.1
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(300 * NSEC_PER_MSEC)), dispatch_get_main_queue(), ^{//1.4
            NSString *isFile = [NSString stringWithFormat:@"%@",[theUserDefaultGcc objectForKey:@"isFileComing"]];//gzz171017 终于可以了gzz171016
            if ([isFile isEqualToString:@"yesFileNameOh"]) {
                [weakSelf.messageArray removeAllObjects];
                
                NSArray* message = [[DeviceDBHelper sharedInstance] getLatestHundredMessageOfSessionId:self.sessionId andSize:MessagePageSize];
                if (message.count == MessagePageSize) {
                    [weakSelf.messageArray addObject:[NSNull null]];
                }
                [weakSelf.messageArray addObjectsFromArray:message];
                [weakSelf.tableView reloadData];
                [theUserDefaultGcc setObject:@"nno" forKey:@"isFileComing"];//yesFileNameOh
                MCLog(@"expert");

            }
            
            
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_ScrollTable object:nil];
        });
    }
}


-(void)scrollTableView {
    if (self && self.tableView && self.messageArray.count>0) {//1.5
        [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:self.messageArray.count-1 inSection:0] atScrollPosition:UITableViewScrollPositionBottom animated:YES];
    }
}

-(void)scrollViewtobottom{
    [self scrollViewToBottom:YES];
}

/**
 *@brief 键盘的frame更改监听函数
 */
- (void)keyboardWillChangeFrame:(NSNotification *)notification {
    
    NSDictionary *userInfo = notification.userInfo;
    CGRect endFrame = [userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    CGRect beginFrame = [userInfo[UIKeyboardFrameBeginUserInfoKey] CGRectValue];
    CGFloat duration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];
    CGFloat frameY = self.view.frame.size.height-ToolbarInputViewHeight;
//    CGFloat frameY = SCREEN_HEIGHT-ToolbarInputViewHeight-SafeAreaBottomHeight;//19

    CGRect frame = _containerView.frame;
    
    if (beginFrame.origin.y == [[UIScreen mainScreen] bounds].size.height) {
        //显示键盘
        toolbarDisplay = ToolbarDisplay_None;
        moreviewHide.hidden = YES;//gzz20190909

        _isDisplayKeyborad = YES;
        
        //只显示输入view
//        frameY = endFrame.origin.y-_containerView.frame.size.height+ToolbarMoreViewHeight;
        if (kISiPhoneX) {
            frameY = endFrame.origin.y-_containerView.frame.size.height+ToolbarMoreViewHeight+34;

        }else{
            frameY = endFrame.origin.y-_containerView.frame.size.height+ToolbarMoreViewHeight;

        }
    } else if (endFrame.origin.y == [[UIScreen mainScreen] bounds].size.height) {
        //隐藏键盘
        _isDisplayKeyborad = NO;
        
        //根据不同的类型显示toolbar  gzz190117
        switch (toolbarDisplay) {
            case ToolbarDisplay_Emoji: {
                __weak __typeof(self)weakSelf = self;
                frameY = endFrame.origin.y-frame.size.height-126.0f;
                void(^animations)() = ^{
                    __strong __typeof(weakSelf)strongSelf = weakSelf;
                    if (strongSelf) {
                        CGRect frame = _emojiView.frame;
//                        frame.origin.y = viewHeight-_emojiView.frame.size.height;
                        if (kISiPhoneX) {
                            frame.origin.y = viewHeight-_emojiView.frame.size.height-34;
                        }else{
                            frame.origin.y = viewHeight-_emojiView.frame.size.height;
                            
                        }
                        _emojiView.frame=frame;
                    }
                };

                [UIView animateWithDuration:0.25 delay:0.1f options:(UIViewAnimationOptionCurveEaseIn | UIViewAnimationOptionBeginFromCurrentState) animations:animations completion:nil];
            }
                break;
                
            case ToolbarDisplay_Record:
                frameY = endFrame.origin.y-frame.size.height+ToolbarMoreViewHeight;
                break;
                
            case ToolbarDisplay_More:
                frameY = endFrame.origin.y-frame.size.height;
                break;
                
            default:
                frameY = endFrame.origin.y-frame.size.height+ToolbarMoreViewHeight;
                break;
        }
    } else {
        frameY = endFrame.origin.y-frame.size.height+ToolbarMoreViewHeight;
    }
    
//    frameY -= 64.0f;
    frameY -= kTopHeight;//gzz190117

    if (kISiPhoneX) {//gzz171212
        
        [self toolbarDisplayChangedToFrameY:frameY-SafeAreaBottomHeight andDuration:duration];
        
    }else{
        
        [self toolbarDisplayChangedToFrameY:frameY andDuration:duration];
        
        
    }
    
}

#pragma mark - UITableViewDelegate==================== gzz190117scrollViewWillBeginDragging

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView {
    MCLog(@"scrollViewWillBeginDragging");
//      toolbarDisplay = ToolbarDisplay_None; //gzz190117
    moreviewHide.hidden = YES;
    dragIsYes = @"yes"; //gzz190117
    
    isScrollToButtom = NO;
    if (_isDisplayKeyborad) {
        [self.view endEditing:YES];
    } else {
        if (kISiPhoneX) {//gzz171212
            [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight-SafeAreaBottomHeight andDuration:0.25];
            
        }else{
            [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight andDuration:0.25];
            //
            
        }
    }
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{

    id content = [self.messageArray objectAtIndex:indexPath.row];
    if ([content isKindOfClass:[NSNull class]]) {
        return 44.0f;
    }
    
    ECMessage *message = (ECMessage*)content;
    
//#warning 判断Cell是否显示时间
    BOOL isShow = NO;
    if (indexPath.row == 0) {
        isShow = YES;
    } else {
        id preMessagecontent = [self.messageArray objectAtIndex:indexPath.row-1];
        if ([preMessagecontent isKindOfClass:[NSNull class]]) {
            isShow = YES;
        } else {
            
            NSNumber *isShowNumber = objc_getAssociatedObject(message, &KTimeIsShowKey);
            if (isShowNumber) {
                isShow = isShowNumber.boolValue;
            } else {
                ECMessage *preMessage = (ECMessage*)preMessagecontent;
                long long timestamp = message.timestamp.longLongValue;
//                NSLog(@"timestamp %zd",timestamp);
                long long pretimestamp = preMessage.timestamp.longLongValue;
//                NSLog(@"  pre tiem stamep  %zd",pretimestamp);
                isShow = ((timestamp-pretimestamp)>180000); //与前一条消息比较大于3分钟显示
            }
        }
    }
    objc_setAssociatedObject(message, &KTimeIsShowKey, @(isShow), OBJC_ASSOCIATION_RETAIN_NONATOMIC);
    
    //根据cell内容获取高度
    CGFloat height = 0.0f;
    switch (message.messageBody.messageBodyType) {
            
            
        case MessageBodyType_None: {//gzz171016
            if ([[message.messageBody class] isSubclassOfClass:[ECRevokeMessageBody class]]) {
                height = [ChatRevokeCell getHightOfCellViewWith:message.messageBody];
            }
        }
            break;
            
        case MessageBodyType_Text:
            height = [ChatViewTextCell getHightOfCellViewWith:message.messageBody];
            break;
        case MessageBodyType_Voice:
        case MessageBodyType_Video:
        case MessageBodyType_Image:
        case MessageBodyType_File: {
//#warning 根据文件的后缀名来获取多媒体消息的类型 麻烦 缺少displayName
            ECFileMessageBody *body = (ECFileMessageBody *)message.messageBody;
            if (body.localPath.length > 0) {
                body.localPath = [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:body.localPath.lastPathComponent];
            }
            
            if (body.displayName.length==0) {
                if (body.localPath.length > 0) {
                    body.displayName = body.localPath.lastPathComponent;
                } else if (body.remotePath.length>0) {
                    body.displayName = body.remotePath.lastPathComponent;
                } else {
                    body.displayName = @"无名字";
                }
            }
            
            switch (message.messageBody.messageBodyType) {
                case MessageBodyType_Voice:
                    height = [ChatViewVoiceCell getHightOfCellViewWith:body];
                    break;
                case MessageBodyType_Image:
                    height = [ChatViewImageCell getHightOfCellViewWith:body];
                    break;
                    
                case MessageBodyType_Video:
                    height = [ChatViewVideoCell getHightOfCellViewWith:body];
                    break;
                    
                default:
                    height = [ChatViewFileCell getHightOfCellViewWith:body];
                    break;
            }
        }
            break;
            //gzz170829
        case MessageBodyType_Preview:{
            ECPreviewMessageBody *body = (ECPreviewMessageBody *)message.messageBody;
            if (body.thumbnailLocalPath.length > 0) {
                body.thumbnailLocalPath = [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:body.thumbnailLocalPath.lastPathComponent];
            }
            if (body.localPath.length > 0) {
                body.localPath = [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:body.localPath.lastPathComponent];
            }
            
            height = [ChatViewPreviewCell getHightOfCellViewWith:message.messageBody];
        }
            break;
            
        default: {
            ECFileMessageBody *body = (ECFileMessageBody *)message.messageBody;
            body.displayName = body.remotePath.lastPathComponent;
            height = [ChatViewFileCell getHightOfCellViewWith:body];
            break;
        }
    }
    
    CGFloat addHeight = 0.0f;
    BOOL isSender = (message.messageState==ECMessageState_Receive?NO:YES);
    if (!isSender && message.isGroup) {
        addHeight = 15.0f;
        
    }
//#warning 显示的时间高度为30.0f
    return height+(isShow?30.0f:0.0f)+addHeight;
}
#pragma mark - UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    MCLog(@"---self.messageArray-gzz0219-%@---",self.messageArray);
    return self.messageArray.count;
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    id cellContent = [self.messageArray objectAtIndex:indexPath.row];
    
    if ([cellContent isKindOfClass:[NSNull class]]) {
        
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cellrefresscellid"];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cellrefresscellid"];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            //            cell.backgroundColor = [UIColor colorWithRed:0.93 green:0.93 blue:0.93 alpha:1];
            UIActivityIndicatorView * activityView = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
            activityView.tag = 100;
            activityView.center = cell.contentView.center;
            [cell.contentView addSubview:activityView];
        }
        UIActivityIndicatorView * activityView = (UIActivityIndicatorView *)[cell.contentView viewWithTag:100];
        [activityView startAnimating];
        
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_RefreshMoreData object:nil];
        });
        return cell;
    }
    
    ECMessage *message = (ECMessage*)cellContent;
    BOOL isSender = (message.messageState==ECMessageState_Receive?NO:YES);//gzz0427接受消息
    
    NSInteger fileType = message.messageBody.messageBodyType;
    
    NSString *cellidentifier = [NSString stringWithFormat:@"%@_%@_%d", isSender?@"issender":@"isreceiver",NSStringFromClass([message.messageBody class]),(int)fileType];
//    MCLog(@"cellidentifier=1130==%@",cellidentifier);
    ChatViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellidentifier];//gzz0109

    if (cell == nil) {
        switch (message.messageBody.messageBodyType) {
                ///gzz171016
//                MCLog(@"message.messageBody.messageBodyType==%@",message.messageBody.messageBodyType);
            case MessageBodyType_None: {
                if ([[message.messageBody class] isSubclassOfClass:[ECRevokeMessageBody class]]) {
                    //                    cell = [[ChatRevokeCell alloc]  就是这里不对的initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellidentifier];
                    cell = [[ChatRevokeCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
                }
            }
                break;
                
            case MessageBodyType_Text:{
            
                cell = [[ChatViewTextCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
//                cell.delegate = self;
                cell.delegate = self;//gzz170829

                break;
            }
            case MessageBodyType_Voice:
                cell = [[ChatViewVoiceCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
                break;
            case MessageBodyType_Video:
                cell = [[ChatViewVideoCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
                break;
            case MessageBodyType_Image:
                cell = [[ChatViewImageCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
              
                break;
                //gzz170829
            case MessageBodyType_Preview:
                //                cell = [[ChatViewPreviewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellidentifier];
                
                
                cell = [[ChatViewPreviewCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
                break;
                
            default:
                cell = [[ChatViewFileCell alloc] initWithIsSender:isSender reuseIdentifier:cellidentifier];
                break;
        }
//        cell.frame = CGRectMake(0, 0, SCREEN_WIDTH, cell.frame.size.height);//gzz0718 原来没有注释的
        //这里原来是。。。。
//        cell.frame = CGRectMake(0, 0, SCREEN_WIDTH, cell.frame.size.height);
//        cell.frame = CGRectMake(0, scrollBTMOnce,  void srandom(14) , 0);
        
        UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(cellHandleLongPress:)];
        [cell.bubbleView addGestureRecognizer:longPress];
        
    }
    
    [cell bubbleViewWithData:[self.messageArray objectAtIndex:indexPath.row]];
    
    if(!cell.isSender){
        cell.portraitImg.userInteractionEnabled= YES;
        UITapGestureRecognizer * tap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(ImageACtion:)];
        NSString *imageurl = [NSString stringWithFormat:@"%@%@",ImageUrl,_HearImage];
        [cell.portraitImg setHeader:imageurl];
//        [cell.portraitImg sd_setImageWithURL:[NSURL URLWithString:imageurl] placeholderImage:[UIImage imageNamed:@"patientMoren"]];//gzz0919h
        cell.portraitImg.tag = (NSInteger)indexPath.row;
        
        [cell.portraitImg addGestureRecognizer:tap];
        
        
    }
    cell.backgroundColor = [UIColor clearColor];
    return cell;


}

//gzz0109  代理
-(void)urlTouch:(NSString *)url{

    WkwebViewController *wk = [WkwebViewController new];
    wk.urlStr = url;//gzz170829
    wk.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:wk animated:YES];
    
    
}



//gzz170829
#pragma mark - 发送抓取链接消息
- (void)onSendPreviewMsgWithUrl:(NSString *)url title:(NSString *)title imgRemotePath:(NSString *)imgRemotePath imgLocalPath:(NSString *)imgLocalPath imgThumbPath:(NSString *)imgThumbPath description:(NSString *)description {
    
    ECPreviewMessageBody *msgBody = [[ECPreviewMessageBody alloc] initWithFile:imgLocalPath displayName:[imgLocalPath lastPathComponent]];
    msgBody.url = url;
    msgBody.title = title;
    msgBody.remotePath = imgRemotePath;
    msgBody.desc = description;
    msgBody.thumbnailLocalPath = imgThumbPath;
    //    msgBody.url = @"http://www.baidu.com";
    //    msgBody.title = @"主题";
    //    msgBody.remotePath = @"https://gss0.bdstatic.com/5bd1bjqh_Q23odCf/static/wiseindex/img/fetch_ing_8_0.png";
    //    msgBody.desc = @"Www.baidu.com描述文字";
    //    msgBody.thumbnailLocalPath = @"input_box";
    
    MCLog(@"url=%@ \n title = %@\n  remotePath = %@\n  desc= %@\n  thumbnailLocalPath = %@",url,title,imgRemotePath,description,imgThumbPath);
    
    
    [self sendMediaMessage:msgBody];
    
}

//gzz171016
#pragma mark - 消息撤回
-(void)revokeMessage:(UIMenuController*)menu {
    
    [_menuController setMenuItems:nil];
    if (_longPressIndexPath && _longPressIndexPath.row >= 0) {
        ECMessage *message = [self.messageArray objectAtIndex:_longPressIndexPath.row];
        NSNumber* isplay = objc_getAssociatedObject(message, &KVoiceIsPlayKey);
        if (isplay.boolValue) {
            objc_setAssociatedObject(self.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
            [[ECDevice sharedInstance].messageManager stopPlayingVoiceMessage];
            self.playVoiceMessage = nil;
        }
        
        NSInteger row = _longPressIndexPath.row;
        __weak typeof(self)weakSelf = self;
        [[ECDevice sharedInstance].messageManager revokeMessage:message completion:^(ECError *error, ECMessage *message) {
            
            __strong typeof(weakSelf)strongSelf = weakSelf;
            MCLog(@"撤回消息 error=%d", (int)error.errorCode);
            if (error.errorCode == ECErrorType_NoError) {
                ECRevokeMessageBody *revokeBody = [[ECRevokeMessageBody alloc] initWithText:@"你撤回了一条消息"];
                ECMessage *amessage = [[ECMessage alloc] initWithReceiver:message.sessionId body:revokeBody];
                NSDate* date = [NSDate dateWithTimeIntervalSinceNow:0];
                NSTimeInterval tmp =[date timeIntervalSince1970]*1000;
                amessage.timestamp = [NSString stringWithFormat:@"%lld", (long long)tmp];
                amessage.isRead = YES;
                amessage.isGroup = message.isGroup;
                amessage.messageState = ECMessageState_SendSuccess;
                [strongSelf.messageArray replaceObjectAtIndex:row withObject:amessage];
                [strongSelf.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:row inSection:0]] withRowAnimation:UITableViewRowAnimationFade];
                [strongSelf scrollTableView];
                [[DeviceDBHelper sharedInstance] updateSrcMessage:message.sessionId msgid:message.messageId withDstMessage:amessage];
            } else {
                MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.labelText = [NSString stringWithFormat:@"错误码:%d",(int)error.errorCode];
                hud.margin = 10.0f;
                hud.removeFromSuperViewOnHide = YES;
                [hud hide:YES afterDelay:1];
            }
        }];
    }
    
    _longPressIndexPath = nil;
}




//touxiang头像点击事件
-(void)ImageACtion:(UITapGestureRecognizer *)tap{
    
    UIImageView * tapImar =(UIImageView * )tap.view;
    
    
    
    
    DocDetailNewVC *docer = [[DocDetailNewVC alloc]init];

    docer.strDocuuid = self.experDocuuid;
    [self.navigationController pushViewController:docer animated:YES];
    ECMessage * Detailemesagec =[self.messageArray objectAtIndex:tapImar.tag];

    
    MCLog(@"专家查看详情-- %@",Detailemesagec.from);
    
}

#pragma mark - GestureRecognizer

//点击tableview，结束输入操作 gzz190117
-(void)endOperation{
    if (toolbarDisplay == ToolbarDisplay_Record) {
        return;
    }
    toolbarDisplay = ToolbarDisplay_None;
    if (_isDisplayKeyborad) {
        [self.view endEditing:YES];
    } else {
        //gzz190117 18
//        [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight andDuration:0.25];
        if (kISiPhoneX) {//gzz171212
            [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight-SafeAreaBottomHeight andDuration:0.25];
        }else{
            [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight andDuration:0.25];
            
        }
    }
}

-(void)cellHandleLongPress:(UILongPressGestureRecognizer * )longPress{
    
    if (longPress.state == UIGestureRecognizerStateBegan) {
        
        CGPoint point = [longPress locationInView:self.tableView];
        NSIndexPath * indexPath = [self.tableView indexPathForRowAtPoint:point];
        if(indexPath == nil) return;
        
        id tableviewcell = [self.tableView cellForRowAtIndexPath:indexPath];
        if ([tableviewcell isKindOfClass:[ChatViewCell class]]) {
            ChatViewCell *cell = (ChatViewCell *)tableviewcell;

            [cell becomeFirstResponder];
            _longPressIndexPath = indexPath;
//            [self showMenuViewController:cell.bubbleView messageType:cell.displayMessage.messageBody.messageBodyType];
            //gzz171016
            [self showMenuViewController:cell.bubbleView messageType:cell.displayMessage.messageBody.messageBodyType  message:cell.displayMessage];
        }
    }
}

#pragma mark - MenuItem actions

- (void)copyMenuAction:(id)sender {
    [_menuController setMenuItems:nil];
    //复制
    UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
    if (_longPressIndexPath.row < self.messageArray.count) {
        ECMessage *message = [self.messageArray objectAtIndex:_longPressIndexPath.row];
        ECTextMessageBody *body = (ECTextMessageBody*)message.messageBody;
        pasteboard.string = body.text;
    }
    _longPressIndexPath = nil;
}

- (void)deleteMenuAction:(id)sender {
    [_menuController setMenuItems:nil];
    if (_longPressIndexPath && _longPressIndexPath.row >= 0) {
        ECMessage *message = [self.messageArray objectAtIndex:_longPressIndexPath.row];
        NSNumber* isplay = objc_getAssociatedObject(message, &KVoiceIsPlayKey);
        if (isplay.boolValue) {
            objc_setAssociatedObject(self.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
            [[ECDevice sharedInstance].messageManager stopPlayingVoiceMessage];
            self.playVoiceMessage = nil;
        }
        
        if (message==self.messageArray.lastObject) {
            //删除最后消息才需要刷新session
            if (message==self.messageArray.firstObject) {
                //如果删除的也是唯一一个消息，删除session
                [[DeviceDBHelper sharedInstance] deleteMessage:message andPre:nil];
            } else {
                //使用前一个消息刷新session
                [[DeviceDBHelper sharedInstance] deleteMessage:message andPre:[self.messageArray objectAtIndex:_longPressIndexPath.row-1]];
            }
        } else {
            [[IMMsgDBAccess sharedInstance] deleteMessage:message.messageId andSession:self.sessionId];
        }
        
        [self.messageArray removeObject:message];
        [self.tableView deleteRowsAtIndexPaths:@[_longPressIndexPath] withRowAnimation:UITableViewRowAnimationFade];
    }
    
    _longPressIndexPath = nil;
}

#pragma mark - UIResponder custom
- (void)dispatchCustomEventWithName:(NSString *)name userInfo:(NSDictionary *)userInfo {
    ECMessage * message = [userInfo objectForKey:KResponderCustomECMessageKey];
    if ([name isEqualToString:KResponderCustomChatViewFileCellBubbleViewEvent]) {
        [self fileCellBubbleViewTap:message];
    } else if ([name isEqualToString:KResponderCustomChatViewImageCellBubbleViewEvent]) {
        [self imageCellBubbleViewTap:message];
    } else if ([name isEqualToString:KResponderCustomChatViewVoiceCellBubbleViewEvent]) {
        [self voiceCellBubbleViewTap:message];
    } else if ([name isEqualToString:KResponderCustomChatViewVideoCellBubbleViewEvent]) {
        [self videoCellPlayVideoTap:message];
    } else if ([name isEqualToString:KResponderCustomChatViewCellResendEvent]) {
        ChatViewCell *resendCell = [userInfo objectForKey:KResponderCustomTableCellKey];
        ECMessage *message = resendCell.displayMessage;

        UIAlertView * alertView = [[UIAlertView alloc]initWithTitle:nil message:@"重发该消息？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"重发",nil];//gzz0718
        objc_setAssociatedObject(alertView, &KAlertResendMessage, message, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
        alertView.tag = Alert_ResendMessage_Tag;
        [alertView show];
    } else if ([name isEqualToString:KResponderCustomECMessagePortraitImgKey]){
        
        MCLog(@"右侧头像－－－－");
    }//gzz170829
    else if ([name isEqualToString:KResponderCustomChatViewTextLnkCellBubbleViewEvent]) {
        
        NSString *url = [userInfo objectForKey:@"url"]?:nil;
        WkwebViewController *webBrowserVC = [[WkwebViewController alloc] init];
        webBrowserVC.view.tag = Message_Link;
        url = [url stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLFragmentAllowedCharacterSet]];
        webBrowserVC.urlStr = url;
        webBrowserVC.delegate = self;
        [self.navigationController pushViewController:webBrowserVC animated:YES];
        
    } else if ([name isEqualToString:KResponderCustomChatViewPreviewCellBubbleViewEvent]) {
        
    
        ECPreviewMessageBody *body = (ECPreviewMessageBody*)message.messageBody;
        WkwebViewController *webBrowserVC = [[WkwebViewController alloc] initWithBody:body andDelegate:self];
        webBrowserVC.view.tag = Message_Link;
        [self.navigationController pushViewController:webBrowserVC animated:YES];
        
        
    }
   
}

//gzz0110
-(void)accessorery:(ECMessage*)message {
//    ECFileMessageBody *body = (ECFileMessageBody *)message.messageBody;

//    ECPreviewMessageBody *body1 = (ECPreviewMessageBody *)body; //ECFileMessageBody
    
    //第三种方法： NSString类方法读取内容  F83C48A3-67AB-42A3-8645-6CC2B0867373/Patient.app/a.txt
//    NSString* content = [NSString stringWithContentsOfFile:@"/var/mobile/Applications/2C4536B3-C3A0-4807-BFA8-AF244242F0F5/Library/Caches/a.txt" encoding:NSUTF8StringEncoding error:nil];
//    NSLog(@"NSString类方法读取的内容是：\n%@",content);
    
//    NSData *data = [NSData dataWithContentsOfFile:body.localPath];
//    NSLog(@"data类方法读取的内容是：\n%@",content);

//    MCLog(@"..url.%@,tile==%@,desc==%@,缩略图远程文件路径=%@,",body.url,body.title,body.desc,body.thumbnailRemotePath);
//    MPMoviePlayerViewController* playerView = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:[NSString stringWithFormat:@"file://localhost%@", mediaBody.localPath]]];
//    MCLog(@"%@",[NSString stringWithFormat:@"file://localhost%@", mediaBody.localPath]);
//    [self presentViewController:playerView animated:NO completion:nil];
    
    /*
     
     //抓取的内容的地址
     @property (nonatomic, copy) NSString *url;
     
     //抓取的文章表头
     @property (nonatomic, copy) NSString *title;
     
     //抓取的文章描述
     @property (nonatomic, copy) NSString *desc;
     
    
     @brief 缩略图服务器远程文件路径
   
    @property (nonatomic, copy) NSString *thumbnailRemotePath;
    
  
     @brief 附件是否下载完成
   
    @property (nonatomic)ECMediaDownloadStatus thumbnailDownloadStatus;
    
   
     @brief 缩略图本地文件路径
 
    @property (nonatomic, strong) NSString *thumbnailLocalPath;
    
    
     @method
     @brief 以文件路径构造文件对象
     @discussion
     @param filePath 磁盘文件全路径
     @param displayName 文件对象的显示名
     @result 文件对象
    
    - (id)initWithFile:(NSString *)filePath displayName:(NSString *)displayName;
     */
}
//gzz20190917
-(void)videoCellPlayVideoTap:(ECMessage*)message {//gzz171130

//    gzz20190909ios13
    ECVideoMessageBody *mediaBody = (ECVideoMessageBody*)message.messageBody;
    
    if (message.messageState != ECMessageState_Receive && mediaBody.localPath.length>0) {
//        [self createMPPlayerController:mediaBody.localPath];
        [self creatAvPlayer:message];
        
        return;
    }
    
    if (mediaBody.mediaDownloadStatus != ECMediaDownloadSuccessed || mediaBody.localPath.length == 0) {
        
        MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.removeFromSuperViewOnHide = YES;
        hud.labelText = @"正在加载视频，请稍后";
        
        __weak typeof(self) weakSelf = self;
        [[DeviceChatHelper sharedInstance] downloadMediaMessage:message andCompletion:^(ECError *error, ECMessage *message) {
            
            __strong __typeof(weakSelf)strongSelf = weakSelf;
            [MBProgressHUD hideHUDForView:strongSelf.view animated:YES];
            if (error.errorCode == ECErrorType_NoError) {
                
//                [strongSelf createMPPlayerController:mediaBody.localPath];
                [strongSelf creatAvPlayer:message];
//                NSLog(@"%@",[NSString stringWithFormat:@"file://localhost%@", mediaBody.localPath]);
            }
        }];
    } else {
//        [self createMPPlayerController:mediaBody.localPath];
        [self creatAvPlayer:message];

    }
 
}
//gzz20190917
-(void)creatAvPlayer:(ECMessage*)message{
    ECVideoMessageBody *mediaBody = (ECVideoMessageBody*)message.messageBody;
    [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayback error:nil];
    
    AVPlayerViewController *avPlayerVC = [[AVPlayerViewController alloc] init];
    avPlayerVC.player = [AVPlayer playerWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"file://localhost%@", mediaBody.localPath]]];
    [avPlayerVC.player play];
    [[AppDelegate shareInstance].window.rootViewController.childViewControllers[0] presentViewController:avPlayerVC animated:NO completion:nil];
}


- (void)createMPPlayerController:(NSString *)fileNamePath {
    
    MPMoviePlayerViewController* playerView = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:[NSString stringWithFormat:@"file://localhost%@", fileNamePath]]];
    
    playerView.moviePlayer.controlStyle = MPMovieControlStyleFullscreen;
    [playerView.view setBackgroundColor:[UIColor clearColor]];
    [playerView.view setFrame:self.view.bounds];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieFinishedCallback:) name:MPMoviePlayerPlaybackDidFinishNotification object:playerView.moviePlayer];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieStateChangeCallback:) name:MPMoviePlayerPlaybackStateDidChangeNotification object:playerView.moviePlayer];
    
    [self presentViewController:playerView animated:NO completion:nil];
}

-(void)movieStateChangeCallback:(NSNotification*)notify  {
    
    //点击播放器中的播放/ 暂停按钮响应的通知
    MPMoviePlayerController *playerView = notify.object;
    MPMoviePlaybackState state = playerView.playbackState;
    switch (state) {
        case MPMoviePlaybackStatePlaying:
//            NSLog(@"正在播放...");
            break;
        case MPMoviePlaybackStatePaused:
//            NSLog(@"暂停播放.");
            break;
        case MPMoviePlaybackStateSeekingForward:
//            NSLog(@"快进");
            break;
        case MPMoviePlaybackStateSeekingBackward:
//            NSLog(@"快退");
            break;
        case MPMoviePlaybackStateInterrupted:
//            NSLog(@"打断");
            break;
        case MPMoviePlaybackStateStopped:
//            NSLog(@"停止播放.");
            break;
        default:
//            NSLog(@"播放状态:%li",state);
            break;
    }
}

-(void)movieFinishedCallback:(NSNotification*)notify{
    
    // 视频播放完或者在presentMoviePlayerViewControllerAnimated下的Done按钮被点击响应的通知。
    MPMoviePlayerController* theMovie = [notify object];
    [theMovie stop];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:theMovie];
}



-(void)fileCellBubbleViewTap:(ECMessage*)message {
    MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.mode = MBProgressHUDModeText;
    hud.labelText = @"无法打开该文件";
    hud.margin = 10.f;
    hud.removeFromSuperViewOnHide = YES;
    [hud hide:YES afterDelay:2];//gzz0106
}

-(void)playVoiceMessage:(ECMessage*)message {
    
    NSNumber* isplay = objc_getAssociatedObject(message, &KVoiceIsPlayKey);
    if (isplay == nil) {
        //首次点击
        isplay = @YES;
    } else {
        isplay = @(!isplay.boolValue);
    }
    
    if (self.playVoiceMessage) {
        //如果前一个在播放
        objc_setAssociatedObject(self.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
        [[ECDevice sharedInstance].messageManager stopPlayingVoiceMessage];
        [self.tableView beginUpdates];
        [self.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:[self.messageArray indexOfObject:self.playVoiceMessage] inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
        [self.tableView endUpdates];
        self.playVoiceMessage = nil;
    }

    __weak __typeof(self) weakSelf = self;
    if (isplay.boolValue) {
        self.playVoiceMessage = message;
        objc_setAssociatedObject(message, &KVoiceIsPlayKey, isplay, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
        
        if ([DemoGlobalClass sharedInstance].isPlayEar) {
            [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayAndRecord error:nil];
        } else {
            [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayback error:nil];
        }
        
        [[ECDevice sharedInstance].messageManager playVoiceMessage:(ECVoiceMessageBody*)message.messageBody completion:^(ECError *error) {
            if (weakSelf) {
                objc_setAssociatedObject(weakSelf.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
                weakSelf.playVoiceMessage = nil;
                [weakSelf.tableView beginUpdates];
                [weakSelf.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:[self.messageArray indexOfObject:self.playVoiceMessage] inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
                [weakSelf.tableView endUpdates];
            }
        }];
        
        [weakSelf.tableView beginUpdates];
        [self.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:[self.messageArray indexOfObject:self.playVoiceMessage] inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
        [weakSelf.tableView endUpdates];
    }
}
//gzz0823 这是语音
-(void)voiceCellBubbleViewTap:(ECMessage*)message{
    
    ECVoiceMessageBody* mediaBody = (ECVoiceMessageBody*)message.messageBody;
    if (mediaBody.localPath.length>0 && [[NSFileManager defaultManager] fileExistsAtPath:mediaBody.localPath]) {
         [self playVoiceMessage:message];
    } else if (message.messageState == ECMessageState_Receive && mediaBody.remotePath.length>0){
        MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.mode = MBProgressHUDModeText;
        hud.labelText = @"正在获取文件";
        hud.margin = 10.f;
        hud.removeFromSuperViewOnHide = YES;
        
        __weak __typeof(self)weakSelf = self;
        [[DeviceChatHelper sharedInstance] downloadMediaMessage:message andCompletion:^(ECError *error, ECMessage *message) {
            
            __strong __typeof(weakSelf)strongSelf = weakSelf;
            [MBProgressHUD hideHUDForView:strongSelf.view animated:YES];
            if (error.errorCode != ECErrorType_NoError) {
                MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.labelText = @"获取文件失败";//gzz0823
                hud.margin = 10.f;
                hud.removeFromSuperViewOnHide = YES;
                [hud hide:YES afterDelay:2];
            }
        }];
    }
}
 //gzz0823  这才是图片
-(void)imageCellBubbleViewTap:(ECMessage*)message{
    
    if (message.messageBody.messageBodyType >= MessageBodyType_Voice) {
        ECImageMessageBody *mediaBody = (ECImageMessageBody*)message.messageBody;
        
        if (mediaBody.localPath.length>0 && [[NSFileManager defaultManager] fileExistsAtPath:mediaBody.localPath]) {
            
            [self showPhotoBrowser:[self getImageMessageLocalPath] index:[self getImageMessageIndex:mediaBody]];
            
        } else if (message.messageState == ECMessageState_Receive && mediaBody.remotePath.length>0) {
            
            MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
            hud.labelText = @"正在获取文件";
            hud.removeFromSuperViewOnHide = YES;
            
            __weak __typeof(self)weakSelf = self;
            
            [[DeviceChatHelper sharedInstance] downloadMediaMessage:message andCompletion:^(ECError *error, ECMessage *message) {
                
                __strong __typeof(weakSelf)strongSelf = weakSelf;
                [MBProgressHUD hideHUDForView:strongSelf.view animated:YES];
                if (error.errorCode == ECErrorType_NoError) {
                    if ([mediaBody.localPath hasSuffix:@".jpg"] || [mediaBody.localPath hasSuffix:@".png"]) {
                       
                        [strongSelf showPhotoBrowser:[self getImageMessageLocalPath] index:[self getImageMessageIndex:mediaBody]];
                    }
                } else {
                    MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                    hud.mode = MBProgressHUDModeText;
                    hud.labelText = @"获取文件失败";//gzz0823
                    hud.margin = 10.f;
                    hud.removeFromSuperViewOnHide = YES;
                    [hud hide:YES afterDelay:2];
                }
            }];
        }
    }
}

#pragma mark - UIAlertViewDelegate

// Called when a button is clicked. The view will be automatically dismissed after this call returns
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (alertView.tag == Alert_ResendMessage_Tag) {
        islinkSuccessed = NO;
        [self loginWithHaveUserLogined];
        
        if (buttonIndex != alertView.cancelButtonIndex) {
//            gzz20190924
            ECMessage *message = objc_getAssociatedObject(alertView, &KAlertResendMessage);
            [self.messageArray removeObject:message];
            [[DeviceChatHelper sharedInstance] resendMessage:message];
            [self.messageArray addObject:message];
            [self.tableView reloadData];
        }
    }
}

- (void)loginWithHaveUserLogined{
    MCLog(@"chat+loginWithHaveUserLogined");
       [ECDevice sharedInstance].delegate = [DeviceDelegateHelper sharedInstance];

        NSUserDefaults *user = [NSUserDefaults standardUserDefaults];
        NSString *uuidstr =[NSString stringWithFormat:@"%@",[user objectForKey:@"uuidEcdevice"]];
        ECLoginInfo * loginInfo = [[ECLoginInfo alloc] init];
        loginInfo.username = uuidstr;//用户登录app的用户id即可。
        loginInfo.appKey = @"aaf98f89516bf50b015174e9d5ea1110";
        loginInfo.appToken = @"9f13ca5fd40e4bedb41ecff4290804dd";
        loginInfo.authType = LoginAuthType_NormalAuth;//默认方式登录
        loginInfo.mode = LoginMode_InputPassword;
        [[ECDevice sharedInstance] login:loginInfo completion:^(ECError *error){
            MCLog(@"gzz连chat+code===%zd",error.errorCode);
            if (error.errorCode == 200) {
                islinkSuccessed = YES;
            }else{
                islinkSuccessed = NO;
            }
          dispatch_async(dispatch_get_main_queue(), ^{
                    [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onConnected object:error];
          });

     }];
}


#pragma mark - Photo browser
-(void)showPhotoBrowser:(NSArray*)imageArray index:(NSInteger)currentIndex{
    if (imageArray && [imageArray count] > 0) {
        NSMutableArray *photoArray = [NSMutableArray array];
        for (id object in imageArray) {
            MWPhoto *photo;
            if ([object isKindOfClass:[UIImage class]]) {
                photo = [MWPhoto photoWithImage:object];
            } else if ([object isKindOfClass:[NSURL class]]) {
                photo = [MWPhoto photoWithURL:object];
            } else if ([object isKindOfClass:[NSString class]]) {
                photo = [MWPhoto photoWithURL:[NSURL fileURLWithPath:object]];
            }
            [photoArray addObject:photo];
        }
        
        self.photos = photoArray;
    }

    MWPhotoBrowser *photoBrowser = [[MWPhotoBrowser alloc] initWithDelegate:self];
    photoBrowser.displayActionButton = YES;
    photoBrowser.displayNavArrows = NO;
    photoBrowser.displaySelectionButtons = NO;
    photoBrowser.alwaysShowControls = NO;
    photoBrowser.zoomPhotosToFill = YES;
    photoBrowser.enableGrid = NO;
    photoBrowser.startOnGrid = NO;
    photoBrowser.enableSwipeToDismiss = NO;
    [photoBrowser setCurrentPhotoIndex:currentIndex];

    UINavigationController *nc = [[UINavigationController alloc] initWithRootViewController:photoBrowser];
    nc.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
    [self presentViewController:nc animated:YES completion:nil];
}

- (NSUInteger)numberOfPhotosInPhotoBrowser:(MWPhotoBrowser *)photoBrowser{
    return self.photos.count;
}

- (id <MWPhoto>)photoBrowser:(MWPhotoBrowser *)photoBrowser photoAtIndex:(NSUInteger)index{
    if (index < self.photos.count) {
        return self.photos[index];
    }
    return nil;
}

- (void)photoBrowserDidFinishModalPresentation:(MWPhotoBrowser *)photoBrowser {

    [self dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark - 创建工具栏和布局变化操作

/**
 *@brief 生成工具栏 gzz190117
 */
-(void)createToolBarView {
    

    if (kISiPhoneX) {//gzz171212
        _containerView = [[UIView alloc] initWithFrame:CGRectMake(0, self.tableView.frame.origin.y+self.tableView.frame.size.height-SafeAreaBottomHeight, self.view.frame.size.width, ToolbarDefaultTotalHeigth)];
    }else{
        _containerView = [[UIView alloc] initWithFrame:CGRectMake(0, self.tableView.frame.origin.y+self.tableView.frame.size.height, self.view.frame.size.width, ToolbarDefaultTotalHeigth)];
        
    }
    
    [self.view addSubview:_containerView];
    _oldInputHeight = ToolbarDefaultTotalHeigth;
//    _containerView.backgroundColor = RGB(60, 199, 192) ;//gzz180411
    _containerView.backgroundColor = [UIColor clearColor] ;//gzz180411
//gzz180427
    UIView *littbgview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, ToolbarInputViewHeight+10) bgColor:JISECOLOR];
//gzz190116
    [_containerView addSubview:littbgview];//gzz180411
    
    
    //聊天的基础功能
    //语音按钮
    _switchVoiceBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    _switchVoiceBtn.tag = ToolbarDisplay_Record;
    [_switchVoiceBtn addTarget:self action:@selector(switchToolbarDisplay:) forControlEvents:UIControlEventTouchUpInside];
    [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateNormal];
    [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateHighlighted];
    _switchVoiceBtn.frame = CGRectMake(5.0f, 5.0f, 31.0f, 31.0f);
    _switchVoiceBtn.autoresizingMask = UIViewAutoresizingFlexibleTopMargin;

//    [_containerView addSubview:_switchVoiceBtn];
    [littbgview addSubview:_switchVoiceBtn];

    _inputTextView = [[HPGrowingTextView alloc] initWithFrame:CGRectMake(40.0f, -5, 183.0f, 25.0f)];
    _inputTextView.contentInset = UIEdgeInsetsMake(-10, 0, 0, 0);
    _inputTextView.minNumberOfLines = 1;
    _inputTextView.maxNumberOfLines = 1;
//    _inputTextView.backgroundColor = [UIColor yellowColor];
    _inputTextView.text = @"";
     self.automaticallyAdjustsScrollViewInsets = false;
 
    _inputTextView.returnKeyType = UIReturnKeySend;
    _inputTextView.font = [UIFont systemFontOfSize:16.0f];
    _inputTextView.delegate = self;
//    _inputTextView.placeholder = @"添加文本"; gzz20200203
        _inputTextView.placeholder = @"";

    _inputTextView.layer.cornerRadius =4;
    _inputTextView.layer.masksToBounds = YES;
    _inputTextView.autoresizingMask = UIViewAutoresizingFlexibleWidth;
    
    //文本边框
    _inputMaskImage = [[UIImageView alloc] initWithImage:[[UIImage imageNamed:@"input_box"] stretchableImageWithLeftCapWidth:95.0f topCapHeight:16.0f]];
    _inputMaskImage.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;

    
    _moreBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [_moreBtn addTarget:self action:@selector(switchToolbarDisplay:) forControlEvents:UIControlEventTouchUpInside];
    [_moreBtn setImage:[UIImage imageNamed:@"矩形-18"] forState:UIControlStateNormal];
    [_moreBtn setImage:[UIImage imageNamed:@"矩形-18"] forState:UIControlStateHighlighted];

    _moreBtn.frame = CGRectMake(_containerView.frame.size.width-36.0f, 5.0f, 31.0f, 31.0f);
    _moreBtn.autoresizingMask = UIViewAutoresizingFlexibleTopMargin;
    _moreBtn.tag = ToolbarDisplay_More;
//    [_containerView addSubview:_moreBtn];
    [littbgview addSubview:_moreBtn];

    _emojiBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    _emojiBtn.tag = ToolbarDisplay_Emoji;
    [_emojiBtn addTarget:self action:@selector(switchToolbarDisplay:) forControlEvents:UIControlEventTouchUpInside];
    [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateNormal];
    [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateHighlighted];
    _emojiBtn.frame = CGRectMake(_moreBtn.frame.origin.x-36.0f, 5.0f, 31.0f, 31.0f);
    _emojiBtn.autoresizingMask = UIViewAutoresizingFlexibleTopMargin;
//    [_containerView addSubview:_emojiBtn];
    [littbgview addSubview:_emojiBtn];

    
    CGFloat frame_x = _switchVoiceBtn.frame.origin.x+_switchVoiceBtn.frame.size.width+5.0f;
    //聊天输入框的长度
    _inputTextView.frame = CGRectMake(0, 7.0f, _emojiBtn.frame.origin.x-frame_x, 27.0f);
    _inputMaskImage.frame = CGRectMake(0, 5.0f, _emojiBtn.frame.origin.x-frame_x-5.0f, 31.0f);
    _inputView = [[UIView alloc] initWithFrame:CGRectMake(frame_x, 0.0f, _emojiBtn.frame.origin.x-5.0f-frame_x, 43.0f)];
    _inputView.autoresizingMask = UIViewAutoresizingFlexibleHeight|UIViewAutoresizingFlexibleWidth;
//    _inputTextView.frame = CGRectMake(0, 7.0f,_inputView.width, 27.0f);//gzz1213
    [_inputView addSubview:_inputTextView];
//    [_containerView addSubview:_inputView];
    [littbgview addSubview:_inputView];

    
   
    
    
    
    _recordBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [_recordBtn setBackgroundImage:[UIImage imageNamed:@"voice_record"] forState:UIControlStateNormal];
    [_recordBtn setTitle:@"按住 说话" forState:UIControlStateNormal];
    _recordBtn.frame = CGRectMake(frame_x, 5.0f, _emojiBtn.frame.origin.x-frame_x-5.0f, 31.0f);
//    [_containerView addSubview:_recordBtn];
    [littbgview addSubview:_recordBtn];

    [_recordBtn addTarget:self action:@selector(recordButtonTouchDown) forControlEvents:UIControlEventTouchDown];
    [_recordBtn addTarget:self action:@selector(recordButtonTouchUpOutside) forControlEvents:UIControlEventTouchUpOutside];
    [_recordBtn addTarget:self action:@selector(recordButtonTouchUpInside) forControlEvents:UIControlEventTouchUpInside];
    [_recordBtn addTarget:self action:@selector(recordDragOutside) forControlEvents:UIControlEventTouchDragOutside];
    [_recordBtn addTarget:self action:@selector(recordDragInside) forControlEvents:UIControlEventTouchDragInside];
    _recordBtn.hidden = YES;
    
  
    UIView *FgcontainVIew = [[UIView alloc] initWithFrame:CGRectMake(0, self.tableView.frame.origin.y+self.tableView.frame.size.height-SafeAreaBottomHeight, self.view.frame.size.width, ToolbarDefaultTotalHeigth)];
    FgcontainVIew.backgroundColor = [UIColor whiteColor];
    if ([self.PublicState isEqualToString:@"3"]) {
        _containerView.hidden = YES;
         FgcontainVIew.hidden = NO;
    }
    else{
        FgcontainVIew.hidden = YES;
        _containerView.hidden = NO;

    }
    [self.view addSubview:FgcontainVIew];
    
    
    //gzz0309
    NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
    //    [isNewVersion setObject:@"0" forKey:@"isNewVersions"];
    NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
    if ([isnews isEqualToString:@"1"]) {
        //        出现
        NSArray *titarr = [NSArray arrayWithObjects:@"我要评价",@"我要送花", nil];
        for (int i=0 ; i<2; i++) {
            UIButton *belowButton = [UIButton buttonWithType:UIButtonTypeCustom];
            belowButton.frame = CGRectMake(i*SCREEN_WIDTH/2, 0, SCREEN_WIDTH/2, 45) ;
            belowButton.tag = i;
            [belowButton setTitle:[titarr objectAtIndex:i] forState:0];
            [belowButton setTitleColor:[UIColor whiteColor] forState:0];
            [belowButton addTarget:self action:@selector(bellwlodingflog:) forControlEvents:UIControlEventTouchUpInside];
            belowButton.backgroundColor = RGB(60, 199, 192);
            
            belowButton.titleLabel.font = [UIFont systemFontOfSize:CommitBtnFont];
            [FgcontainVIew addSubview:belowButton];
        }
        
        UIView  *line=[[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2, 7, 1, 30)];
        line.backgroundColor=[UIColor whiteColor];
        
        [FgcontainVIew addSubview:line];
//
//        UIView  *line1=[[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2), 7, 1, 30)];
//        line1.backgroundColor=[UIColor whiteColor];
//
//        [FgcontainVIew addSubview:line1];
        
    }else{
        NSArray *titarr = [NSArray arrayWithObjects:@"我要评价", nil];
//        for (int i=0 ; i<1; i++) {
            UIButton *belowButton = [UIButton buttonWithType:UIButtonTypeCustom];
            belowButton.frame = CGRectMake(0, 0, SCREEN_WIDTH, 45) ;
            belowButton.tag = 0;
            [belowButton setTitle:[titarr objectAtIndex:0] forState:0];
            [belowButton setTitleColor:[UIColor whiteColor] forState:0];
            [belowButton addTarget:self action:@selector(bellwlodingflog:) forControlEvents:UIControlEventTouchUpInside];
            belowButton.backgroundColor = RGB(60, 199, 192);
            
            belowButton.titleLabel.font = [UIFont systemFontOfSize:CommitBtnFont];
            [FgcontainVIew addSubview:belowButton];
//        }
        
//        UIView  *line=[[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH/2, 7, 1, 30)];
//        line.backgroundColor=[UIColor whiteColor];
//
//        [FgcontainVIew addSubview:line];
        
    }

        //更多的附加功能  gzz190116
        [self createMoreView];

 
    
}


- (void)textViewDidChangeSelection:(UITextView *)textView
{
    NSRange range;
    range.location = 0;
    range.length = 0;
    _inputTextView.selectedRange = range;
}
-(void)createMoreView{
    //gzz0618z
    UIView *moreView = [[UIView alloc] initWithFrame:CGRectMake(0.0f, ToolbarInputViewHeight, _containerView.frame.size.width, ToolbarMoreViewHeight)];
    //gzz180411
    moreviewHide = moreView;
    moreviewHide.hidden = YES;//gzz190117
    moreView.autoresizingMask = UIViewAutoresizingFlexibleTopMargin;
    //    moreView.backgroundColor = [UIColor colorWithRed:0.96 green:0.96 blue:0.96 alpha:1];
    moreView.backgroundColor = RGB(60, 199, 192);
//    moreView.backgroundColor = RGB(60, 19, 92);

//    moreView.backgroundColor = [UIColor redColor];
    [_containerView addSubview:moreView];
    NSArray *imagesArr = [NSArray array];
    NSArray *textArr = [NSArray array];
    NSArray *selectorArr = [NSArray array];
    
//    if ([self.sessionId isEqualToString:[DemoGlobalClass sharedInstance].userName]||[self.sessionId hasPrefix:@"g"]) {
        imagesArr = @[@"dialogue_image_icon",@"dialogue_camera_icon",@"sendBottom"];
        textArr = @[@"图片",@"拍摄",@"送花"];
        selectorArr = @[@"pictureBtnTap:",@"cameraBtnTap:",@"sendBottom:"];
//    } else {
//        imagesArr = @[@"dialogue_image_icon",@"dialogue_camera_icon",@"dialogue_phone_icon",@"dialogue_video_icon"];
//        textArr = @[@"图片",@"拍摄",@"音频",@"视频"];
//        selectorArr = @[@"pictureBtnTap:",@"cameraBtnTap:",@"voiceCallBtnTap:",@"videoCallBtnTap:"];
//    }
    
    for (NSInteger index = 0; index<3; index++) {
        
        NSString *imageLight = [NSString stringWithFormat:@"%@_on",imagesArr[index]];
        UIButton *extenBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        SEL selector = NSSelectorFromString(selectorArr[index]);
        [extenBtn addTarget:self action:selector forControlEvents:UIControlEventTouchUpInside];
        [extenBtn setImage:[UIImage imageNamed:imagesArr[index]] forState:UIControlStateNormal];
        [extenBtn setImage:[UIImage imageNamed:imageLight] forState:UIControlStateHighlighted];
        extenBtn.frame = CGRectMake(25.0f+80.0f*index, 10.0f, 50.0f, 50.0f);
        [moreView addSubview:extenBtn];
        
        UILabel *btnLabel = [[UILabel alloc] initWithFrame:CGRectMake(extenBtn.frame.origin.x, extenBtn.frame.origin.y+extenBtn.frame.size.height+5.0f, extenBtn.frame.size.width, 15.0f)];
        btnLabel.font = [UIFont systemFontOfSize:15.0f];
        btnLabel.textAlignment = NSTextAlignmentCenter;
        [moreView addSubview:btnLabel];
        btnLabel.text = textArr[index];
        
        
    }


}

- (void)bellwlodingflog:(UIButton *)buttonsedder
{
    switch (buttonsedder.tag) {
        case 0:
        {
            
//            gzz20191230
            NSString *docuPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
            NSString *dbPath = [docuPath stringByAppendingPathComponent:@"oneToOnedb.db"];
            db = [FMDatabase databaseWithPath:dbPath];
            [db open];

            NSString *strSql111 =[NSString stringWithFormat:@"SELECT * FROM commentSqlONEToOne"];
             FMResultSet *set111=  [db  executeQuery:strSql111];
             
            NSString *disease_uuidst;
             NSString *expert_uuidstr ;
//            NSString *answer_uuidstr ;
             while ([set111 next]) {
                disease_uuidst =  [set111 stringForColumn:@"disease_uuid"];
                expert_uuidstr = [set111 stringForColumn:@"expert_uuid"];
//                answer_uuidstr = [set111 stringForColumn:@"answer_uuid"];
                
                 if ([self.experDocuuid isEqualToString:expert_uuidstr] && [self.diseaseUuidstr isEqualToString:disease_uuidst]) {
                     [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"您已经评价过一次不能再评价了" confirmTitle:@"确定" handler:^{
                     }];
                     return;
                 }
             }
            
            
            
             ServiceEvaluationVC *vc= [ServiceEvaluationVC new];
             vc.whichTypestr = @"yes";
             vc.expert_uuidStr = self.experDocuuid;
//             vc.answer_uuidstr =  model.answer_uuid;
             vc.disease_uuidStr = self.diseaseUuidstr;
             vc.hidesBottomBarWhenPushed = YES;
             [self.navigationController pushViewController:vc animated:YES];
        }
            break;
   
        case 1:
        {//gzz170408
            SendFlowersAndHeartVC *send = [[SendFlowersAndHeartVC alloc]init];
            send.FlowerExeruuid = self.experDocuuid;
            send.docPhoto = _HearImage;
            send.docNamee = _DocNameChat;
            [self.navigationController pushViewController:send animated:YES];
            
        }
        default:
            break;
    }
}



#pragma mark - CustomEmojiViewDelegate
-(void)emojiBtnInput:(NSInteger)emojiTag{
    _inputTextView.text =  [_inputTextView.text stringByAppendingString:
                            [CommonTools getExpressionStrById:emojiTag]];//gzz0711

}

-(void)backspaceText{
    if(_inputTextView.text.length > 0) {
        [_inputTextView deleteBackward];
    }
}

-(void)emojiSendBtn:(id)sender{
    [self sendTextMessage];
    _inputTextView.text = @"";
}
/**
 *@brief 改变toolbar显示的frame Y值 gzz190117
 */
#pragma mark =------------改变toolbar显示的frame Y值 gzz190117
-(void)toolbarDisplayChangedToFrameY:(CGFloat)frame_y andDuration:(NSTimeInterval)duration{
    
    __weak __typeof(self)weakSelf = self;
    if (toolbarDisplay == ToolbarDisplay_None) {
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateNormal];
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateHighlighted];
        CGRect frame = _emojiView.frame;
        frame.origin.y = self.view.frame.size.height;
        _emojiView.frame = frame;
    }
    //如果只显示的toolbar是输入框，表情页消失
    if (frame_y == self.view.frame.size.height-_containerView.frame.size.height+ToolbarMoreViewHeight) {
        CGRect frame = _emojiView.frame;
        frame.origin.y = self.view.frame.size.height;
        _emojiView.frame = frame;
    }

//    if (kISiPhoneX) {//gzz190117
//        if (frame_y == self.view.frame.size.height-_containerView.frame.size.height+ToolbarMoreViewHeight) {
//            CGRect frame = _emojiView.frame;
//            frame.origin.y = self.view.frame.size.height;
//            _emojiView.frame = frame;
//        }
//
//    }else{
//        if (frame_y == self.view.frame.size.height-_containerView.frame.size.height+ToolbarMoreViewHeight) {
//            CGRect frame = _emojiView.frame;
//            frame.origin.y = self.view.frame.size.height;
//            _emojiView.frame = frame;
//        }
//    }
    if (toolbarDisplay == ToolbarDisplay_Emoji  && [dragIsYes isEqualToString:@"yes"]) {
        CGRect frame = _emojiView.frame;
        frame.origin.y = self.view.frame.size.height;
        _emojiView.frame = frame;
    }
    
    
    void(^animations)() = ^{
        __strong __typeof(weakSelf)strongSelf = weakSelf;
        if (strongSelf && strongSelf.tableView) {
            CGRect frame = _containerView.frame;
            frame.origin.y = frame_y;
            _containerView.frame = frame;
            frame = strongSelf.tableView.frame;
            frame.size.height = _containerView.frame.origin.y-strongSelf.tableView.frame.origin.y;
            strongSelf.tableView.frame = frame;
        }
    };
    
    void(^completion)(BOOL) = nil;
    if (isScrollToButtom) {
        completion = ^(BOOL finished) {
            __strong __typeof(weakSelf)strongSelf = weakSelf;
            if (strongSelf && strongSelf.messageArray.count>0) {
                [strongSelf scrollViewToBottom:YES];
            }
        };
    } else {
        isScrollToButtom = YES;
    }
    
    [UIView animateWithDuration:duration delay:0.0f options:(UIViewAnimationOptionCurveEaseIn | UIViewAnimationOptionBeginFromCurrentState) animations:animations completion:completion];
}


/**
 *@brief 根据按钮改变工具栏的显示布局 gzz190117
 */
-(void)switchToolbarDisplay:(id)sender {
    moreviewHide.hidden = YES;//首先让其消失 、、gzz190117
    dragIsYes = @"no"; // 、、gzz190117
    UIButton*button = (UIButton*)sender;
    
    //如果上次显示内容为录音，更改显示
    if (toolbarDisplay == ToolbarDisplay_Record) {
        CGRect frame = _containerView.frame;
        frame.size.height = _oldInputHeight;
        _containerView.frame = frame;
        
        _inputView.hidden = NO;
        _recordBtn.hidden = YES;
    }
    
    //如果上次显示内容为表情
    if (toolbarDisplay == ToolbarDisplay_Emoji) {
        CGRect frame = _emojiView.frame;
        frame.origin.y = self.view.frame.size.height;
        _emojiView.frame=frame;
    }
    
    __weak __typeof(self)weakSelf = self;
    //如果两次按钮的相同触发输入文本
    if (button.tag == toolbarDisplay) {
        toolbarDisplay = ToolbarDisplay_None;
        [_inputTextView becomeFirstResponder];
        

    } else {
        
        CGFloat framey = self.view.frame.size.height-ToolbarInputViewHeight;
        if (button.tag == ToolbarDisplay_More) {
            //显示出附件功能页面 图片和拍摄
//            _containerView.height = ToolbarMoreViewHeight;
            moreviewHide.hidden = NO;//gzz180411
//            moreviewHide.backgroundColor = RGB(60, 199, 192);
            framey = viewHeight-_containerView.frame.size.height;
        } else if (button.tag == ToolbarDisplay_Emoji) {
            //显示表情页面 gzz19016
//              _containerView.height = ToolbarDefaultTotalHeigth;
            moreviewHide.hidden = YES;//gzz180411
//            moreviewHide.backgroundColor = [UIColor clearColor];
            framey = viewHeight-_containerView.frame.size.height-126.0f;
//            if (kISiPhoneX) {
//                framey = viewHeight-_containerView.frame.size.height-126.0f+34;
//            }
            _inputTextView.selectedRange = NSMakeRange(_inputTextView.text.length,0);
            void(^animations)() = ^{
                __strong __typeof(weakSelf)strongSelf = weakSelf;
                if (strongSelf) {
                    CGRect frame = _emojiView.frame;
                    if (kISiPhoneX) {
                        frame.origin.y = viewHeight-_emojiView.frame.size.height-34;
                    }else{
                        frame.origin.y = viewHeight-_emojiView.frame.size.height;

                    }//gzz190117
//                    frame.origin.y = viewHeight-_emojiView.frame.size.height;

                    _emojiView.frame = frame;
                }
            };

            [UIView animateWithDuration:0.25 delay:0.1f options:(UIViewAnimationOptionCurveEaseIn | UIViewAnimationOptionBeginFromCurrentState) animations:animations completion:nil];
            
        } else if (button.tag == ToolbarDisplay_Record) {
            //显示录音按钮，并返回默认的布局
            CGRect frame = _containerView.frame;
            _oldInputHeight = frame.size.height;
            frame.size.height = ToolbarDefaultTotalHeigth;
            _containerView.frame = frame;
            _inputView.hidden = YES;
            _recordBtn.hidden = NO;
            framey = viewHeight-ToolbarInputViewHeight;
        }
        
        toolbarDisplay = (ToolbarDisplay)button.tag;
        
        if (_isDisplayKeyborad) {
            //如果显示键盘，在keyboardWillChangeFrame中更改显示
            [self.view endEditing:YES];
        } else {
            //如果未显示键盘，更改显示
            if (kISiPhoneX) {//gzz171212
                [self toolbarDisplayChangedToFrameY:framey-SafeAreaBottomHeight andDuration:0.25];
            }else{
                [self toolbarDisplayChangedToFrameY:framey andDuration:0.25];

            }
        }
    }
    
    //更换按钮上显示的图片
    if (toolbarDisplay == ToolbarDisplay_Record) {
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"keyboard_icon"] forState:UIControlStateNormal];
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"keyboard_icon_on"] forState:UIControlStateHighlighted];
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateNormal];
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateHighlighted];
    } else if (toolbarDisplay == ToolbarDisplay_Emoji) {
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateNormal];
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateHighlighted];
        [_emojiBtn setImage:[UIImage imageNamed:@"keyboard_icon"] forState:UIControlStateNormal];
        [_emojiBtn setImage:[UIImage imageNamed:@"keyboard_icon_on"] forState:UIControlStateHighlighted];
    } else {
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateNormal];
        [_switchVoiceBtn setImage:[UIImage imageNamed:@"椭圆-2"] forState:UIControlStateHighlighted];
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateNormal];
        [_emojiBtn setImage:[UIImage imageNamed:@"椭圆-4"] forState:UIControlStateHighlighted];
    }//gzz1220 如果有问题的话 也就是这里有问题
}

#pragma mark - 录音操作

//按下操作gzz0630
-(void)recordButtonTouchDown {
    
    AVAudioSession *avSession = [AVAudioSession sharedInstance];
    
    if ([avSession respondsToSelector:@selector(requestRecordPermission:)]) {
        
        [avSession requestRecordPermission:^(BOOL available) {
            
            if (available) {
                if (self.playVoiceMessage) {
                    //如果有播放停止播放语音
                    objc_setAssociatedObject(self.playVoiceMessage, &KVoiceIsPlayKey, @NO, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
                    [[ECDevice sharedInstance].messageManager stopPlayingVoiceMessage];
                    [self.tableView reloadData];
                    self.playVoiceMessage = nil;
                }
                
                static int seedNum = 0;
                if(seedNum >= 1000)
                    seedNum = 0;
                seedNum++;
                
                NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
                [dateFormatter setDateFormat:@"yyyyMMddHHmmss"];
                NSString *currentDateStr = [dateFormatter stringFromDate:[NSDate date]];
                NSString *file = [NSString stringWithFormat:@"tmp%@%03d.amr", currentDateStr, seedNum];
                
                ECVoiceMessageBody * messageBody = [[ECVoiceMessageBody alloc] initWithFile:[[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:file] displayName:file];
                
                [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayAndRecord error:nil];
                __weak __typeof(self)weakSelf = self;
                [[ECDevice sharedInstance].messageManager startVoiceRecording:messageBody error:^(ECError *error, ECVoiceMessageBody *messageBody) {
                    __strong __typeof(weakSelf)strongSelf = weakSelf;
                    [strongSelf.view sendSubviewToBack:strongSelf.amplitudeImageView];
                    if (error.errorCode == ECErrorType_RecordTimeOut) {
                        [strongSelf sendMediaMessage:messageBody];
                    }
                }];
                
                _recordInfoLabel.text = @"手指上划,取消发送";
                [self.view bringSubviewToFront:_amplitudeImageView];
                

            
            }
            else
            {
                dispatch_async(dispatch_get_main_queue(), ^{//gzz0630
                    [[[UIAlertView alloc] initWithTitle:@"无法录音" message:@"请在“设置-隐私-麦克风”选项中允许肝胆相照访问你的麦克风" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil] show];
                });
            }
        }];
        
    }
    
    
}

//按钮外抬起操作
-(void)recordButtonTouchUpOutside {
    
    __weak __typeof(self)weakSelf = self;
    [[ECDevice sharedInstance].messageManager stopVoiceRecording:^(ECError *error, ECVoiceMessageBody *messageBody) {
        __strong __typeof(weakSelf)strongSelf = weakSelf;
        [strongSelf.view sendSubviewToBack:strongSelf.amplitudeImageView];
    }];
}

//按钮内抬起操作
-(void)recordButtonTouchUpInside {
    __weak __typeof(self)weakSelf = self;
    [[ECDevice sharedInstance].messageManager stopVoiceRecording:^(ECError *error, ECVoiceMessageBody *messageBody) {
        __strong __typeof(weakSelf)strongSelf = weakSelf;
        [strongSelf.view sendSubviewToBack:strongSelf.amplitudeImageView];
        if (error.errorCode == ECErrorType_NoError) {
            [strongSelf sendMediaMessage:messageBody];
        } else if  (error.errorCode == ECErrorType_RecordTimeTooShort) {
            MBProgressHUD* hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
            hud.mode = MBProgressHUDModeText;
            hud.userInteractionEnabled = NO;
            hud.labelText = @"录音时间过短";
            hud.margin = 10.f;
            hud.removeFromSuperViewOnHide = YES;
            [hud hide:YES afterDelay:2];
        }
    }];
}

//手指划出按钮
-(void)recordDragOutside {
    _recordInfoLabel.text = @"松开手指,取消发送";
}

//手指划入按钮
-(void)recordDragInside {
    _recordInfoLabel.text = @"手指上划,取消发送";
}

-(void)recordingAmplitude:(NSNotification*)notification {
    
    double amplitude = ((NSNumber*)notification.object).doubleValue;
    if (amplitude<0.14) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_07"];
    } else if (0.14<= amplitude <0.28) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_06"];
    } else if (0.28<= amplitude <0.42) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_05"];
    } else if (0.42<= amplitude <0.57) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_04"];
    } else if (0.57<= amplitude <0.71) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_03"];
    } else if (0.71<= amplitude <0.85) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_02"];
    } else if (0.85<= amplitude) {
        _amplitudeImageView.image = [UIImage imageNamed:@"press_speak_icon_01"];
    }
}

#pragma mark - moreview 动作

/**
 *@brief 音频通话按钮
 */
- (void)voiceCallBtnTap:(id)sender {

    [self endOperation];
    
    
    // 弹出VoIP音频界面
    VoipCallController * VVC = [[VoipCallController alloc] initWithCallerName:self.title andCallerNo:self.sessionId andVoipNo:self.sessionId andCallType:1];
    [self presentViewController:VVC animated:YES completion:nil];
}

/**
 *@brief 视频通话按钮
 */
-(void)videoCallBtnTap:(id)sender {
    
    [self endOperation];
    
   // 弹出视频界面
    [[ECDevice sharedInstance].VoIPManager enableLoudsSpeaker:YES];
    VideoViewController * vvc = [[VideoViewController alloc]initWithCallerName:self.title andVoipNo:self.sessionId andCallstatus:0];
    [self presentViewController:vvc animated:YES completion:nil];
}

/**
 *@brief 视频按钮
 */
-(void)videoBtnTap:(id)sender {
    
    [self endOperation];
    // 弹出视频窗口
    UIImagePickerController* imagePicker = [[UIImagePickerController alloc] init];
    imagePicker.delegate = self;
    if ([UIImagePickerController isSourceTypeAvailable:(UIImagePickerControllerSourceTypeCamera)]) {
        
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
    } else {
        UIAlertView *alterView = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"设备不支持摄像头" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alterView show];
    }
    imagePicker.mediaTypes = @[(NSString *)kUTTypeMovie];
    
    imagePicker.videoMaximumDuration = 30;
    
    [self presentViewController:imagePicker animated:YES completion:NULL];
}

/**
 *@brief 图片按钮
 //gzz170622
 */
-(void)pictureBtnTap:(id)sender {
    
    [self endOperation];
    
    // 弹出照片选择 gzz170609
//    UIImagePickerController* imagePicker = [[UIImagePickerController alloc] init];
//    imagePicker.delegate = self;
//    imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
//    imagePicker.mediaTypes = @[(NSString *)kUTTypeImage];
//    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault];
//    [self presentViewController:imagePicker animated:YES completion:NULL];
    
    
    [PHPhotoLibrary requestAuthorization:^(PHAuthorizationStatus status){
        if (status != PHAuthorizationStatusAuthorized) return;
        dispatch_async(dispatch_get_main_queue(), ^{
            CTAssetsPickerController *picker = [[CTAssetsPickerController alloc] init];
            picker.delegate = self;
            // 显示选择的索引
            picker.showsSelectionIndex = YES;
            // 设置相册的类型：相机胶卷 + 自定义相册
            picker.assetCollectionSubtypes = @[
                                               @(PHAssetCollectionSubtypeSmartAlbumUserLibrary),
                                               @(PHAssetCollectionSubtypeAlbumRegular)];
            // 不需要显示空的相册
            picker.showsEmptyAlbums = NO;
            [self presentViewController:picker animated:YES completion:nil];
        });
    }];

}


#pragma mark - <CTAssetsPickerControllerDelegate> 第三方多图的代理 start
-(BOOL)assetsPickerController:(CTAssetsPickerController *)picker shouldSelectAsset:(PHAsset *)asset
{
    NSInteger max = 5;
    if (picker.selectedAssets.count >= max) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:[NSString stringWithFormat:@"最多选择%ld张图片", (long)max] preferredStyle:UIAlertControllerStyleAlert];
        [alert addAction:[UIAlertAction actionWithTitle:@"好的" style:UIAlertActionStyleDefault handler:nil]];
        [picker presentViewController:alert animated:YES completion:nil];
        // 这里不能使用self来modal别的控制器，因为此时self.view不在window上
        return NO;
    }
    return YES;
    
}




-(void)assetsPickerController:(CTAssetsPickerController *)picker didFinishPickingAssets:(NSArray *)assets
{
    // 关闭图片选择界面
    [picker dismissViewControllerAnimated:YES completion:nil];
    // 基本配置
    CGFloat scale = [UIScreen mainScreen].scale;
    PHImageRequestOptions *options = [[PHImageRequestOptions alloc] init];
    options.resizeMode   = PHImageRequestOptionsResizeModeExact;
    options.deliveryMode = PHImageRequestOptionsDeliveryModeHighQualityFormat;
//    gzz20200413
    options.synchronous = YES;
    options.networkAccessAllowed = YES;
    // 遍历选择的所有图片
    for (NSInteger i = 0; i < assets.count; i++) {
        PHAsset *asset = assets[i];
        
        if (asset.mediaType == PHAssetMediaTypeImage) {
            MCLog(@"pic181119");
//            CGSize size = CGSizeMake(asset.pixelWidth / scale, asset.pixelHeight / scale);
            CGSize size = CGSizeMake(asset.pixelWidth , asset.pixelHeight);
            // 获取图片
            [[PHImageManager defaultManager] requestImageForAsset:asset targetSize:size contentMode:PHImageContentModeDefault options:options resultHandler:^(UIImage * _Nullable result, NSDictionary * _Nullable info) {
                // 利用for循环 保存多个并且传送多个
                NSString *imagePath = [self saveToDocument:result];
                ECImageMessageBody *mediaBody = [[ECImageMessageBody alloc] initWithFile:imagePath displayName:imagePath.lastPathComponent];
                [self sendMediaMessage:mediaBody];
            }];
        }
     
    }
    
    
    
    
    
    //    NSString *mediaType = info[UIImagePickerControllerMediaType];
    //    if ([mediaType isEqualToString:(NSString *)kUTTypeMovie]) {
    //        NSURL *videoURL = info[UIImagePickerControllerMediaURL];
    //        [picker dismissViewControllerAnimated:YES completion:nil];
    //
    //        // we will convert it to mp4 format
    //        NSURL *mp4 = [self convertToMp4:videoURL];//gzz0614 将视频 -->data
    //        NSFileManager *fileman = [NSFileManager defaultManager];
    //        if ([fileman fileExistsAtPath:videoURL.path]) {
    //            NSError *error = nil;
    //            [fileman removeItemAtURL:videoURL error:&error];
    //            if (error) {
    //                MCLog(@"failed to remove file, error:%@.", error);
    //            }
    //        }
    //
    //        NSString *mp4Path = [mp4 relativePath];
    //        ECVideoMessageBody *mediaBody = [[ECVideoMessageBody alloc] initWithFile:mp4Path displayName:mp4Path.lastPathComponent];
    //        [self sendMediaMessage:mediaBody];
    //
    //    } else {
    //        UIImage *orgImage = info[UIImagePickerControllerOriginalImage];
    //        [picker dismissViewControllerAnimated:YES completion:nil];
    //
    //        NSURL *imageURL = [info valueForKey:UIImagePickerControllerReferenceURL];
    //        NSString* ext = imageURL.pathExtension.lowercaseString;
    //
    //        if ([ext isEqualToString:@"gif"]) {
    //            [self saveGifToDocument:imageURL];
    //        } else {
    //
    //            // 利用for循环 保存多个并且传送多个
    //            NSString *imagePath = [self saveToDocument:orgImage];
    //            ECImageMessageBody *mediaBody = [[ECImageMessageBody alloc] initWithFile:imagePath displayName:imagePath.lastPathComponent];
    //            [self sendMediaMessage:mediaBody];
    //
    //            //gzz170607
    //            //          [self sendMediaMessage:mediaBody];
    //
    //
    //        }
    //    }
//    void(^block)(NSString*) = ^(NSString *)str {
//
//    };
    
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    
}

#pragma mark - <CTAssetsPickerControllerDelegate> 第三方多图的代理 end

-(void)sendBottom:(id)sender{
    
    SendFlowersAndHeartVC *send = [[SendFlowersAndHeartVC alloc]init];
    send.FlowerExeruuid = self.experDocuuid;
    send.docPhoto = _HearImage;
    send.docNamee = _DocNameChat;
    WEAKSELFS
    send.flowerBackToDocBtnBlocks = ^(NSString *str) {
        [weakSelf gosendfssss];
    };
    [self.navigationController pushViewController:send animated:YES];
    
}

#pragma mark gosendfssss
-(void)gosendfssss{
    moreviewHide.hidden = YES;
           dragIsYes = @"yes"; //gzz190117
           isScrollToButtom = NO;
           if (_isDisplayKeyborad) {
               [self.view endEditing:YES];
           } else {
               if (kISiPhoneX) {//gzz171212
                   [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight-SafeAreaBottomHeight andDuration:0.25];
                   
               }else{
                   [self toolbarDisplayChangedToFrameY:viewHeight-_containerView.frame.size.height+ToolbarMoreViewHeight andDuration:0.25];
                   //
                   
               }
           }

}


/**
 *@brief 照相按钮
 */
-(void)cameraBtnTap:(id)sender {
    
    [self endOperation];
    
    
    //gzz0630
    NSString * mediaType = AVMediaTypeVideo;
    AVAuthorizationStatus  authorizationStatus = [AVCaptureDevice authorizationStatusForMediaType:mediaType];
    if (authorizationStatus == AVAuthorizationStatusRestricted|| authorizationStatus == AVAuthorizationStatusDenied) {
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"相机访问受限" message:@"请在“设置-隐私-相机”选项中允许肝胆相照访问你的相机" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
        
        [alertView show];//gzz0630
        

    }else{
        
        UIImagePickerController* imagePicker = [[UIImagePickerController alloc] init];
        imagePicker.delegate = self;
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        
        // gzz0201 隐藏 gzz0524改过来了
        //    #if 0
        //        //只照相
        //        imagePicker.mediaTypes = @[(NSString *)kUTTypeImage];
        //    #else
        //支持视频功能
        imagePicker.mediaTypes = @[(NSString *)kUTTypeImage,(NSString *)kUTTypeMovie];
        imagePicker.videoMaximumDuration = 30;//设置最大时间
        
        //    #endif
        
        //    imagePicker.mediaTypes = @[(NSString *)kUTTypeImage];//gzz0201  gzz0524
        
        
        [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault];
        [self presentViewController:imagePicker animated:YES completion:NULL];
        

        
    }
    
    
    
    
        
//    [self endOperation];
//
//    UIImagePickerController* imagePicker = [[UIImagePickerController alloc] init];
//    imagePicker.delegate = self;
//    imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
//
////    gzz0201 隐藏
////#if 0
////    //只照相
////    imagePicker.mediaTypes = @[(NSString *)kUTTypeImage];
////#else
////    //支持视频功能
////    imagePicker.mediaTypes = @[(NSString *)kUTTypeImage,(NSString *)kUTTypeMovie];
////    imagePicker.videoMaximumDuration = 30;
////
////#endif
//
//     imagePicker.mediaTypes = @[(NSString *)kUTTypeImage];//gzz0201  gzz0524
//
//
//    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault];
//    [self presentViewController:imagePicker animated:YES completion:NULL];
}

#pragma mark - 发送消息操作========================================================

/**
 *@brief 发送媒体类型消息gzz0713
 */
-(void)sendMediaMessage:(ECFileMessageBody*)mediaBody {
    moreviewHide.hidden = YES;//gzz190117

    if (!islinkSuccessed) {
          [self loginWithHaveUserLogined];
      }
    ECMessage *message = [[DeviceChatHelper sharedInstance] sendMediaMessage:mediaBody to:self.sessionId];
    
    [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onMesssageChanged object:message];
}

/**
 *@brief 发送文本消息  gzz170705
 */
-(void)sendTextMessage {//gzz0616wenben
    if (!islinkSuccessed) {
        [self loginWithHaveUserLogined];
    }
//gzz0109
    NSString * textString = [_inputTextView.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    if (textString.length == 0) {
        UIAlertView * alert = [[UIAlertView alloc]initWithTitle:nil message:@"不能发送空白消息" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil];
        [alert show];
        return;
    }
    
     ECMessage* message = [[DeviceChatHelper sharedInstance] sendTextMessage:textString to:self.sessionId];
    [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onMesssageChanged object:message];
    
 
}

/**
 *@brief 发送成功，消息状态更新
 */
-(void)sendMessageCompletion:(NSNotification*)notification {
    
    ECMessage* message = notification.userInfo[KMessageKey];
    __weak  __typeof(self) weakSelf = self;
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        
        __strong __typeof(weakSelf) strongSelf = weakSelf;
        if (!strongSelf) {
            return;
        }
        
        if ([strongSelf.sessionId isEqualToString:message.sessionId]) {
//            for (int i=strongSelf.messageArray.count-1; i>=0 ; i--) {
              for (NSInteger i=strongSelf.messageArray.count-1; i>=0 ; i--) {
            id content = [strongSelf.messageArray objectAtIndex:i];
                if ([content isKindOfClass:[NSNull class]]) {
                    continue;
                }
                ECMessage *currMsg = (ECMessage *)content;
                if ([message.messageId isEqualToString:currMsg.messageId]) {
                    currMsg.messageState = message.messageState;
                    dispatch_async(dispatch_get_main_queue(), ^{
                        [strongSelf.tableView beginUpdates];
                        [strongSelf.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:i inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
                        [strongSelf.tableView endUpdates];
                    });
                    break;
                }
            }
        }
    });
}

//下载媒体消息附件完成，状态更新
-(void)downloadMediaAttachFileCompletion:(NSNotification*)notification {
   //gzz0823
    ECError *error = notification.userInfo[KErrorKey];
    if (error.errorCode != ECErrorType_NoError) {
        return;
    }
    
    ECMessage* message = notification.userInfo[KMessageKey];
    __weak  __typeof(self) weakSelf = self;
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        
        __strong __typeof(weakSelf) strongSelf = weakSelf;
        if (!strongSelf) {
            return;
        }

        if ([strongSelf.sessionId isEqualToString:message.sessionId]) {
//            for (int i=strongSelf.messageArray.count-1; i>=0; i--) {
            for (NSInteger i=strongSelf.messageArray.count-1; i>=0; i--) {

                id content = [strongSelf.messageArray objectAtIndex:i];
                if ([content isKindOfClass:[NSNull class]]) {
                    continue;
                }
                ECMessage *currMsg = (ECMessage *)content;
                if ([message.messageId isEqualToString:currMsg.messageId]) {
                    dispatch_async(dispatch_get_main_queue(), ^{
                        [strongSelf.tableView beginUpdates];
                        [strongSelf.messageArray replaceObjectAtIndex:i withObject:message];
                        [strongSelf.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:i inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
                        [strongSelf.tableView endUpdates];
                    });
                    break;
                }
            }
        }
    });
}

#pragma mark - 保存音视频文件
- (NSURL *)convertToMp4:(NSURL *)movUrl {
    
    NSURL *mp4Url = nil;
    AVURLAsset *avAsset = [AVURLAsset URLAssetWithURL:movUrl options:nil];

    NSArray *compatiblePresets = [AVAssetExportSession exportPresetsCompatibleWithAsset:avAsset];
    
    if ([compatiblePresets containsObject:AVAssetExportPreset640x480]) {
        AVAssetExportSession *exportSession = [[AVAssetExportSession alloc] initWithAsset:avAsset
                                                                              presetName:AVAssetExportPreset640x480];
        
        NSDateFormatter* formater = [[NSDateFormatter alloc] init];
        [formater setDateFormat:@"yyyyMMddHHmmssSSS"];
        NSString* fileName = [NSString stringWithFormat:@"%@.mp4", [formater stringFromDate:[NSDate date]]];
        NSString* path = [NSString stringWithFormat:@"file:///private%@",[[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:fileName]];
        mp4Url = [NSURL URLWithString:path];
        
        exportSession.outputURL = mp4Url;
        exportSession.shouldOptimizeForNetworkUse = YES;
        exportSession.outputFileType = AVFileTypeMPEG4;
        dispatch_semaphore_t wait = dispatch_semaphore_create(0l);
        [exportSession exportAsynchronouslyWithCompletionHandler:^{
            switch ([exportSession status]) {
                case AVAssetExportSessionStatusFailed: {
                    MCLog(@"failed, error:%@.", exportSession.error);
                } break;
                case AVAssetExportSessionStatusCancelled: {
                    MCLog(@"cancelled.");
                } break;
                case AVAssetExportSessionStatusCompleted: {
                    MCLog(@"completed.");
                } break;
                default: {
                    MCLog(@"others.");
                } break;
            }
            dispatch_semaphore_signal(wait);
        }];
        
        long timeout = dispatch_semaphore_wait(wait, DISPATCH_TIME_FOREVER);
        if (timeout) {
            MCLog(@"timeout.");
        }
        
        if (wait) {
            wait = nil;
        }
    }
    
    return mp4Url;
}

- (UIImage *)fixOrientation:(UIImage *)aImage {
    if (aImage.imageOrientation == UIImageOrientationUp)
        return aImage;
    CGAffineTransform transform = CGAffineTransformIdentity;
    switch (aImage.imageOrientation) {
        case UIImageOrientationDown:
        case UIImageOrientationDownMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, aImage.size.height);
            transform = CGAffineTransformRotate(transform, M_PI);
            break;
        case UIImageOrientationLeft:
        case UIImageOrientationLeftMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
            transform = CGAffineTransformRotate(transform, M_PI_2);
            break;
        case UIImageOrientationRight:
        case UIImageOrientationRightMirrored:
            transform = CGAffineTransformTranslate(transform, 0, aImage.size.height);
            transform = CGAffineTransformRotate(transform, -M_PI_2);
            break;
        default:
            break;
    }
    switch (aImage.imageOrientation) {
        case UIImageOrientationUpMirrored:
        case UIImageOrientationDownMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
            transform = CGAffineTransformScale(transform, -1, 1);
            break;
        case UIImageOrientationLeftMirrored:
        case UIImageOrientationRightMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.height, 0);
            transform = CGAffineTransformScale(transform, -1, 1);
            break;
        default:
            break;
    }
    CGContextRef ctx = CGBitmapContextCreate(NULL, aImage.size.width, aImage.size.height,CGImageGetBitsPerComponent(aImage.CGImage), 0,CGImageGetColorSpace(aImage.CGImage),CGImageGetBitmapInfo(aImage.CGImage));
    CGContextConcatCTM(ctx, transform);
    switch (aImage.imageOrientation) {
        case UIImageOrientationLeft:
        case UIImageOrientationLeftMirrored:
        case UIImageOrientationRight:
        case UIImageOrientationRightMirrored:
            CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.height,aImage.size.width), aImage.CGImage);
            break;
        default:              CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.width,aImage.size.height), aImage.CGImage);              break;
    }       // And now we just create a new UIImage from the drawing context
    CGImageRef cgimg = CGBitmapContextCreateImage(ctx);
    UIImage *img = [UIImage imageWithCGImage:cgimg];
    CGContextRelease(ctx);
    CGImageRelease(cgimg);
    return img;
//    // No-op if the orientation is already correct
//    if (aImage.imageOrientation == UIImageOrientationUp)
//        return aImage;
//    // We need to calculate the proper transformation to make the image upright.
//    // We do it in 2 steps: Rotate if Left/Right/Down, and then flip if Mirrored.
//    CGAffineTransform transform = CGAffineTransformIdentity;
//    switch (aImage.imageOrientation) {
//        case UIImageOrientationDown:
//        case UIImageOrientationDownMirrored:
//            transform = CGAffineTransformTranslate(transform, aImage.size.width, aImage.size.height);
//            transform = CGAffineTransformRotate(transform, M_PI);
//            break;
//        case UIImageOrientationLeft:
//        case UIImageOrientationLeftMirrored:
//            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
//            transform = CGAffineTransformRotate(transform, M_PI_2);
//            break;
//        case UIImageOrientationRight:
//        case UIImageOrientationRightMirrored:
//            transform = CGAffineTransformTranslate(transform, 0, aImage.size.height);
//            transform = CGAffineTransformRotate(transform, -M_PI_2);
//            break;
//        default:
//            break;
//    }
//
//    switch (aImage.imageOrientation) {
//        case UIImageOrientationUpMirrored:
//        case UIImageOrientationDownMirrored:
//            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
//            transform = CGAffineTransformScale(transform, -1, 1);
//            break;
//        case UIImageOrientationLeftMirrored:
//        case UIImageOrientationRightMirrored:
//            transform = CGAffineTransformTranslate(transform, aImage.size.height, 0);
//            transform = CGAffineTransformScale(transform, -1, 1);
//            break;
//        default:
//            break;
//    }
//
//    // Now we draw the underlying CGImage into a new context, applying the transform     // calculated above.
//    CGContextRef ctx = CGBitmapContextCreate(NULL, aImage.size.width, aImage.size.height,CGImageGetBitsPerComponent(aImage.CGImage), 0,CGImageGetColorSpace(aImage.CGImage),CGImageGetBitmapInfo(aImage.CGImage));
//    CGContextConcatCTM(ctx, transform);
//    switch (aImage.imageOrientation) {
//        case UIImageOrientationLeft:
//        case UIImageOrientationLeftMirrored:
//        case UIImageOrientationRight:
//        case UIImageOrientationRightMirrored:
//            // Grr...
//            CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.height,aImage.size.width), aImage.CGImage);
//            break;
//        default:              CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.width,aImage.size.height), aImage.CGImage);              break;
//    }       // And now we just create a new UIImage from the drawing context
//    CGImageRef cgimg = CGBitmapContextCreateImage(ctx);
//    UIImage *img = [UIImage imageWithCGImage:cgimg];
//    CGContextRelease(ctx);
//    CGImageRelease(cgimg);
//    return img;
}

#define DefaultThumImageHigth 90.0f
#define DefaultPressImageHigth 960.0f
-(void)saveGifToDocument:(NSURL *)srcUrl {
    
    ALAssetsLibraryAssetForURLResultBlock resultBlock = ^(ALAsset *asset) {
        
        if (asset != nil) {
            ALAssetRepresentation *rep = [asset defaultRepresentation];
            Byte *imageBuffer = (Byte*)malloc((unsigned long)rep.size);
            NSUInteger bufferSize = [rep getBytes:imageBuffer fromOffset:0.0 length:(unsigned long)rep.size error:nil];
            NSData *imageData = [NSData dataWithBytesNoCopy:imageBuffer length:bufferSize freeWhenDone:YES];
            
            NSDateFormatter* formater = [[NSDateFormatter alloc] init];
            [formater setDateFormat:@"yyyyMMddHHmmssSSS"];
            NSString* fileName =[NSString stringWithFormat:@"%@.gif", [formater stringFromDate:[NSDate date]]];
            NSString* filePath = [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:fileName];

            [imageData writeToFile:filePath atomically:YES];
            
            ECImageMessageBody *mediaBody = [[ECImageMessageBody alloc] initWithFile:filePath displayName:filePath.lastPathComponent];
            [self sendMediaMessage:mediaBody];
        } else {
        }
    };
    
    ALAssetsLibrary* assetLibrary = [[ALAssetsLibrary alloc] init];
    [assetLibrary assetForURL:srcUrl
                  resultBlock:resultBlock
                 failureBlock:^(NSError *error){
                 }];
}

-(NSString*)saveToDocument:(UIImage*)image {
   
     UIImage* fixImage = [self fixOrientation:image];
 

        NSDateFormatter* formater = [[NSDateFormatter alloc] init];
        [formater setDateFormat:@"yyyyMMddHHmmssSSS"];
        NSString* fileName =[NSString stringWithFormat:@"%@.jpg", [formater stringFromDate:[NSDate date]]];
        
        NSString* filePath=[[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:fileName];
        
//        //图片按0.5的质量压缩－》转换为NSData
    CGSize pressSize = CGSizeMake((DefaultPressImageHigth/fixImage.size.height) * fixImage.size.width, DefaultPressImageHigth);
//     CGSize pressSize = CGSizeMake(fixImage.size.width, fixImage.size.height);
        UIImage * pressImage = [CommonTools compressImage:fixImage withSize:pressSize];

        NSData *imageData = UIImageJPEGRepresentation(pressImage, 1); ////gzz20200413

//      NSData*  imageData = UIImagePNGRepresentation(fixImage);

        [imageData writeToFile:filePath atomically:YES];
        MCLog(@"imageData 1 ==%@",imageData);

        CGSize thumsize = CGSizeMake((DefaultThumImageHigth/fixImage.size.height) * fixImage.size.width, DefaultThumImageHigth);
        UIImage * thumImage = [CommonTools compressImage:fixImage withSize:thumsize];
        NSData * photo = UIImageJPEGRepresentation(thumImage, 1);
       MCLog(@"thumImage 1 ==%@",photo);

        NSString * thumfilePath = [NSString stringWithFormat:@"%@.jpg_thum", filePath];
        [photo writeToFile:thumfilePath atomically:YES];

        return filePath;
    
//    UIImage* fixImage = [self fixOrientation:image];
//
//    NSDateFormatter* formater = [[NSDateFormatter alloc] init];
//    [formater setDateFormat:@"yyyyMMddHHmmssSSS"];
//    NSString* fileName =[NSString stringWithFormat:@"%@.jpg", [formater stringFromDate:[NSDate date]]];
//
//    NSString* filePath=[[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:fileName];
//
//    //图片按0.5的质量压缩－》转换为NSData
//    CGSize pressSize = CGSizeMake((DefaultPressImageHigth/fixImage.size.height) * fixImage.size.width, DefaultPressImageHigth);
//
//
//    UIImage * pressImage = [CommonTools compressImage:fixImage withSize:pressSize];
////    NSData *imageData = UIImageJPEGRepresentation(pressImage, 0.5); //47607
//    NSData *imageData = UIImageJPEGRepresentation(pressImage, 1); ////gzz20200413
//    [imageData writeToFile:filePath atomically:YES];
//    MCLog(@"imageoe 1 ==%@",pressImage);
//
//
//    CGSize thumsize = CGSizeMake((DefaultThumImageHigth/fixImage.size.height) * fixImage.size.width, DefaultThumImageHigth);
//    UIImage * thumImage = [CommonTools compressImage:fixImage withSize:thumsize];
////    NSData * photo = UIImageJPEGRepresentation(thumImage, 0.5);
//    NSData * photo = UIImageJPEGRepresentation(thumImage, 1);//gzz20200413
//
//    NSString * thumfilePath = [NSString stringWithFormat:@"%@.jpg_thum", filePath];
//    [photo writeToFile:thumfilePath atomically:YES];
//
//    return filePath;
    
}

#pragma mark - UIImagePickerControllerDelegate

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {
    
    NSString *mediaType = info[UIImagePickerControllerMediaType];
    if ([mediaType isEqualToString:(NSString *)kUTTypeMovie]) {
        NSURL *videoURL = info[UIImagePickerControllerMediaURL];
        [picker dismissViewControllerAnimated:YES completion:nil];

        // we will convert it to mp4 format
        NSURL *mp4 = [self convertToMp4:videoURL];//gzz0614 将视频 -->data
        NSFileManager *fileman = [NSFileManager defaultManager];
        if ([fileman fileExistsAtPath:videoURL.path]) {
            NSError *error = nil;
            [fileman removeItemAtURL:videoURL error:&error];
            if (error) {
                MCLog(@"failed to remove file, error:%@.", error);
            }
        }
        
        NSString *mp4Path = [mp4 relativePath];
        ECVideoMessageBody *mediaBody = [[ECVideoMessageBody alloc] initWithFile:mp4Path displayName:mp4Path.lastPathComponent];
        [self sendMediaMessage:mediaBody];
        
    } else {
        UIImage *orgImage = info[UIImagePickerControllerOriginalImage];
        [picker dismissViewControllerAnimated:YES completion:nil];
        
        
        NSURL *imageURL = [info valueForKey:UIImagePickerControllerReferenceURL];
        NSString* ext = imageURL.pathExtension.lowercaseString;

        if ([ext isEqualToString:@"gif"]) {
            [self saveGifToDocument:imageURL];
        } else {//gzz20200413
            
            
            NSString *imagePath = [self saveToDocument:orgImage];
            
            ECImageMessageBody *mediaBody = [[ECImageMessageBody alloc] initWithFile:imagePath displayName:imagePath.lastPathComponent];
            [self sendMediaMessage:mediaBody];
        }
    }
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissViewControllerAnimated:YES completion:nil];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];

}

#pragma mark - HPGrowingTextViewDelegate

//根据新的高度来改变当前的页面的的布局
- (void)growingTextView:(HPGrowingTextView *)growingTextView willChangeHeight:(float)height {

    moreviewHide.hidden = YES;//gzz190117
    __weak __typeof(self)weakSelf = self;
    float diff = (growingTextView.frame.size.height - height);
    void(^animations)() = ^{
        __strong __typeof(weakSelf)strongSelf = weakSelf;
        if (strongSelf) {
            CGRect r = _containerView.frame;
            r.size.height -= diff;
            r.origin.y += diff;
            _containerView.frame = r;
            CGRect tableFrame = strongSelf.tableView.frame;
            tableFrame.size.height += diff;
            strongSelf.tableView.frame = tableFrame;
        }
    };
    
    void(^completion)(BOOL) = ^(BOOL finished){
        __strong __typeof(weakSelf)strongSelf = weakSelf;
        if (strongSelf && strongSelf.messageArray.count>0){
            [strongSelf.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:strongSelf.messageArray.count-1 inSection:0] atScrollPosition:UITableViewScrollPositionBottom animated:YES];
        }
    };

    [UIView animateWithDuration:0.1 delay:0.0f options:(UIViewAnimationOptionBeginFromCurrentState) animations:animations completion:completion];
}

- (BOOL)growingTextView:(HPGrowingTextView *)growingTextView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text{
     moreviewHide.hidden = YES;//gzz190117
    if ([text isEqualToString:@"\n"]){ //判断输入的字是否是回车，即按下return
        //在这里做你响应return键的代码
        [self sendTextMessage];
        growingTextView.text = @"";
        return NO; //这里返回NO，就代表return键值失效，即页面上按下return，不会出现换行，如果为yes，则输入页面会换行
    }
    
    if (range.length == 1) {
        return YES;
    }
    return YES;
}

//获取焦点
- (void)growingTextViewDidBeginEditing:(HPGrowingTextView *)growingTextView {
//    [_menuController setMenuItems:nil];
//    _inputMaskImage.image = [[UIImage imageNamed:@"input_box_on"] stretchableImageWithLeftCapWidth:95.0f topCapHeight:16.0f];
}

//失去焦点
- (void)growingTextViewDidEndEditing:(HPGrowingTextView *)growingTextView {
//    _inputMaskImage.image = [[UIImage imageNamed:@"input_box"] stretchableImageWithLeftCapWidth:95.0f topCapHeight:16.0f];
    MCLog(@"/失去焦点");
}
//
- (void)growingTextViewDidChangeSelection:(HPGrowingTextView *)growingTextView{
    MCLog(@"growingTextViewDidChangeSelectio");

//    NSRange range;
//    range.location = 0;
//    range.length = 0;
//    _inputTextView.selectedRange = range;

}


@end
















#define EC_DefaultThumImageHigth 90.0f
#define EC_DefaultPressImageHigth 960.0f

      SendFlowersAndHeartVC *send = [[SendFlowersAndHeartVC alloc]init];
            send.FlowerExeruuid = self.experDocuuid;
            send.docPhoto = _HearImage;
            send.docNamee = _DocNameChat;
            [self.navigationController pushViewController:send animated:YES];


   [self sendFlowerShowView];
    
    CGFloat height = 60/320.0*SCREEN_WIDTH;
    
    [UIView animateWithDuration:0.25 animations:^{
        coverView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height-height-SafeAreaBottomHeight, [UIScreen mainScreen].bounds.size.width, height+SafeAreaBottomHeight);
    }];

  [UIView animateWithDuration:0.25 animations:^{
        self.showView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 200);
        self.coverViewStart.alpha = 0;
    } completion:^(BOOL finished) {
        [self.coverViewStart removeFromSuperview];
    }];

   [self refreshTableView:nil];



    //获取keyWindow
        UIWindow *window = [UIApplication sharedApplication].keyWindow;
        _yingziwindowStart=window;
        //1 创建遮盖的view
        UIView *view11 = [[UIView alloc] init];
        self.coverViewStart= view11;
        //把遮盖的view添加到window上
        [window addSubview:view11];
        //让遮盖view的大小和屏幕大小一样。并从0，0开始显示
        view11.frame = [UIScreen mainScreen].bounds; //self.view.bounds; //[x,y width, height]
        view11.backgroundColor = [UIColor blackColor];
        view11.alpha = 0.3;
        
        UIView *view=[[UIView alloc]initWithFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 140+SafeAreaBottomHeight)];
        view.backgroundColor=[UIColor whiteColor];
        [window addSubview:view];
        self.showView=view;




     gzz20200407

 height = 60/320.0*SCREEN_WIDTH;

[UIView animateWithDuration:0.25 animations:^{
        self.showView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 200);
        self.coverViewStart.alpha = 0;
    } completion:^(BOOL finished) {
        [self.coverViewStart removeFromSuperview];
    }];
    

 [UIView animateWithDuration:0.25 animations:^{
            self.showView.frame=CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 200);
            self.coverViewStart.alpha = 0;
        } completion:^(BOOL finished) {
            [self.coverViewStart removeFromSuperview];
        }];


+ (NSString *)saveToDocument:(UIImage*)image isHD:(BOOL)isHD {
    
    
    UIImage* fixImage = [UIImage ec_fixOrientation:image];
    NSDateFormatter* formater = [[NSDateFormatter alloc] init];
    [formater setDateFormat:@"yyyyMMddHHmmssSSS"];
    NSString* fileName =[NSString stringWithFormat:@"%@.jpg", [formater stringFromDate:[NSDate date]]];
    NSString* filePath=[[ECDeviceIMHelper sharedInstanced].imgBaseFilePath stringByAppendingPathComponent:fileName];
    NSData *imageData = nil;
    if (!isHD) {
        //图片按0.5的质量压缩－》转换为NSData
        CGSize pressSize = CGSizeMake((EC_DefaultPressImageHigth/fixImage.size.height) * fixImage.size.width, EC_DefaultPressImageHigth);
        UIImage * pressImage = [UIImage ec_compressImage:fixImage withSize:pressSize];
        imageData = UIImageJPEGRepresentation(pressImage, 0.5);
    } else {
        imageData = UIImagePNGRepresentation(fixImage);
    }
    [imageData writeToFile:filePath atomically:YES];
    CGSize thumsize = CGSizeMake((EC_DefaultThumImageHigth/fixImage.size.height) * fixImage.size.width, EC_DefaultThumImageHigth);
    UIImage * thumImage = [UIImage ec_compressImage:fixImage withSize:thumsize];
    NSData * photo = UIImageJPEGRepresentation(thumImage, 0.5);
    NSString * thumfilePath = [NSString stringWithFormat:@"%@.jpg_thum", filePath];
    [photo writeToFile:thumfilePath atomically:YES];
    return filePath;
}



#pragma mark - 压缩图片
+ (UIImage *)ec_compressImage:(UIImage *)image withSize:(CGSize)viewsize{
    CGFloat imgHWScale = image.size.height/image.size.width;
    CGFloat viewHWScale = viewsize.height/viewsize.width;
    CGRect rect = CGRectZero;
    if (imgHWScale>viewHWScale){
        rect.size.height = viewsize.width*imgHWScale;
        rect.size.width = viewsize.width;
        rect.origin.x = 0.0f;
        rect.origin.y =  (viewsize.height - rect.size.height)*0.5f;
    }
    else{
        CGFloat imgWHScale = image.size.width/image.size.height;
        rect.size.width = viewsize.height*imgWHScale;
        rect.size.height = viewsize.height;
        rect.origin.y = 0.0f;
        rect.origin.x = (viewsize.width - rect.size.width)*0.5f;
    }
    UIGraphicsBeginImageContext(viewsize);
    [image drawInRect:rect];
    UIImage *newimg = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    return newimg;
}

#pragma mark - 调整图片的旋转角度
+ (UIImage *)ec_fixOrientation:(UIImage *)aImage {
    if (aImage.imageOrientation == UIImageOrientationUp)
        return aImage;
    CGAffineTransform transform = CGAffineTransformIdentity;
    switch (aImage.imageOrientation) {
        case UIImageOrientationDown:
        case UIImageOrientationDownMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, aImage.size.height);
            transform = CGAffineTransformRotate(transform, M_PI);
            break;
        case UIImageOrientationLeft:
        case UIImageOrientationLeftMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
            transform = CGAffineTransformRotate(transform, M_PI_2);
            break;
        case UIImageOrientationRight:
        case UIImageOrientationRightMirrored:
            transform = CGAffineTransformTranslate(transform, 0, aImage.size.height);
            transform = CGAffineTransformRotate(transform, -M_PI_2);
            break;
        default:
            break;
    }
    switch (aImage.imageOrientation) {
        case UIImageOrientationUpMirrored:
        case UIImageOrientationDownMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.width, 0);
            transform = CGAffineTransformScale(transform, -1, 1);
            break;
        case UIImageOrientationLeftMirrored:
        case UIImageOrientationRightMirrored:
            transform = CGAffineTransformTranslate(transform, aImage.size.height, 0);
            transform = CGAffineTransformScale(transform, -1, 1);
            break;
        default:
            break;
    }
    CGContextRef ctx = CGBitmapContextCreate(NULL, aImage.size.width, aImage.size.height,CGImageGetBitsPerComponent(aImage.CGImage), 0,CGImageGetColorSpace(aImage.CGImage),CGImageGetBitmapInfo(aImage.CGImage));
    CGContextConcatCTM(ctx, transform);
    switch (aImage.imageOrientation) {
        case UIImageOrientationLeft:
        case UIImageOrientationLeftMirrored:
        case UIImageOrientationRight:
        case UIImageOrientationRightMirrored:
            CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.height,aImage.size.width), aImage.CGImage);
            break;
        default:              CGContextDrawImage(ctx, CGRectMake(0,0,aImage.size.width,aImage.size.height), aImage.CGImage);              break;
    }       // And now we just create a new UIImage from the drawing context
    CGImageRef cgimg = CGBitmapContextCreateImage(ctx);
    UIImage *img = [UIImage imageWithCGImage:cgimg];
    CGContextRelease(ctx);
    CGImageRelease(cgimg);
    return img;
}


AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
AFSecurityPolicy *securityPolicy =  [AFSecurityPolicy defaultPolicy];
// 客户端是否信任非法证书
securityPolicy.allowInvalidCertificates = YES;
// 是否在证书域字段中验证域名
securityPolicy.validatesDomainName = NO;
manager.securityPolicy = securityPolicy








2020-04-03

{
    "left_result" = "4集";
    "left_tip" = "剩余下载";
    name = video;
    num = 4;
    "right_tip" = "前往下载";
    title = "肝胆视频";
},
{
    "left_result" = "1篇";
    "left_tip" = "剩余篇数";
    name = kejian;
    num = 1;
    "right_tip" = "前往下载";
    title = "肝胆课件";
},
{
    "left_result" = "0次";
    "left_tip" = "剩余兑换";
    name = jingpin;
    num = 0;
    "right_tip" = "前往兑换";
    title = "精品课程";
},
{
    "left_result" = "35篇";
    "left_tip" = "剩余篇数";
    name = wanfang;
    num = 35;
    "right_tip" = "前往下载";
    title = "万方医学";




  data =     (
                {
            flag = 1;
            "left_result" = "2集";
            "left_tip" = "赠送下载";
            name = video;
            num = 6;
            "right_result" = "立即领取";
            "right_tip" = "立即领取";
            title = "肝胆视频（5个新随访）";
        },
                {
            flag = 0;
            "left_result" = "4个";
            "left_tip" = "再新增随访";
            name = kejian;
            num = 6;
            "right_result" = "2篇";
            "right_tip" = "赠送下载";
            title = "肝胆课件";
        },
                {
            flag = 0;
            "left_result" = "14个";
            "left_tip" = "再新增随访";
            name = jingpin;
            num = 6;
            "right_result" = "1次";
            "right_tip" = "赠送兑换";
            title = "精品课程";
        },
                {
            flag = 1;
            "left_result" = "5篇";
            "left_tip" = "赠送下载";
            name = wanfang;
            num = 6;
            "right_result" = "立即领取";
            "right_tip" = "立即领取";
            title = "万方医学（5个新随访）";
        },
                {
            flag = 0;
            "left_result" = "94个";
            "left_tip" = "再新增随访（年度计算）";
            name = upan;
            num = 6;
            "right_result" = "1个";
            "right_tip" = "赠送U盘";
            title = "知识U盘";
        }

























{
    "left_result" = "0集";
    "left_tip" = "剩余下载";
    name = video;
    num = 0;
    "right_tip" = "前往下载";
    title = "肝胆视频";
},
{
    "left_result" = "0篇";
    "left_tip" = "剩余篇数";
    name = kejian;
    num = 0;
    "right_tip" = "前往下载";
    title = "肝胆课件";
},
{
    "left_result" = "0次";
    "left_tip" = "剩余兑换";
    name = jingpin

    "right_tip" = "前往兑换";
    title = "精品课程";
},
{
    "left_result" = "0篇";
    "left_tip" = "剩余篇数";
    name = wanfang;
    num = 0;
    "right_tip" = "前往下载";
    title = "万方医学";
}







 [self getSystemTimeFromServer:@"get"];
   {
            flag = 0;
            "left_result" = "5个";
            "left_tip" = "再新增随访";
            name = video;
            num = 0;
            "right_result" = "2集";
            "right_tip" = "赠送下载";
            title = "肝胆视频";
        },
                {
            flag = 0;
            "left_result" = "10个";
            "left_tip" = "再新增随访";
            name = kejian;
            num = 0;
            "right_result" = "2篇";
            "right_tip" = "赠送下载";
            title = "肝胆课件";
        },
                {
            flag = 0;
            "left_result" = "20个";
            "left_tip" = "再新增随访";
            name = jingpin;
            num = 0;
            "right_result" = "1次";
            "right_tip" = "赠送兑换";
            title = "精品课程";
        },
                {
            flag = 0;
            "left_result" = "5个";
            "left_tip" = "再新增随访";
            name = wanfang;
            num = 0;
            "right_result" = "5篇";
            "right_tip" = "赠送下载";
            title = "万方医学";
        },
                {
            flag = 0;
            "left_result" = "100个";
            "left_tip" = "再新增随访（年度计算）";
            name = upan;
            num = 0;
            "right_result" = "1个";
            "right_tip" = "赠送U盘";
            title = "知识U盘";
        }









/



第一个cell//


//  DoIntroduceCell.m
//  Patient
//
//  Created by gao zhen on 2018/5/29.
//  Copyright © 2018年 ShangYu. All rights reserved.
//

#import "DoIntroduceCell.h"
//专家信息
@interface DoIntroduceCell()

/*上背景图片*/
@property(nonatomic,strong) UIImageView *imageBj;


/*是否有明星专家 图片*/
@property(nonatomic,strong) UIImageView *imagerMingyi;
/*是否有明星专家 button*/
@property (nonatomic, strong) UIButton *strimingyBtn;
/*专家头像 图片*/
@property(nonatomic,strong) UIImageView *headimage;


/*包裹姓名性别的view*/
@property(nonatomic,strong) UIView *viewww;
//labname 姓名lable
@property(nonatomic,strong) UILabel *labname;
//imagetare 性别图片
@property(nonatomic,strong) UIImageView *imagetare;


//labyiy 医院名称
@property(nonatomic,strong) UILabel *labyiy;

//三家 医院
@property(nonatomic,strong) UILabel *famousLabel;

//labpost 职称
@property(nonatomic,strong) UILabel *labpost;
//labzhuanchang 科室名称
@property(nonatomic,strong) UILabel *labzhuanchang;


//波浪线
@property(nonatomic,strong) UIImageView *waveImageview;

/*bgview*/
@property (nonatomic, strong) UIView *bgView;

//followPatientsLNum 随访患者数目
@property(nonatomic,strong) UILabel *followPatientsLNum;
//flowersPatientsLNum 患者送花数目
@property(nonatomic,strong) UILabel *flowersPatientsLNum;
//consultLNum 公益咨询数目
@property(nonatomic,strong) UILabel *consultLNum;


//followPatientsL 随访患者
@property(nonatomic,strong) UILabel *followPatientsL;
//flowersPatientsL患者送花
@property(nonatomic,strong) UILabel *flowersPatientsL;
//consultLNum 公益咨询
@property(nonatomic,strong) UILabel *consultL;



//liness 横线
@property(nonatomic,strong) UIView *liness;
//adddbuton 添加解除随访
@property (nonatomic, strong) UIButton *adddbuton;
/*flowerButton 我要送花*/
@property (nonatomic, strong) UIButton *flowerButton;





@end


@implementation DoIntroduceCell

+(instancetype)cellWithTableView:(UITableView *)tableView {
    
    static NSString *identifiers = @"docIntromessageCell";
    DoIntroduceCell *cell = [tableView dequeueReusableCellWithIdentifier:identifiers];
    if (cell == nil) {
        
        cell = [[DoIntroduceCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifiers];
    }
    return cell;
}


-(id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{
    
    self=[super initWithStyle:style reuseIdentifier:reuseIdentifier];
    
    if (self) {
        
        UIImageView *monthIme = [UIImageView new];
        [self.contentView addSubview:monthIme];
        _imageBj = monthIme;
        
    
        UIImageView *photoImg = [UIImageView new];
        [self.contentView addSubview:photoImg];
        _imagerMingyi = photoImg;
        
        UIButton *btnCover = [UIButton new];
        [self.contentView addSubview:btnCover];
        _strimingyBtn = btnCover;
        
//        headimage
        UIImageView *headimages = [UIImageView new];
        [self.contentView addSubview:headimages];
        _headimage = headimages;
        
        
//       UIView * viewwws = [UIView new];
//        [self.contentView addSubview:viewwws];
//        _viewww = viewwws;
        
//        labname
        UILabel *labename = [UILabel new];
        [self.contentView  addSubview:labename];
        _labname = labename;
//        imagetare
        UIImageView *imagetares = [UIImageView new];
        [self.contentView  addSubview:imagetares];
        _imagetare = imagetares;
        

        
//     labpost
        UILabel *labposts = [UILabel new];
        [self.contentView addSubview:labposts];
        _labpost = labposts;
//        labzhuanchang
        UILabel *labzhuanchangs = [UILabel new];
        [self.contentView addSubview:labzhuanchangs];
        _labzhuanchang = labzhuanchangs;
        
        
        
        //       labyiy/
        UILabel *labyiys = [UILabel new];
        [self.contentView addSubview:labyiys];
        _labyiy = labyiys;
        
//        famousLabel
        UILabel *famous = [UILabel new];
        [self.contentView addSubview:famous];
       _famousLabel = famous;
        
        
        UIView*bgviews = [UIView new];
        [self.contentView addSubview:bgviews];
        _bgView = bgviews;
        
//        followPatientsLNum
        UILabel *followPatientsLNums = [UILabel new];
        [_bgView addSubview:followPatientsLNums];
        _followPatientsLNum = followPatientsLNums;
//        flowersPatientsLNum
        UILabel *flowersPatientsLNums = [UILabel new];
        [_bgView  addSubview:flowersPatientsLNums];
        _flowersPatientsLNum= flowersPatientsLNums;
        
        UILabel *consultnums = [UILabel new];
        [_bgView addSubview:consultnums];
        _consultLNum = consultnums;
        
        UILabel *followPatientsLs = [UILabel new];
        [_bgView addSubview:followPatientsLs];
        _followPatientsL = followPatientsLs;
        
        
        UILabel *flowersPatientsLs = [UILabel new];
        [_bgView addSubview:flowersPatientsLs];
        _flowersPatientsL = flowersPatientsLs;
        
        
        UILabel *consults = [UILabel new];
        [_bgView  addSubview:consults];
        _consultL = consults;
        
        
//        waveImageview
        UIImageView *wave = [UIImageView new];
              [self.contentView  addSubview:wave];
              _waveImageview = wave;
        
//        liness
//        UIView * linesss = [UIView new];
//        [_bgView addSubview:linesss];
//        _liness = linesss;
        
//        adddbuton
//        UIButton *adddbutons = [UIButton new];
//        [_bgView addSubview:adddbutons];
//        _adddbuton = adddbutons;
//
//        UIButton *flowerButtons = [UIButton new];
//        [_bgView addSubview:flowerButtons];
//        _flowerButton = flowerButtons;
    }
    
    return self;
}

//- (void)setDataDic:(NSMutableDictionary *)dataDic{
//
//    NSDictionary * dataDics = [DicRemove clearErrorDataZanwu:dataDic[@"data"]];//gzz0406
//
//
////    CGFloat paview=  self.frame.size.width;
//
//    _imageBj.image = [UIImage imageNamed:@"signInBgInfoMy"];
//    _imageBj.frame = CGRectMake(0, 0, SCREEN_WIDTH, 180+35);
//
//
//
////    NSString *strimingyi = [NSString stringWithFormat:@"%@",dataDics[@"isStar"]];
////    _imagerMingyi.frame = CGRectMake(SCREEN_WIDTH-80, 10, 45, 45);
////
////    if ([strimingyi isEqualToString:@"0"]) {
////        _strimingyBtn.hidden = YES;
////
////    }
////    if ([strimingyi isEqualToString:@"1"]) {
////        _imagerMingyi.image = [UIImage imageNamed:@"exportSign"];//exportSign ex_pert2
////    }
////    //gzz622
////    _strimingyBtn.frame = CGRectMake(_imagerMingyi.x-10, _imagerMingyi.y-10, _imagerMingyi.width+20, _imagerMingyi.height+20);
////    [_strimingyBtn addTarget:self action:@selector(consultDOcBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
////
//
//    NSString *imagehear = [NSString stringWithFormat:@"%@%@",ImageUrl,dataDics[@"photo"]];
//    _headimage.frame = CGRectMake(10, 10, 50, 50);
//    [_headimage sd_setImageWithURL:[NSURL URLWithString:imagehear] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
//    _headimage.layer.cornerRadius = 8.0;
//    _headimage.layer.masksToBounds = YES;
//
//
////    _viewww.frame = CGRectMake(CGRectGetMaxX(_headimage.frame)+5, 12, SCREEN_WIDTH-70, 16);
//
//    _labname.frame =  CGRectMake(CGRectGetMaxX(_headimage.frame)+5,12, SCREEN_WIDTH-45, 16);//gzz0324
//    _labname.font = SYSTEMFONT(16);
//    _labname.textColor = [UIColor whiteColor];
//    _labname.text = dataDics[@"realName"];
//    _labname.textAlignment = NSTextAlignmentLeft;
//    [_labname sizeToFit];
//
//
//
//    NSString *strSEx = [NSString stringWithFormat:@"%@",dataDics[@"sex"]];
//    _imagetare.frame = CGRectMake(CGRectGetMaxX(_labname.frame)+5, CGRectGetMaxY(_labname.frame)+3, 15, 15);
//    _imagetare.centerY = _labname.centerY;
//    if ([strSEx isEqualToString:@"0"]) {
//        _imagetare.image = [UIImage imageNamed:@"newman"];//gzz0412
//    }
//    if ([strSEx isEqualToString:@"1"]) {
//        _imagetare.image = [UIImage imageNamed:@"newwoman"];//gzz0412
//    }
//
//
//    //职称
//       _labpost.frame = CGRectMake(CGRectGetMaxX(_headimage.frame)+5, CGRectGetMaxY(_labname.frame)+11, 100, 14);
//       _labpost.text = [NSString stringWithFormat:@"%@ | ",dataDics[@"positionName"]];
//       _labpost.font = SYSTEMFONT(14);
//       _labpost.textColor = [UIColor whiteColor];
//       _labpost.textAlignment = NSTextAlignmentLeft;
//       [_labpost sizeToFit];
//
//       //科室名称
//       _labzhuanchang.frame = CGRectMake(CGRectGetMaxX(_labpost.frame), 5,SCREEN_WIDTH-CGRectGetMaxX(_labpost.frame), 14);
//       _labzhuanchang.text = [NSString stringWithFormat:@"%@",dataDics[@"officeName"]];
//       _labzhuanchang.font = SYSTEMFONT(14);
//       _labzhuanchang.textColor = [UIColor whiteColor];
//       _labzhuanchang.centerY = _labpost.centerY;
//
//
////    医院名字
//    _labyiy.frame = CGRectMake(10, CGRectGetMaxY(_headimage.frame)+15,SCREEN_WIDTH-20,16);
//    _labyiy.text = [NSString stringWithFormat:@"%@",dataDics[@"hospitalName"]];
//    _labyiy.font = SYSTEMFONT(14);
//    _labyiy.textAlignment=NSTextAlignmentLeft;
//    _labyiy.textColor = [UIColor whiteColor];
//    [_labyiy sizeToFit];
//
////    三甲医院
//    _famousLabel.frame = CGRectMake(CGRectGetMaxX(_labyiy.frame)+5, CGRectGetMaxY(_headimage.frame)+5,SCREEN_WIDTH-20,16);
//     _famousLabel.text = [NSString stringWithFormat:@"%@",@"三甲"];
//     _famousLabel.font = SYSTEMFONT(12);
//     _famousLabel.textAlignment=NSTextAlignmentCenter;
//    _famousLabel.backgroundColor = [UIColor whiteColor];
//     _famousLabel.textColor = JISECOLOR;
//    [_famousLabel sizeToFit];
//    _famousLabel.layer.cornerRadius = 10;
//    _famousLabel.layer.masksToBounds =YES;
//    _famousLabel.width = _famousLabel.width+16;
//    _famousLabel.height = _famousLabel.height+4;
//    _famousLabel.centerY = _labyiy.centerY;
//
//    if (10+_labyiy.width+5+_famousLabel.width+5>SCREEN_WIDTH) {
//        _labyiy.width = SCREEN_WIDTH-10-5-5-_famousLabel.width;
//    }
//
//    for (int i = 0; i<3; i++) {
//        UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10+i*80, CGRectGetMaxY(_labyiy.frame)+10, 70, 20) text:@"咨询专家" titleColor:[UIColor whiteColor] textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:12.0]];
//        [self.contentView addSubview:label];
//        label.layer.cornerRadius = 5;
//        label.layer.masksToBounds = YES;
//        label.layer.borderColor = WHITECOLORS.CGColor;
//        label.layer.borderWidth = 1.0;
//
//    }
//
//    _bgView.frame = CGRectMake(0, self.height-50, SCREEN_WIDTH, 50);
//    _bgView.backgroundColor = [UIColor w];
//
//    _followPatientsLNum.frame = CGRectMake(0, 0, SCREEN_WIDTH/3, 16);
//    _followPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"expertApplyNum"]];
//    _followPatientsLNum.textColor = JISECOLOR;
//    _followPatientsLNum.textAlignment = NSTextAlignmentCenter;
//    _followPatientsLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//    _flowersPatientsLNum.frame = CGRectMake(SCREEN_WIDTH/3,0, SCREEN_WIDTH/3, 16);
//    _flowersPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"sendFlowerNum"]];
//    _flowersPatientsLNum.textColor = JISECOLOR;
//    _flowersPatientsLNum.textAlignment = NSTextAlignmentCenter;
//    _flowersPatientsLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//
//    _consultLNum.frame = CGRectMake(SCREEN_WIDTH/3*2,0, SCREEN_WIDTH/3, 16);
//    _consultLNum.text =   [NSString stringWithFormat:@"%@",dataDic[@"ConsultTotalNum"]];//dataDic[@"ConsultTotalNum"];;
//    _consultLNum.textColor = JISECOLOR;
//    _consultLNum.textAlignment = NSTextAlignmentCenter;
//    _consultLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//    _followPatientsL.frame = CGRectMake(0, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
//    _followPatientsL.text = @"随访患者数";
//    _followPatientsL.textColor = ZHONGBLACKCOLOR;
//    _followPatientsL.textAlignment = NSTextAlignmentCenter;
//    _followPatientsL.font = SYSTEMFONT(14);
//
//
//    _flowersPatientsL.frame = CGRectMake(SCREEN_WIDTH/3, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
//    _flowersPatientsL.text = @"患者送花数";
//    _flowersPatientsL.textColor = ZHONGBLACKCOLOR;
//    _flowersPatientsL.textAlignment = NSTextAlignmentCenter;
//    _flowersPatientsL.font = SYSTEMFONT(14);
//
//    _consultL.frame = CGRectMake(SCREEN_WIDTH/3*2, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
//    _consultL.text = @"公益咨询数";
//    _consultL.textColor = ZHONGBLACKCOLOR;
//    _consultL.textAlignment = NSTextAlignmentCenter;
//    _consultL.font = SYSTEMFONT(14);
//
//
//    _waveImageview.frame = CGRectMake(0, self.height-80, SCREEN_WIDTH, 30);
//    _waveImageview.image = [UIImage imageNamed:@"wavepic"];
//
//
//        NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
//        NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
//        if ([isnews isEqualToString:@"1"]) {
//            //        出现
//            _flowersPatientsLNum.hidden = NO;
//            _flowersPatientsL.hidden = NO;
//        }else{
//            _flowersPatientsLNum.hidden = YES;
//            _flowersPatientsL.hidden = YES;
//
//        }
//}

- (void)setDataDic:(NSMutableDictionary *)dataDic{

    NSDictionary * dataDics = [DicRemove clearErrorDataZanwu:dataDic[@"data"]];//gzz0406


    CGFloat paview=  self.frame.size.width;

    _imageBj.image = [UIImage imageNamed:@"experts_bg"];
    _imageBj.frame = CGRectMake(0, 0, SCREEN_WIDTH, 150);

    NSString *strimingyi = [NSString stringWithFormat:@"%@",dataDics[@"isStar"]];

    _imagerMingyi.frame = CGRectMake(SCREEN_WIDTH-80, 10, 45, 45);

    if ([strimingyi isEqualToString:@"0"]) {
        _strimingyBtn.hidden = YES;

    }
    if ([strimingyi isEqualToString:@"1"]) {
        _imagerMingyi.image = [UIImage imageNamed:@"exportSign"];//exportSign ex_pert2

    }
    //gzz622
    _strimingyBtn.frame = CGRectMake(_imagerMingyi.x-10, _imagerMingyi.y-10, _imagerMingyi.width+20, _imagerMingyi.height+20);
    [_strimingyBtn addTarget:self action:@selector(consultDOcBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];


    NSString *imagehear = [NSString stringWithFormat:@"%@%@",ImageUrl,dataDics[@"photo"]];
    [_headimage setHeader:imagehear];
    _headimage.frame = CGRectMake(self.frame.size.width/2-34, 20, 68-3, 68-3);


    _viewww.frame = CGRectMake(0, CGRectGetMaxY(_headimage.frame)+5, SCREEN_WIDTH, 16);
    _labname.frame =  CGRectMake(15, 0, SCREEN_WIDTH-45, 16);//gzz0324
    _labname.font = SYSTEMFONT(15);

    _labname.textColor = [UIColor whiteColor];
    _labname.text = dataDics[@"realName"];
    _labname.textAlignment = NSTextAlignmentCenter;
    [_labname sizeToFit];
    _labname.frame=CGRectMake(SCREEN_WIDTH/2-_labname.width/2, 0,_labname.width, 16);



    NSString *strSEx = [NSString stringWithFormat:@"%@",dataDics[@"sex"]];
    _imagetare.frame = CGRectMake(CGRectGetMaxX(_labname.frame)+10, CGRectGetMaxY(_headimage.frame)+3, 15, 15);
    _imagetare.centerY = _labname.centerY;
    if ([strSEx isEqualToString:@"0"]) {
        _imagetare.image = [UIImage imageNamed:@"newman"];//gzz0412
    }
    if ([strSEx isEqualToString:@"1"]) {
        _imagetare.image = [UIImage imageNamed:@"newwoman"];//gzz0412
    }



    _labyiy.frame = CGRectMake(15, CGRectGetMaxY(_viewww.frame)+5,SCREEN_WIDTH-30,16);
    _labyiy.text = [NSString stringWithFormat:@"%@",dataDics[@"hospitalName"]];
    _labyiy.font = SYSTEMFONT(12);
    _labyiy.textAlignment=NSTextAlignmentCenter;
    _labyiy.textColor = [UIColor whiteColor];


    //职称
    _labpost.frame = CGRectMake(0, CGRectGetMaxY(_labyiy.frame)+5, paview/2-5, 14);
    _labpost.text = [NSString stringWithFormat:@"%@",dataDics[@"positionName"]];
    _labpost.font = SYSTEMFONT(12);
    _labpost.textColor = [UIColor whiteColor];
    _labpost.textAlignment = UITextLayoutDirectionRight;

    //科室名称
    _labzhuanchang.frame = CGRectMake(paview/2+10, CGRectGetMaxY(_labyiy.frame)+5, paview/2-20, 14);
    _labzhuanchang.text = [NSString stringWithFormat:@"%@",dataDics[@"officeName"]];
    _labzhuanchang.font = SYSTEMFONT(12);
    _labzhuanchang.textColor = [UIColor whiteColor];

   _bgView.frame = CGRectMake(0, CGRectGetMaxY(_imageBj.frame), SCREEN_WIDTH, 90+36-12);
    _bgView.userInteractionEnabled=YES;
    _bgView.backgroundColor=[UIColor whiteColor];


    _followPatientsLNum.frame = CGRectMake(0, 10, SCREEN_WIDTH/3, 16);
    _followPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"expertApplyNum"]];
    _followPatientsLNum.textColor = JISECOLOR;
    _followPatientsLNum.textAlignment = NSTextAlignmentCenter;
    _followPatientsLNum.font = [UIFont systemFontOfSize:15.0];


    _flowersPatientsLNum.frame = CGRectMake(SCREEN_WIDTH/3, 10, SCREEN_WIDTH/3, 16);
    _flowersPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"sendFlowerNum"]];// dataDic[@"sendFlowerNum"];;
    _flowersPatientsLNum.textColor = JISECOLOR;
    _flowersPatientsLNum.textAlignment = NSTextAlignmentCenter;
    _flowersPatientsLNum.font = [UIFont systemFontOfSize:15.0];



    _consultLNum.frame = CGRectMake(SCREEN_WIDTH/3*2, 10, SCREEN_WIDTH/3, 16);
    _consultLNum.text =   [NSString stringWithFormat:@"%@",dataDic[@"ConsultTotalNum"]];//dataDic[@"ConsultTotalNum"];;
    _consultLNum.textColor = JISECOLOR;
    _consultLNum.textAlignment = NSTextAlignmentCenter;
    _consultLNum.font = [UIFont systemFontOfSize:15.0];


    _followPatientsL.frame = CGRectMake(0, 36, SCREEN_WIDTH/3, 16);
    _followPatientsL.text = @"随访患者数";
    _followPatientsL.textColor = [UIColor blackColor];
    _followPatientsL.textAlignment = NSTextAlignmentCenter;
    _followPatientsL.font = SYSTEMFONT(13);


    _flowersPatientsL.frame = CGRectMake(SCREEN_WIDTH/3, 36, SCREEN_WIDTH/3, 16);
    _flowersPatientsL.text = @"患者送花数";
    _flowersPatientsL.textColor = [UIColor blackColor];
    _flowersPatientsL.textAlignment = NSTextAlignmentCenter;
    _flowersPatientsL.font = SYSTEMFONT(13);

    _consultL.frame = CGRectMake(SCREEN_WIDTH/3*2, 36, SCREEN_WIDTH/3, 16);
    _consultL.text = @"公益咨询数";
    _consultL.textColor = [UIColor blackColor];
    _consultL.textAlignment = NSTextAlignmentCenter;
    _consultL.font = SYSTEMFONT(13);

    _liness.frame = CGRectMake(10, CGRectGetMaxY(_consultL.frame)+12, SCREEN_WIDTH-20, 0.5);
    _liness.backgroundColor= RGB(188, 188, 188);
//    isFriend


    NSString *strtyp = [NSString stringWithFormat:@"%@",dataDic[@"isFriend"]];
    _adddbuton.frame = CGRectMake(20, CGRectGetMaxY(_liness.frame)+10, (SCREEN_WIDTH-40-18)/2, 28);


    [_adddbuton setBackgroundImage:[UIImage imageNamed:@"quxiaosufang"] forState:0];
    [_adddbuton setTitleColor:[UIColor whiteColor] forState:0];
    if ([strtyp isEqualToString:@"1"]) {
        [_adddbuton setTitle:@"解除随访专家" forState:0];
        [_adddbuton addTarget:self action:@selector(followBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
    }
    else{
        [_adddbuton setTitle:@"添加随访专家" forState:0];
        [_adddbuton addTarget:self action:@selector(followBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
    }
    _adddbuton.titleLabel.font = [UIFont systemFontOfSize:15];

    _flowerButton.frame = CGRectMake((SCREEN_WIDTH-40-18)/2+20+18, CGRectGetMaxY(_liness.frame)+10, (SCREEN_WIDTH-40-18)/2, 28);
    [_flowerButton setTitle:@"我要送花" forState:0];
    _flowerButton.centerY = _adddbuton.centerY;
    _flowerButton.titleLabel.font = [UIFont systemFontOfSize:15];
    [_flowerButton addTarget:self action:@selector(flowersBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
    [_flowerButton setBackgroundImage:[UIImage imageNamed:@"quxiaosufang"] forState:0];
    [_flowerButton setTitleColor:[UIColor whiteColor] forState:0];


    //gzz0309
    NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
    NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
    if ([isnews isEqualToString:@"1"]) {
        //        出现
        _flowerButton.hidden = NO;//gzz0104
        _flowersPatientsLNum.hidden = NO;
        _flowersPatientsL.hidden = NO;
    }else{
        _flowerButton.hidden = YES;//gzz0104
        _flowersPatientsLNum.hidden = YES;
        _flowersPatientsL.hidden = YES;

    }


}

#pragma mark 随访
- (void)followBtnBlockClikc:(UIButton *)btn{
    
    if (self.followBtnBlocks) {//根据title判断 是该解除还是添加
        self.followBtnBlocks(btn);
    }
}

#pragma mark 送花
- (void)flowersBtnBlockClikc:(UIButton *)btn{
    
    if (self.flowesBtnBlocks) {
        self.flowesBtnBlocks(btn);
    }
}

#pragma mark 咨询专家
- (void)consultDOcBtnBlockClikc:(UIButton *)btn{
    
    if (self.consultDocBtnBlocks) {
        self.consultDocBtnBlocks(btn);
    }
}
- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end




/
//  GanHospitalSectionHeaderView.m
//  Patient
//
//  Created by gao zhen on 2018/1/11.
//  Copyright © 2018年 ShangYu. All rights reserved.
//

#import "GanHospitalSectionHeaderView.h"
@interface GanHospitalSectionHeaderView(){
    
}
/*左侧图片*/
@property (nonatomic, strong) UIImageView *leftImageview;

/*type名字*/
@property (nonatomic, strong) UILabel *typeNameLab;

/*留言数目*/
@property (nonatomic, strong) UILabel *messageNumLab;

/*更多lable*/
@property (nonatomic, strong) UILabel *moreLab;

/*more图片 >*/
@property (nonatomic, strong) UIImageView  *moreImageview;

/*覆盖button 点击more*/
@property (nonatomic, strong) UIButton  *coverBtn;


/*横线细*/
@property (nonatomic, strong) UIView *thinoneLineview;


@end

@implementation GanHospitalSectionHeaderView


- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.backgroundColor = [UIColor whiteColor];
        [self setup];
    }
    return self;
}

-(void)setup{
    //初始化UI
    self.leftImageview = [[UIImageView alloc]init];
    [self addSubview:self.leftImageview];
    
   
    
    self.typeNameLab = [[UILabel alloc]init];
    self.typeNameLab.textAlignment = NSTextAlignmentLeft;
    self.typeNameLab.font = [UIFont systemFontOfSize:16.0];
    self.typeNameLab.textColor = JISECOLOR;
    [self addSubview:self.typeNameLab];
    
 
    
    self.messageNumLab = [[UILabel alloc]init];
    self.messageNumLab.textAlignment = NSTextAlignmentLeft;
    self.messageNumLab.font = [UIFont systemFontOfSize:16.0];
    self.messageNumLab.textColor = JISECOLOR;
    [self addSubview:self.messageNumLab];
    
 
 
    self.moreLab = [[UILabel alloc]init];
    self.moreLab.textAlignment = NSTextAlignmentRight;
    self.moreLab.font = [UIFont systemFontOfSize:12.0];
    [self addSubview:self.moreLab];
    
    
    self.moreImageview = [[UIImageView alloc]init];
    [self addSubview:self.moreImageview];
    
    
    
    self.coverBtn = [[UIButton alloc]init];
    [self addSubview:self.coverBtn];
    
 
    self.thinoneLineview = [[UIView alloc]init];
//    self.thinoneLineview.backgroundColor = [UIColor redColor];
    self.thinoneLineview.backgroundColor = bgLineColor;
    [self addSubview:self.thinoneLineview];
    
    
}


- (void)layoutSubviews {
    // 一定要调用super的方法
    [super layoutSubviews];
    // 确定子控件的frame（这里得到的self的frame/bounds才是准确的）
    //    CGFloat width = self.bounds.size.width; screenwidth不行的
    //    CGFloat height = self.bounds.size.height;
    //    self.imageView.frame = CGRectMake(0, 0, width, width);
    //    self.label.frame = CGRectMake(0, width, width, height - width);

    self.leftImageview.frame = CGRectMake(10, 10, 20, 20);
    self.leftImageview.backgroundColor = [UIColor clearColor];
    
    self.typeNameLab.frame = CGRectMake(CGRectGetMaxX(self.leftImageview.frame)+5, 0, 150, 40);
    self.typeNameLab.backgroundColor = [UIColor clearColor];
    self.typeNameLab.font = [UIFont systemFontOfSize:16.0];
    self.typeNameLab.textColor = JISECOLORDoc;
   
//    self.typeNameLab.text = @"肝胆医生";//先设置医生在设置message
    [self.typeNameLab sizeToFit];
    self.typeNameLab.centerY = self.leftImageview.centerY;
//    gzz20200330
    if ([_whichComes isEqualToString:@"docDetailNew"]) {
        self.typeNameLab.textColor = JISECOLOR;
//        self.leftImageview.hidden = YES;
//        self.typeNameLab.frame = CGRectMake(10, 0, self.typeNameLab.width, 40);
    }
    
    
    
    self.messageNumLab.frame = CGRectMake(CGRectGetMaxX(self.typeNameLab.frame), 0, 100, 40);
    self.messageNumLab.centerY = self.leftImageview.centerY;
                                          
    
    self.moreLab.frame =CGRectMake(self.width-70-25-5,1,70,40);//65
    _moreLab.textAlignment = NSTextAlignmentRight;
    _moreLab.backgroundColor = [UIColor clearColor];
    _moreLab.font = [UIFont systemFontOfSize:14];
    _moreLab.textColor = QIANBLACKCOLOR;
    [self addSubview:_moreLab];
    _moreLab.text = @"更多";
    //    gzz20200330
//    if ([_whichComes isEqualToString:@"docDetailNew"]) {
//        _moreLab.textColor = JISECOLOR; //arrowIcon
//    }
    
    self.moreImageview.frame =  CGRectMake(self.width-25,1,15,15);
    self.moreImageview.backgroundColor = [UIColor clearColor];
    self.moreImageview.image = [UIImage imageNamed:@"nextArrow"];
    if ([_whichComes isEqualToString:@"docDetailNew"]) {

//    self.moreImageview.frame = CGRectMake(SCREEN_WIDTH-25, 0, 8,12);
        //    gzz20200330
//    self.moreImageview.image = [UIImage imageNamed:@"arrowIcon"];
    }
    self.moreImageview.centerY = _moreLab.centerY;

 
    self.coverBtn.frame = CGRectMake(self.width-100, 0, 100, 40);
    self.coverBtn.backgroundColor = [UIColor clearColor];
    [self.coverBtn addTarget:self action:@selector(morebutton:) forControlEvents:UIControlEventTouchUpInside];
    
    
    
    if ([_whichComes isEqualToString:@"docDetailNew"]) {
        self.thinoneLineview.frame = CGRectMake(10, CGRectGetMaxY(self.coverBtn.frame)-0.5, SCREEN_WIDTH-20, 0.5);
        self.thinoneLineview.backgroundColor =  RGB(188, 188, 188);

    }else{
        self.thinoneLineview.frame = CGRectMake(0, CGRectGetMaxY(self.coverBtn.frame)-0.5, SCREEN_WIDTH, 0.5);
    }
    
}

- (void)setImageviewUrlstr:(NSString *)imageviewUrlstr{
    MClogFunc
//    imageviewUrlstr
    self.leftImageview.image = [UIImage imageNamed:imageviewUrlstr];
    self.leftImageview.backgroundColor = [UIColor clearColor];
    [self setNeedsDisplay];
    
}

- (void)setSectionTypeStr:(NSString *)sectionTypeStr{
    MClogFunc
    self.typeNameLab.text = sectionTypeStr;
    [self.typeNameLab sizeToFit];
    [self setNeedsDisplay];
}

- (void)setIsNumStr:(NSString *)isNumStr{
    if ([isNumStr isEqualToString:@"no"]) {
        _messageNumLab.hidden = YES;
       
    }else{
        _messageNumLab.hidden = NO;
        _messageNumLab.text = [NSString stringWithFormat:@"(%@)",isNumStr];

    }
    [self setNeedsDisplay];
}

- (void)setIsMoreStr:(NSString *)isMoreStr{
    if ([isMoreStr isEqualToString:@"yes"]) {
        _moreLab.hidden = NO;
        _moreImageview.hidden = NO;
        _coverBtn.hidden = NO;
    }else{
        _moreLab.hidden = YES;
        _moreImageview.hidden = YES;
        _coverBtn.hidden = YES;
    }
    [self setNeedsDisplay];
}

#pragma mark 更多点击事件
- (void)morebutton:(UIButton *)btn{
    
    if (self.moreBtnBlock) {
        self.moreBtnBlock(btn);
    }
}



@end




第一个section

//
//  DoIntroduceCell.m
//  Patient
//
//  Created by gao zhen on 2018/5/29.
//  Copyright © 2018年 ShangYu. All rights reserved.
//

#import "DoIntroduceCell.h"
//专家信息
@interface DoIntroduceCell()

/*上背景图片*/
@property(nonatomic,strong) UIImageView *imageBj;


/*是否有明星专家 图片*/
@property(nonatomic,strong) UIImageView *imagerMingyi;
/*是否有明星专家 button*/
@property (nonatomic, strong) UIButton *strimingyBtn;
/*专家头像 图片*/
@property(nonatomic,strong) UIImageView *headimage;


/*包裹姓名性别的view*/
@property(nonatomic,strong) UIView *viewww;
//labname 姓名lable
@property(nonatomic,strong) UILabel *labname;
//imagetare 性别图片
@property(nonatomic,strong) UIImageView *imagetare;


//labyiy 医院名称
@property(nonatomic,strong) UILabel *labyiy;

//三家 医院
@property(nonatomic,strong) UILabel *famousLabel;

//labpost 职称
@property(nonatomic,strong) UILabel *labpost;
//labzhuanchang 科室名称
@property(nonatomic,strong) UILabel *labzhuanchang;


//波浪线
@property(nonatomic,strong) UIImageView *waveImageview;

/*bgview*/
@property (nonatomic, strong) UIView *bgView;

//followPatientsLNum 随访患者数目
@property(nonatomic,strong) UILabel *followPatientsLNum;
//flowersPatientsLNum 患者送花数目
@property(nonatomic,strong) UILabel *flowersPatientsLNum;
//consultLNum 公益咨询数目
@property(nonatomic,strong) UILabel *consultLNum;


//followPatientsL 随访患者
@property(nonatomic,strong) UILabel *followPatientsL;
//flowersPatientsL患者送花
@property(nonatomic,strong) UILabel *flowersPatientsL;
//consultLNum 公益咨询
@property(nonatomic,strong) UILabel *consultL;



//liness 横线
@property(nonatomic,strong) UIView *liness;
//adddbuton 添加解除随访
@property (nonatomic, strong) UIButton *adddbuton;
/*flowerButton 我要送花*/
@property (nonatomic, strong) UIButton *flowerButton;





@end


@implementation DoIntroduceCell

+(instancetype)cellWithTableView:(UITableView *)tableView {
    
    static NSString *identifiers = @"docIntromessageCell";
    DoIntroduceCell *cell = [tableView dequeueReusableCellWithIdentifier:identifiers];
    if (cell == nil) {
        
        cell = [[DoIntroduceCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifiers];
    }
    return cell;
}


-(id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{
    
    self=[super initWithStyle:style reuseIdentifier:reuseIdentifier];
    
    if (self) {
        
        UIImageView *monthIme = [UIImageView new];
        [self.contentView addSubview:monthIme];
        _imageBj = monthIme;
        
    
        UIImageView *photoImg = [UIImageView new];
        [self.contentView addSubview:photoImg];
        _imagerMingyi = photoImg;
        
        UIButton *btnCover = [UIButton new];
        [self.contentView addSubview:btnCover];
        _strimingyBtn = btnCover;
        
//        headimage
        UIImageView *headimages = [UIImageView new];
        [self.contentView addSubview:headimages];
        _headimage = headimages;
        
        
//       UIView * viewwws = [UIView new];
//        [self.contentView addSubview:viewwws];
//        _viewww = viewwws;
        
//        labname
        UILabel *labename = [UILabel new];
        [self.contentView  addSubview:labename];
        _labname = labename;
//        imagetare
        UIImageView *imagetares = [UIImageView new];
        [self.contentView  addSubview:imagetares];
        _imagetare = imagetares;
        

        
//     labpost
        UILabel *labposts = [UILabel new];
        [self.contentView addSubview:labposts];
        _labpost = labposts;
//        labzhuanchang
        UILabel *labzhuanchangs = [UILabel new];
        [self.contentView addSubview:labzhuanchangs];
        _labzhuanchang = labzhuanchangs;
        
        
        
        //       labyiy/
        UILabel *labyiys = [UILabel new];
        [self.contentView addSubview:labyiys];
        _labyiy = labyiys;
        
//        famousLabel
        UILabel *famous = [UILabel new];
        [self.contentView addSubview:famous];
       _famousLabel = famous;
        
        
        UIView*bgviews = [UIView new];
        [self.contentView addSubview:bgviews];
        _bgView = bgviews;
        
//        followPatientsLNum
        UILabel *followPatientsLNums = [UILabel new];
        [_bgView addSubview:followPatientsLNums];
        _followPatientsLNum = followPatientsLNums;
//        flowersPatientsLNum
        UILabel *flowersPatientsLNums = [UILabel new];
        [_bgView  addSubview:flowersPatientsLNums];
        _flowersPatientsLNum= flowersPatientsLNums;
        
        UILabel *consultnums = [UILabel new];
        [_bgView addSubview:consultnums];
        _consultLNum = consultnums;
        
        UILabel *followPatientsLs = [UILabel new];
        [_bgView addSubview:followPatientsLs];
        _followPatientsL = followPatientsLs;
        
        
        UILabel *flowersPatientsLs = [UILabel new];
        [_bgView addSubview:flowersPatientsLs];
        _flowersPatientsL = flowersPatientsLs;
        
        
        UILabel *consults = [UILabel new];
        [_bgView  addSubview:consults];
        _consultL = consults;
        
        
//        waveImageview
        UIImageView *wave = [UIImageView new];
              [self.contentView  addSubview:wave];
              _waveImageview = wave;
        
//        liness
//        UIView * linesss = [UIView new];
//        [_bgView addSubview:linesss];
//        _liness = linesss;
        
//        adddbuton
//        UIButton *adddbutons = [UIButton new];
//        [_bgView addSubview:adddbutons];
//        _adddbuton = adddbutons;
//
//        UIButton *flowerButtons = [UIButton new];
//        [_bgView addSubview:flowerButtons];
//        _flowerButton = flowerButtons;
    }
    
    return self;
}

- (void)setDataDic:(NSMutableDictionary *)dataDic{
    
    NSDictionary * dataDics = [DicRemove clearErrorDataZanwu:dataDic[@"data"]];//gzz0406

    
//    CGFloat paview=  self.frame.size.width;

    _imageBj.image = [UIImage imageNamed:@"signInBgInfoMy"];
    _imageBj.frame = CGRectMake(0, 0, SCREEN_WIDTH, 180+35);
    
    
    
//    NSString *strimingyi = [NSString stringWithFormat:@"%@",dataDics[@"isStar"]];
//    _imagerMingyi.frame = CGRectMake(SCREEN_WIDTH-80, 10, 45, 45);
//
//    if ([strimingyi isEqualToString:@"0"]) {
//        _strimingyBtn.hidden = YES;
//
//    }
//    if ([strimingyi isEqualToString:@"1"]) {
//        _imagerMingyi.image = [UIImage imageNamed:@"exportSign"];//exportSign ex_pert2
//    }
//    //gzz622
//    _strimingyBtn.frame = CGRectMake(_imagerMingyi.x-10, _imagerMingyi.y-10, _imagerMingyi.width+20, _imagerMingyi.height+20);
//    [_strimingyBtn addTarget:self action:@selector(consultDOcBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
//

    NSString *imagehear = [NSString stringWithFormat:@"%@%@",ImageUrl,dataDics[@"photo"]];
    _headimage.frame = CGRectMake(10, 10, 50, 50);
    [_headimage sd_setImageWithURL:[NSURL URLWithString:imagehear] placeholderImage:[UIImage imageNamed:@"patientMoren"]];
    _headimage.layer.cornerRadius = 8.0;
    _headimage.layer.masksToBounds = YES;
    
    
//    _viewww.frame = CGRectMake(CGRectGetMaxX(_headimage.frame)+5, 12, SCREEN_WIDTH-70, 16);
    
    _labname.frame =  CGRectMake(CGRectGetMaxX(_headimage.frame)+5,12, SCREEN_WIDTH-45, 16);//gzz0324
    _labname.font = SYSTEMFONT(16);
    _labname.textColor = [UIColor whiteColor];
    _labname.text = dataDics[@"realName"];
    _labname.textAlignment = NSTextAlignmentLeft;
    [_labname sizeToFit];
    

    
    NSString *strSEx = [NSString stringWithFormat:@"%@",dataDics[@"sex"]];
    _imagetare.frame = CGRectMake(CGRectGetMaxX(_labname.frame)+5, CGRectGetMaxY(_labname.frame)+3, 15, 15);
    _imagetare.centerY = _labname.centerY;
    if ([strSEx isEqualToString:@"0"]) {
        _imagetare.image = [UIImage imageNamed:@"newman"];//gzz0412
    }
    if ([strSEx isEqualToString:@"1"]) {
        _imagetare.image = [UIImage imageNamed:@"newwoman"];//gzz0412
    }
    
    
    //职称
       _labpost.frame = CGRectMake(CGRectGetMaxX(_headimage.frame)+5, CGRectGetMaxY(_labname.frame)+11, 100, 14);
       _labpost.text = [NSString stringWithFormat:@"%@ | ",dataDics[@"positionName"]];
       _labpost.font = SYSTEMFONT(14);
       _labpost.textColor = [UIColor whiteColor];
       _labpost.textAlignment = NSTextAlignmentLeft;
       [_labpost sizeToFit];
       
       //科室名称
       _labzhuanchang.frame = CGRectMake(CGRectGetMaxX(_labpost.frame), 5,SCREEN_WIDTH-CGRectGetMaxX(_labpost.frame), 14);
       _labzhuanchang.text = [NSString stringWithFormat:@"%@",dataDics[@"officeName"]];
       _labzhuanchang.font = SYSTEMFONT(14);
       _labzhuanchang.textColor = [UIColor whiteColor];
       _labzhuanchang.centerY = _labpost.centerY;
    
    
//    医院名字
    _labyiy.frame = CGRectMake(10, CGRectGetMaxY(_headimage.frame)+15,SCREEN_WIDTH-20,16);
    _labyiy.text = [NSString stringWithFormat:@"%@",dataDics[@"hospitalName"]];
    _labyiy.font = SYSTEMFONT(14);
    _labyiy.textAlignment=NSTextAlignmentLeft;
    _labyiy.textColor = [UIColor whiteColor];
    [_labyiy sizeToFit];
    
//    三甲医院
    _famousLabel.frame = CGRectMake(CGRectGetMaxX(_labyiy.frame)+5, CGRectGetMaxY(_headimage.frame)+5,SCREEN_WIDTH-20,16);
     _famousLabel.text = [NSString stringWithFormat:@"%@",@"三甲"];
     _famousLabel.font = SYSTEMFONT(12);
     _famousLabel.textAlignment=NSTextAlignmentCenter;
    _famousLabel.backgroundColor = [UIColor whiteColor];
     _famousLabel.textColor = JISECOLOR;
    [_famousLabel sizeToFit];
    _famousLabel.layer.cornerRadius = 10;
    _famousLabel.layer.masksToBounds =YES;
    _famousLabel.width = _famousLabel.width+16;
    _famousLabel.height = _famousLabel.height+4;
    _famousLabel.centerY = _labyiy.centerY;
    
    if (10+_labyiy.width+5+_famousLabel.width+5>SCREEN_WIDTH) {
        _labyiy.width = SCREEN_WIDTH-10-5-5-_famousLabel.width;
    }

    for (int i = 0; i<3; i++) {
        UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10+i*80, CGRectGetMaxY(_labyiy.frame)+10, 70, 20) text:@"咨询专家" titleColor:[UIColor whiteColor] textAlignment:NSTextAlignmentCenter font:[UIFont systemFontOfSize:12.0]];
        [self.contentView addSubview:label];
        label.layer.cornerRadius = 5;
        label.layer.masksToBounds = YES;
        label.layer.borderColor = WHITECOLORS.CGColor;
        label.layer.borderWidth = 1.0;
                
    }

    _bgView.frame = CGRectMake(0, self.height-50, SCREEN_WIDTH, 50);
    _bgView.backgroundColor = [UIColor whiteColor];

    _followPatientsLNum.frame = CGRectMake(0, 0, SCREEN_WIDTH/3, 16);
    _followPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"expertApplyNum"]];
    _followPatientsLNum.textColor = JISECOLOR;
    _followPatientsLNum.textAlignment = NSTextAlignmentCenter;
    _followPatientsLNum.font = [UIFont systemFontOfSize:15.0];
    
    
    _flowersPatientsLNum.frame = CGRectMake(SCREEN_WIDTH/3,0, SCREEN_WIDTH/3, 16);
    _flowersPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"sendFlowerNum"]];
    _flowersPatientsLNum.textColor = JISECOLOR;
    _flowersPatientsLNum.textAlignment = NSTextAlignmentCenter;
    _flowersPatientsLNum.font = [UIFont systemFontOfSize:15.0];
    
    
    
    _consultLNum.frame = CGRectMake(SCREEN_WIDTH/3*2,0, SCREEN_WIDTH/3, 16);
    _consultLNum.text =   [NSString stringWithFormat:@"%@",dataDic[@"ConsultTotalNum"]];//dataDic[@"ConsultTotalNum"];;
    _consultLNum.textColor = JISECOLOR;
    _consultLNum.textAlignment = NSTextAlignmentCenter;
    _consultLNum.font = [UIFont systemFontOfSize:15.0];
    
    
    _followPatientsL.frame = CGRectMake(0, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
    _followPatientsL.text = @"随访患者数";
    _followPatientsL.textColor = ZHONGBLACKCOLOR;
    _followPatientsL.textAlignment = NSTextAlignmentCenter;
    _followPatientsL.font = SYSTEMFONT(14);
    
    
    _flowersPatientsL.frame = CGRectMake(SCREEN_WIDTH/3, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
    _flowersPatientsL.text = @"患者送花数";
    _flowersPatientsL.textColor = ZHONGBLACKCOLOR;
    _flowersPatientsL.textAlignment = NSTextAlignmentCenter;
    _flowersPatientsL.font = SYSTEMFONT(14);
    
    _consultL.frame = CGRectMake(SCREEN_WIDTH/3*2, CGRectGetMaxY(_followPatientsLNum.frame)+10, SCREEN_WIDTH/3, 16);
    _consultL.text = @"公益咨询数";
    _consultL.textColor = ZHONGBLACKCOLOR;
    _consultL.textAlignment = NSTextAlignmentCenter;
    _consultL.font = SYSTEMFONT(14);
    
    
    _waveImageview.frame = CGRectMake(0, self.height-80, SCREEN_WIDTH, 30);
    _waveImageview.image = [UIImage imageNamed:@"wavepic"];
    
    
        NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
        NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
        if ([isnews isEqualToString:@"1"]) {
            //        出现
            _flowersPatientsLNum.hidden = NO;
            _flowersPatientsL.hidden = NO;
        }else{
            _flowersPatientsLNum.hidden = YES;
            _flowersPatientsL.hidden = YES;
    
        }
}

//- (void)setDataDic:(NSMutableDictionary *)dataDic{
//
//    NSDictionary * dataDics = [DicRemove clearErrorDataZanwu:dataDic[@"data"]];//gzz0406
//
//
//    CGFloat paview=  self.frame.size.width;
//
//    _imageBj.image = [UIImage imageNamed:@"experts_bg"];
//    _imageBj.frame = CGRectMake(0, 0, SCREEN_WIDTH, 150);
//
//    NSString *strimingyi = [NSString stringWithFormat:@"%@",dataDics[@"isStar"]];
//
//    _imagerMingyi.frame = CGRectMake(SCREEN_WIDTH-80, 10, 45, 45);
//
//    if ([strimingyi isEqualToString:@"0"]) {
//        _strimingyBtn.hidden = YES;
//
//    }
//    if ([strimingyi isEqualToString:@"1"]) {
//        _imagerMingyi.image = [UIImage imageNamed:@"exportSign"];//exportSign ex_pert2
//
//    }
//    //gzz622
//    _strimingyBtn.frame = CGRectMake(_imagerMingyi.x-10, _imagerMingyi.y-10, _imagerMingyi.width+20, _imagerMingyi.height+20);
//    [_strimingyBtn addTarget:self action:@selector(consultDOcBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
//
//
//    NSString *imagehear = [NSString stringWithFormat:@"%@%@",ImageUrl,dataDics[@"photo"]];
//    [_headimage setHeader:imagehear];
//    _headimage.frame = CGRectMake(self.frame.size.width/2-34, 20, 68-3, 68-3);
//
//
//    _viewww.frame = CGRectMake(0, CGRectGetMaxY(_headimage.frame)+5, SCREEN_WIDTH, 16);
//    _labname.frame =  CGRectMake(15, 0, SCREEN_WIDTH-45, 16);//gzz0324
//    _labname.font = SYSTEMFONT(15);
//
//    _labname.textColor = [UIColor whiteColor];
//    _labname.text = dataDics[@"realName"];
//    _labname.textAlignment = NSTextAlignmentCenter;
//    [_labname sizeToFit];
//    _labname.frame=CGRectMake(SCREEN_WIDTH/2-_labname.width/2, 0,_labname.width, 16);
//
//
//
//    NSString *strSEx = [NSString stringWithFormat:@"%@",dataDics[@"sex"]];
//    _imagetare.frame = CGRectMake(CGRectGetMaxX(_labname.frame)+10, CGRectGetMaxY(_headimage.frame)+3, 15, 15);
//    _imagetare.centerY = _labname.centerY;
//    if ([strSEx isEqualToString:@"0"]) {
//        _imagetare.image = [UIImage imageNamed:@"newman"];//gzz0412
//    }
//    if ([strSEx isEqualToString:@"1"]) {
//        _imagetare.image = [UIImage imageNamed:@"newwoman"];//gzz0412
//    }
//
//
//
//    _labyiy.frame = CGRectMake(15, CGRectGetMaxY(_viewww.frame)+5,SCREEN_WIDTH-30,16);
//    _labyiy.text = [NSString stringWithFormat:@"%@",dataDics[@"hospitalName"]];
//    _labyiy.font = SYSTEMFONT(12);
//    _labyiy.textAlignment=NSTextAlignmentCenter;
//    _labyiy.textColor = [UIColor whiteColor];
//
//
//    //职称
//    _labpost.frame = CGRectMake(0, CGRectGetMaxY(_labyiy.frame)+5, paview/2-5, 14);
//    _labpost.text = [NSString stringWithFormat:@"%@",dataDics[@"positionName"]];
//    _labpost.font = SYSTEMFONT(12);
//    _labpost.textColor = [UIColor whiteColor];
//    _labpost.textAlignment = UITextLayoutDirectionRight;
//
//    //科室名称
//    _labzhuanchang.frame = CGRectMake(paview/2+10, CGRectGetMaxY(_labyiy.frame)+5, paview/2-20, 14);
//    _labzhuanchang.text = [NSString stringWithFormat:@"%@",dataDics[@"officeName"]];
//    _labzhuanchang.font = SYSTEMFONT(12);
//    _labzhuanchang.textColor = [UIColor whiteColor];
//
//   _bgView.frame = CGRectMake(0, CGRectGetMaxY(_imageBj.frame), SCREEN_WIDTH, 90+36-12);
//    _bgView.userInteractionEnabled=YES;
//    _bgView.backgroundColor=[UIColor whiteColor];
//
//
//    _followPatientsLNum.frame = CGRectMake(0, 10, SCREEN_WIDTH/3, 16);
//    _followPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"expertApplyNum"]];
//    _followPatientsLNum.textColor = JISECOLOR;
//    _followPatientsLNum.textAlignment = NSTextAlignmentCenter;
//    _followPatientsLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//    _flowersPatientsLNum.frame = CGRectMake(SCREEN_WIDTH/3, 10, SCREEN_WIDTH/3, 16);
//    _flowersPatientsLNum.text = [NSString stringWithFormat:@"%@",dataDic[@"sendFlowerNum"]];// dataDic[@"sendFlowerNum"];;
//    _flowersPatientsLNum.textColor = JISECOLOR;
//    _flowersPatientsLNum.textAlignment = NSTextAlignmentCenter;
//    _flowersPatientsLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//
//    _consultLNum.frame = CGRectMake(SCREEN_WIDTH/3*2, 10, SCREEN_WIDTH/3, 16);
//    _consultLNum.text =   [NSString stringWithFormat:@"%@",dataDic[@"ConsultTotalNum"]];//dataDic[@"ConsultTotalNum"];;
//    _consultLNum.textColor = JISECOLOR;
//    _consultLNum.textAlignment = NSTextAlignmentCenter;
//    _consultLNum.font = [UIFont systemFontOfSize:15.0];
//
//
//    _followPatientsL.frame = CGRectMake(0, 36, SCREEN_WIDTH/3, 16);
//    _followPatientsL.text = @"随访患者数";
//    _followPatientsL.textColor = [UIColor blackColor];
//    _followPatientsL.textAlignment = NSTextAlignmentCenter;
//    _followPatientsL.font = SYSTEMFONT(13);
//
//
//    _flowersPatientsL.frame = CGRectMake(SCREEN_WIDTH/3, 36, SCREEN_WIDTH/3, 16);
//    _flowersPatientsL.text = @"患者送花数";
//    _flowersPatientsL.textColor = [UIColor blackColor];
//    _flowersPatientsL.textAlignment = NSTextAlignmentCenter;
//    _flowersPatientsL.font = SYSTEMFONT(13);
//
//    _consultL.frame = CGRectMake(SCREEN_WIDTH/3*2, 36, SCREEN_WIDTH/3, 16);
//    _consultL.text = @"公益咨询数";
//    _consultL.textColor = [UIColor blackColor];
//    _consultL.textAlignment = NSTextAlignmentCenter;
//    _consultL.font = SYSTEMFONT(13);
//
//    _liness.frame = CGRectMake(10, CGRectGetMaxY(_consultL.frame)+12, SCREEN_WIDTH-20, 0.5);
//    _liness.backgroundColor= RGB(188, 188, 188);
////    isFriend
//
//
//    NSString *strtyp = [NSString stringWithFormat:@"%@",dataDic[@"isFriend"]];
//    _adddbuton.frame = CGRectMake(20, CGRectGetMaxY(_liness.frame)+10, (SCREEN_WIDTH-40-18)/2, 28);
//
//
//    [_adddbuton setBackgroundImage:[UIImage imageNamed:@"quxiaosufang"] forState:0];
//    [_adddbuton setTitleColor:[UIColor whiteColor] forState:0];
//    if ([strtyp isEqualToString:@"1"]) {
//        [_adddbuton setTitle:@"解除随访专家" forState:0];
//        [_adddbuton addTarget:self action:@selector(followBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
//    }
//    else{
//        [_adddbuton setTitle:@"添加随访专家" forState:0];
//        [_adddbuton addTarget:self action:@selector(followBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
//    }
//    _adddbuton.titleLabel.font = [UIFont systemFontOfSize:15];
//
//    _flowerButton.frame = CGRectMake((SCREEN_WIDTH-40-18)/2+20+18, CGRectGetMaxY(_liness.frame)+10, (SCREEN_WIDTH-40-18)/2, 28);
//    [_flowerButton setTitle:@"我要送花" forState:0];
//    _flowerButton.centerY = _adddbuton.centerY;
//    _flowerButton.titleLabel.font = [UIFont systemFontOfSize:15];
//    [_flowerButton addTarget:self action:@selector(flowersBtnBlockClikc:) forControlEvents:UIControlEventTouchUpInside];
//    [_flowerButton setBackgroundImage:[UIImage imageNamed:@"quxiaosufang"] forState:0];
//    [_flowerButton setTitleColor:[UIColor whiteColor] forState:0];
//
//
//    //gzz0309
//    NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
//    NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
//    if ([isnews isEqualToString:@"1"]) {
//        //        出现
//        _flowerButton.hidden = NO;//gzz0104
//        _flowersPatientsLNum.hidden = NO;
//        _flowersPatientsL.hidden = NO;
//    }else{
//        _flowerButton.hidden = YES;//gzz0104
//        _flowersPatientsLNum.hidden = YES;
//        _flowersPatientsL.hidden = YES;
//
//    }
//
//
//}

#pragma mark 随访
- (void)followBtnBlockClikc:(UIButton *)btn{
    
    if (self.followBtnBlocks) {//根据title判断 是该解除还是添加
        self.followBtnBlocks(btn);
    }
}

#pragma mark 送花
- (void)flowersBtnBlockClikc:(UIButton *)btn{
    
    if (self.flowesBtnBlocks) {
        self.flowesBtnBlocks(btn);
    }
//    if (self.block) {
//      测试  self.block(2);
//    }
}

#pragma mark 咨询专家
- (void)consultDOcBtnBlockClikc:(UIButton *)btn{
    
    if (self.consultDocBtnBlocks) {
        self.consultDocBtnBlocks(btn);
    }
}
- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end



2020-03-31 专家详情


#import "DocDetailNewVC.h"
#import "FollowUpController.h"//gzz0920  添加随访
#import "SendFlowersAndHeartVC.h"//gzz170306
//#import "DigNewViewController.h"
#import "ExportDesController.h" //gzz0920 名医标识

#import "GanHospitalSectionHeaderView.h"//section的head 医生动态 医生视频
//#import "DignewInfoheaderView.h"//出诊信息的head

#import "MyDocHeaderView.h" //出诊信息的head
#import "GanMoreDynamicVC.h"//更多动态 更多视频

#import "DoIntroduceCell.h"//专家信息介绍
#import "DocResumeCell.h" // 专家简历


#import "GanHosVideoSectionCell.h"//医生动态 医生视频
#import "AboutGandanController.h"//动态详情的跳转展示页面
//#import "VideoDetailController.h"//

#import "VideoDetailNewVC.h"
#import "OutDepOneTypeCell.h" //出诊信息 1  2  3 种类型
#import "OutDepTwoTypeCell.h" //出诊信息 第四种不用跳转

#import "OutDepDetailVC.h"// 门诊详情

#import "DocNoticeCell.h" // 专家通知

#import "PatientEvaluationCell.h" // 患者评价

#import "DocEvaluationVC.h"//列表 评价

@interface DocDetailNewVC ()<UIAlertViewDelegate,UITableViewDelegate,UITableViewDataSource>{
    
    CGSize SIZEcell;
    CGSize SIZEcell2; //专家简介
    CGSize Sizecell3;//医生通知
    NSString *Strn;
    UITableView *MYtableviewd;
    NSString *strartNum;
    NSString *sendFlowerNumStr;
    NSMutableArray *SEverMutarray;
    NSMutableArray *SEverMutarray1;
    UIImageView *imagershuju;
    UILabel *tiwuxianLab;
    NSMutableArray *doccuuidarr;
    NSIndexPath *indes111;
    UIScrollView *scroll;

    NSString *gandan_expert_uuid;
    NSString  * sysTimestr;//系统时间戳gzz181225
    
    NSString *isHaveStopOutpatient;//是否设置停诊信息 0 1 红字
    
    NSString *isHaveOutpatient;//是否设置门诊信息 0 1 是否跳转

    NSString *outpatientStr; //出诊信息内容
    
    NSString *docName;//专家的名字
    
    
    NSString *docNoticeContents;//gzz20190507医生通知
    
    
    NSString *commentCountstr;//患者评价 数目
    
    UIButton *addOroutDocbtn;//添加或者解除随访

    
}
//专家服务类型
@property(nonatomic,copy) NSString *DoterSter;

/*gzz171201 咨询数目*/
@property (nonatomic, copy) NSString *consultAmountStr;

@property (nonatomic,strong) NSMutableDictionary *dicDetail;//data

@property (nonatomic,strong) NSMutableDictionary *dicDetailAll;//全部数据

@property (nonatomic, strong)UITableView *tableView;

@property (nonatomic, strong)NSMutableArray *dataArray;


/*肝胆动态据源*/
@property (nonatomic, strong) NSMutableArray *docDetaildyMarr;

//gzz180521
/*肝胆视频数据源*/
@property (nonatomic, strong) NSMutableArray *docDetailVideoMarr;


/*患者评价*/
@property (nonatomic, strong) NSMutableArray *commetListMarry;



@end
@implementation DocDetailNewVC


//懒加载
- (NSMutableArray *)commetListMarry{
    if (!_commetListMarry) {
        _commetListMarry = [NSMutableArray array];
    }
    return _commetListMarry;
}



//gzz180521 肝胆视频

- (NSMutableArray *)docDetaildyMarr{
    if (!_docDetaildyMarr) {
        _docDetaildyMarr = [NSMutableArray array];
    }
    return _docDetaildyMarr;
}
///gandyMarr 动态 gzz180529
- (NSMutableArray *)docDetailVideoMarr{
    if (!_docDetailVideoMarr) {
        _docDetailVideoMarr = [NSMutableArray array];
    }
    return _docDetailVideoMarr;
}


//懒加载TableView
- (UITableView *)tableView{
    if (!_tableView) {
    
        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-45);
        _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStyleGrouped];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.tableFooterView = [UIView new];
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.showsHorizontalScrollIndicator = NO;
        [self.view addSubview:_tableView];
        
//        _tableView.backgroundView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"jianbian5"]];
        _tableView.backgroundColor = RGB(242, 243, 244);
        //去掉分割线
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        
    }
    return _tableView;
}


-(NSMutableArray *)dataArray{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}
-(NSMutableDictionary *)dicDetail{
    if (!_dicDetail) {
        _dicDetail = [NSMutableDictionary dictionary];
    }
    return _dicDetail;
}
//dicDetailAll
-(NSMutableDictionary *)dicDetailAll{
    if (!_dicDetailAll) {
        _dicDetailAll = [NSMutableDictionary dictionary];
    }
    return _dicDetailAll;
}



-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
  
    
    //gzz170405 这里送花的数目是会改变的 所以返回来时 要重新请求数据
}
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"专家详情";
    
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"gdback3"] originalImage] style:UIBarButtonItemStylePlain target:self action:@selector(backClick)];
    
    self.navigationItem.leftBarButtonItem=backItem;
    self.navigationController.interactivePopGestureRecognizer.delegate = nil;
    
    commentCountstr = @"";
    sysTimestr = @""; //gzz181225
    isHaveStopOutpatient = @"";
    outpatientStr = @"";
    isHaveOutpatient = @"";
    [self tableView];
 WEAKSELFS
    UIButton *btn = [UIButton createBtnFrame:CGRectMake(0, SCREEN_HEIGHT-SafeAreaBottomHeight-45, SCREEN_WIDTH, 45 )title:@"在线交流" bgImageName:nil titleColor:[UIColor whiteColor] cornerRadius:0.0 maskTobound:NO action:^(UIButton *button) {
//        [w];
    }];
    btn.backgroundColor = JISECOLOR;
    btn.titleLabel.font = [UIFont systemFontOfSize:18.0];
    [self.view addSubview:btn];
  
    UIButton *flowerBtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-77 ,kTopHeight+30, 77 , 40)] ;
     [self.view addSubview:flowerBtn];
     [flowerBtn setBackgroundImage:[UIImage imageNamed:@"answerSort"] forState:0];
     [flowerBtn addTarget:self action:@selector(flwerSong) forControlEvents:UIControlEventTouchUpInside];

    addOroutDocbtn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-77 ,kTopHeight+30+70, 77 , 40)] ;
    [self.view addSubview:addOroutDocbtn];
    [addOroutDocbtn setBackgroundImage:[UIImage imageNamed:@"answerSort"] forState:0];
    //  [orderBtn addTarget:self action:@selector(orderBtnClick) forControlEvents:UIControlEventTouchUpInside];

        
     NSUserDefaults *isNewVersion = [NSUserDefaults standardUserDefaults];
        NSString *isnews = [NSString stringWithFormat:@"%@",[isNewVersion objectForKey:@"isNewVersions"]];
        if ([isnews isEqualToString:@"1"]) {
            //        出现
            flowerBtn.hidden = NO;
        }else{
           flowerBtn.hidden = YES;
    
        }
                                                        
                                                        
//    //gzz171212 这两句解决了mjrefresh问题
    if (@available(iOS 11.0, *)) {
    
//        self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
        self.tableView.estimatedRowHeight = 0;//解决了页面跳到的问题
        
    }else{
        //5 上看不全 系统 手机？？？？
//        self.tableView.frame = CGRectMake(0, 64, SCREEN_WIDTH, SCREEN_HEIGHT-64);
    }

    [self getSystemTimeFromServerThree];

}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 0) {
        
//        return 260+4;
        return 180+35;

        
    }
    else if (indexPath.section == 1) {
    
        if (_dicDetail.count>0) {
            CGFloat inss = SIZEcell.height/14.0;
            if (inss>8) {
//            
                return  14*8+10+17+10+5+10+5+2; //gzz20190110

            }else{
//                return SIZEcell.height+10+17+5+10+10;
                return SIZEcell.height+10+17+5+10+10+5+2;

            }
            
        }else{
            return 0.01;

        }
     
        
    }
    else if (indexPath.section == 2) {
        if (outpatientStr.length>0) {

            CGFloat inss = SIZEcell2.height/14.0;
            if (inss>8) {
                return  14*8+10+10;
            }else{
                return SIZEcell2.height+10+10;
            }
   
        }else{
            return 0.01;
        }

    }
    else if (indexPath.section == 3) {
        if (docNoticeContents.length>0) {
//            MCLog(@"docNoticeContents in ");
            CGFloat inss = Sizecell3.height/14.0;
            if (inss>8) {
                
                return  14*8+10+17+10+5+10+5+2;
                
            }else{
                return Sizecell3.height+10+17+5+10+10+5+2;
                
            }
            
        }else{
            return 0.01;
        }
        
    }
    else if (indexPath.section == 4) {
      
        if (self.docDetaildyMarr.count>0) {
            return 88;
        }else{
            return 0.01;
        }
    }else if (indexPath.section == 5) {
        if (self.docDetailVideoMarr.count>0) {
            return 88;
        }else{
            return 0.01;
        }
    }else if(indexPath.section == 6){
        
        if (self.commetListMarry.count>0) {
            NSString *str = [NSString stringWithFormat:@"%@",[self.commetListMarry[indexPath.row] objectForKey:@"content"]];
            CGSize ssize = [DicRemove twochecTheStringWithHight:str font:12.0 floatwidth:(SCREEN_WIDTH-40)];
            
            return ssize.height+60+33;
        }else{
            return 0.01;
        }
        

    }
  return 44.0;


}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{

    return 7;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{

    if (section == 4) {
      return   self.docDetaildyMarr.count;
    }
    if (section == 5) {
    return   self.docDetailVideoMarr.count;
    }
    if (section == 6) {
        return   self.commetListMarry.count;
    }
  
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString *identifier = @"docDetailCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }

//    专家头像患者等一下描述
    if (indexPath.section == 0) {
//       signInBgInfoMy
        
        DoIntroduceCell *cell = [DoIntroduceCell cellWithTableView:tableView ];
        cell.backgroundColor = [UIColor whiteColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;//选中时不变色
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        dic[@"key"] = @"value";
        cell.indepaths = indexPath;
        if (self.dicDetail.count>0) {
    
            cell.dataDic = _dicDetailAll;
           NSString *strtyp = [NSString stringWithFormat:@"%@",_dicDetailAll[@"isFriend"]];
            if ([strtyp isEqualToString:@"1"]) {
//                解除随访
                MCLog(@"解除随访");
            }else{
//                添加随访
                MCLog(@"添加随访");

            }

            WEAKSELFS
            cell.flowesBtnBlocks = ^(UIButton *btn) {
                [weakSelf flwerSong];
            };
            cell.followBtnBlocks  = ^(UIButton *btn) {
                NSString *btnstr = [btn currentTitle];
                if ([btnstr isEqualToString:@"解除随访专家"]) {
                    [weakSelf CancelFloowup];
                }else{
                    [weakSelf addFloowup];

                }

            };
            cell.consultDocBtnBlocks = ^(UIButton *btn) {
                 [weakSelf zixunExportDetail];
            };
        
        }
        
        return cell;
    }
//    专家简历
    else if (indexPath.section == 1) {
        
        DocResumeCell *cell = [DocResumeCell cellWithTableView:tableView ];
        cell.backgroundColor = [UIColor whiteColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;//选中时不变色
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        dic[@"key"] = @"value";
        cell.indepaths = indexPath;
        if (self.dicDetail.count>0) {
            NSString *introstr = [NSString stringWithFormat:@"%@",_dicDetail[@"intro"]];

            if (introstr.length>0 && ![introstr isEqualToString:@"(null)"]) {
                 cell.dataDic = _dicDetail;
            }
        }
       
        return cell;
    }
//门诊信息
   else if (indexPath.section == 2) {
       
        OutDepOneTypeCell *cell = [OutDepOneTypeCell cellWithTableView:tableView];
        cell.backgroundColor = [UIColor whiteColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;//选中时不变色
       if (outpatientStr.length>0) {
         cell.dataStrshow = outpatientStr;
       }

      return cell;
    }
////专家通知
   else if (indexPath.section == 3) {
       
       
       DocNoticeCell *celling = [DocNoticeCell cellWithTableView:tableView];
       celling.backgroundColor = [UIColor whiteColor];
//       celling.backgroundColor = [UIColor purpleColor];
       celling.selectionStyle = UITableViewCellSelectionStyleNone;//选中时不变色
       if (docNoticeContents.length>0) {
         celling.dataStr = docNoticeContents;
       }
       
       return celling;
   }
    ////专家动态

   else if(indexPath.section == 4){
       
       GanHosVideoSectionCell *cell = [GanHosVideoSectionCell cellWithTableView:tableView];
       cell.backgroundColor = [UIColor whiteColor];
//       cell.backgroundColor = [UIColor yellowColor];

       cell.selectionStyle = UITableViewCellSelectionStyleNone;
       if (self.docDetaildyMarr.count>0) {
           cell.newsOrKepu = @"dynamic";
           cell.isDocDetail = @"yes";
           cell.countNum = self.docDetaildyMarr.count;
           cell.indepaths = indexPath;
            cell.dataDic = [self.docDetaildyMarr objectAtIndex:indexPath.row];
       }
       return cell;
       
       ////专家视频

      }else if (indexPath.section == 5){
          GanHosVideoSectionCell *cell = [GanHosVideoSectionCell cellWithTableView:tableView];
          
          cell.backgroundColor = [UIColor whiteColor];
//          cell.backgroundColor = [UIColor redColor];
          cell.selectionStyle = UITableViewCellSelectionStyleNone;
      
          if (self.docDetailVideoMarr.count>0) {
              cell.newsOrKepu = @"video";
              cell.isDocDetail = @"yes";
              cell.countNum = self.docDetailVideoMarr.count;
              cell.indepaths = indexPath;
              cell.dataDic = [self.docDetailVideoMarr objectAtIndex:indexPath.row];
//              MCLog(@"indexPath.section4444===%zd",indexPath.row);

          }
          return cell;
      }
//    患者评价
      else if(indexPath.section == 6){
          
         
          PatientEvaluationCell *cell = [PatientEvaluationCell cellWithTableView:tableView];
          cell.backgroundColor = [UIColor whiteColor];
          cell.selectionStyle = UITableViewCellSelectionStyleNone;//选中时不变色
          if (self.commetListMarry.count>0) {
              cell.dicData = self.commetListMarry[indexPath.row];

          }
          
  
          return cell;
          
      }
    return cell;
}

#pragma mark 全国咨询专家详解
-(void)zixunExportDetail{
    
    ExportDesController *Export = [ExportDesController new];
    Export.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:Export animated:YES];
    
}

#pragma mark 添加花
- (void)flwerSong
{
    SendFlowersAndHeartVC *send=[[SendFlowersAndHeartVC alloc]init];
    send.docNamee= _dicDetail[@"realName"];
    send.FlowerExeruuid = _strDocuuid;
    send.docPhoto = _dicDetail[@"photo"];
    WEAKSELFS
    send.flowerBackToDocBtnBlocks = ^(NSString *str) {
        if ([str isEqualToString:@"yes"]) {
//            [weakSelf DocdetlieRequest];
             [weakSelf getSystemTimeFromServerThree];
        }
    };
    [self.navigationController pushViewController:send animated:YES];
}


//添加随访医生
- (void)addFloowup
{
    UIAlertView  *allert=[[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"确定添加随访医生？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    allert.tag = 1002;
    [allert show];
    
}
#pragma mark  随访医生
- (void)CancelFloowup
{
    
    UIAlertView  *allert=[[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"您确定解除随访专家?" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    allert.tag = 1001;
    [allert show];
    
}

#pragma mark uialertView delegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    
    if (alertView.tag==1001) {
        if (buttonIndex==0) {
            MCLog(@"000000");
        }
        if (buttonIndex==1) {//接口
            [self cancleRequest];
          
        }
        
        
    }else if (alertView.tag==1002) {
        if (buttonIndex==1) {
            FollowUpController *follup = [[FollowUpController alloc]init];
            follup.FollwupExeruuid =_strDocuuid;
            [self.navigationController pushViewController:follup animated:YES];
            
        }
    }else{
        
        
        [self.navigationController popToRootViewControllerAnimated:YES];//gzz0613 调到主页面 即首页面gzz1130
        //        [self.navigationController popViewControllerAnimated:YES]; // 以后可能是这个
    }
    
    
}






-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 2 || indexPath.section == 3 ) {

    }
    
    if (indexPath.section == 4) {
        if (_docDetaildyMarr.count>0) {
            AboutGandanController * vc = [[AboutGandanController alloc]init];
            vc.fromWhat = @"mianyi";//展示详情
            NSString *editTypeStr = [NSString stringWithFormat:@"%@",[self.docDetaildyMarr  objectAtIndex:indexPath.row][@"editType"]];
    
            if ([editTypeStr isEqualToString:@"2"]) {
                vc.htmlPath = [NSString stringWithFormat:@"%@",[self.docDetaildyMarr  objectAtIndex:indexPath.row][@"path"]];
            }else{
                vc.htmlPath = [NSString stringWithFormat:@"%@%@",ImageUrl,[self.docDetaildyMarr  objectAtIndex:indexPath.row][@"path"]];
            }
            
             vc.title = @"动态详情";
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            
        }
    }
    if (indexPath.section == 5) {
        if (_docDetailVideoMarr.count>0) {
            [self readRequestVideoType:indexPath.row];

        }
    }
    
//    患者评价
    if (indexPath.section == 6) {
    
    }
    
}


- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{

    
    if (section == 2){
        if (outpatientStr.length>0) {
            return 40;
        }else{
            return 0.01;
        }
    }
    
//    if (section == 3){
//        if (docNoticeContents.length>0) {
//          return 40;
//        }else{
//            return 0.01;
//        }
//    }
    
    if (section == 4){
        if (self.docDetaildyMarr.count>0) {
             return 40;
        }else{
             return 0.01;
        }
       
    }
    if (section == 5){
        if (self.docDetailVideoMarr.count>0) {
            return 40;
        }else{
            return 0.01;
        }
    }
    
    if (section == 6){
        if (self.commetListMarry.count>0) {
            return 40;
        }else{
            return 0.01;
        }
    }
    
    return 0.01;
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if (section == 2) {
        MyDocHeaderView *headerview = [[MyDocHeaderView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
        NSInteger isShow  = [isHaveStopOutpatient integerValue];
        if (isShow > 0) {
             headerview.sectionTypeStr = @"门诊信息(有停诊信息)";
        }else {
            headerview.sectionTypeStr = @"门诊信息";
        }
        
        //yz115
        NSInteger isShowtwo  = [isHaveOutpatient integerValue];
        if (isShowtwo > 0) {
            headerview.IsMoreStr = @"yes";
            WEAKSELFS
            headerview.moreBtnBlock = ^(UIButton *btn) {
                [weakSelf morebuttonClick];
            };
        }else{
            headerview.IsMoreStr = @"no";

        }
        return headerview;
    }else if (section == 4) {
        if (self.docDetaildyMarr.count>0) {
            GanHospitalSectionHeaderView *headerview = [[GanHospitalSectionHeaderView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
            headerview.whichComes = @"docDetailNew";
            headerview.sectionTypeStr = @"医生动态";
            headerview.isMoreStr = @"yes";
            headerview.isNumStr = @"no";
            headerview.imageviewUrlstr = @"ganDocHosnn";
            WEAKSELFS
            headerview.moreBtnBlock = ^(UIButton *btn) {
                [weakSelf hospitalmoreBtnClick:btn];
            };
            
            return headerview;
        }else{
            return nil;
        }
        
    }else if(section == 5){
        
          if (self.docDetailVideoMarr.count>0) {
        GanHospitalSectionHeaderView *headerview = [[GanHospitalSectionHeaderView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
        headerview.whichComes = @"docDetailNew";
        headerview.sectionTypeStr = @"医生视频";
        headerview.isMoreStr = @"yes";
        headerview.isNumStr = @"no";
        headerview.imageviewUrlstr = @"hosShipinnn";
        
        WEAKSELFS
        headerview.moreBtnBlock = ^(UIButton *btn) {
            [weakSelf videoMoreBtnClick:btn];
        };
        headerview.backgroundColor = [UIColor whiteColor];
        return headerview;
          }else{
              return nil;
          }
    }else if(section == 6){
        
        if (self.commetListMarry.count>0) {
            GanHospitalSectionHeaderView *headerview = [[GanHospitalSectionHeaderView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
            headerview.whichComes = @"docDetailNew";
            
            headerview.sectionTypeStr = @"患者评价";
            headerview.isMoreStr = @"yes";
            headerview.isNumStr = [NSString stringWithFormat:@"%@",commentCountstr];
            headerview.imageviewUrlstr = @"messagePatientHosnn";
            
            WEAKSELFS
            headerview.moreBtnBlock = ^(UIButton *btn) {
                [weakSelf patientsBtnClick:btn];
            };
            headerview.backgroundColor = [UIColor whiteColor];
            return headerview;
        }else{
            return nil;
        }
        
    }
    
    UIView *view = [UIView new];
    return view;
    
    
}

#pragma mark 医生动态 更多
- (void)hospitalmoreBtnClick:(UIButton *)btn{
    MCLog(@"医生动态");
//    if (_docDetaildyMarr.count>0) {
        GanMoreDynamicVC *moreDoc = [GanMoreDynamicVC new];
        moreDoc.uuidStr = gandan_expert_uuid;
        moreDoc.whichList = @"dynamic";
        moreDoc.title = @"医生动态";
        moreDoc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:moreDoc animated:YES];
    
}


#pragma mark morebuttonClick 门诊信息详情
-(void)morebuttonClick{
        NSInteger isShow  = [isHaveOutpatient integerValue];
        if (isShow > 0) {//MoreBtnBlock
//        if ([isHaveOutpatient isEqualToString:@"1"]) {
            OutDepDetailVC *digInfo = [OutDepDetailVC new];
            digInfo.hidesBottomBarWhenPushed = YES;
            digInfo.expertUUID = _strDocuuid;
            digInfo.expertName = docName;
            [self.navigationController pushViewController:digInfo animated:YES];
        }
}
#pragma mark 医生视频
- (void)videoMoreBtnClick:(UIButton *)btn{
    MCLog(@"医生医生视频");

//    if (_docDetailVideoMarr.count>0) {
        GanMoreDynamicVC *moreDoc = [GanMoreDynamicVC new];
        moreDoc.uuidStr = gandan_expert_uuid;
        moreDoc.whichList = @"video";
        moreDoc.title = @"医生视频";
        moreDoc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:moreDoc animated:YES];
//    }

}


#pragma mark patientsBtnClick 患者评价
-(void)patientsBtnClick:(UIButton *)btn{
    MCLog(@"患者评价");
    DocEvaluationVC *vc= [DocEvaluationVC new];
    vc.expert_uuidStr = self.strDocuuid;
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{

     if (section == 2){
          if (outpatientStr.length>0) {
             return 10;
         }else{
             return 0.01;
         }
     }
    
    if (section == 3){
        if (docNoticeContents.length>0) {
            return 10;
        }else{
            return 0.01;
        }
    }
    
//    if (docNoticeContents.length>0) {
    if (section == 4){
        if (self.docDetaildyMarr.count>0) {
            return 10;
        }else{
            return 0.01;
        }
    }
    
    if (section == 5){
        if (self.docDetailVideoMarr.count>0) {
            return 10;
        }else{
            return 0.01;
        }
    }
    
    if (section == 6) {
        if (self.commetListMarry.count>0) {
            return 10;
        }else{
            return 0.01;
        }
    }
    return 10;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    UIView *footview = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 10)];
    footview.backgroundColor = [UIColor clearColor];
    return footview;
}




#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServerThree{
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",Public_URLPic];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        
        [weakSelf DocdetlieRequest];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf DocdetlieRequest];
        MCLog(@"dddddddddd");
        
    }];
    
}


#pragma mark  接口请求 gzz180628 清除上一批接口
-(void)DocdetlieRequest{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *str = [NSString stringWithFormat:@"%@expertDetailNew",Public_URL];

    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
    
    dicM[@"patientUuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];;
    dicM[@"expertUuid"] = self.strDocuuid;
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"patientUuid",@"expertUuid"];
    WEAKSELFS
    [GDNetworkManager postWithURLString:str parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        NSDictionary *Arrim=[NSDictionary dictionary];
        NSString *str;
        NSString *stracode =[NSString stringWithFormat:@"%@",data[@"code"]];
        if ([stracode isEqualToString:@"1"]) {
//            gzz
            Arrim = [DicRemove clearErrorDataZanwu:data];
            
            [self.docDetaildyMarr addObjectsFromArray:Arrim[@"DongTaiResTop2"]];
            [self.docDetailVideoMarr addObjectsFromArray:Arrim[@"VideoResTop2"]];
            [self.commetListMarry addObjectsFromArray:Arrim[@"comment_list"][@"list"]];
            
            gandan_expert_uuid = Arrim[@"gandan_expert_uuid"];
            commentCountstr = Arrim[@"comment_list"][@"total"];
            str = [NSString stringWithFormat:@"%@",Arrim[@"data"]];
            self.dicDetailAll = data;
            
            MCLog(@"self.dicDetailAll==%@",self.dicDetailAll);
            _consultAmountStr = [NSString stringWithFormat:@"%@",data[@"ConsultTotalNum"]];
            docName = [[self.dicDetailAll objectForKey:@"data"] objectForKey:@"realName"];
            isHaveStopOutpatient = [NSString stringWithFormat:@"%@",Arrim[@"isHaveStopOutpatient"]];
            outpatientStr = [NSString stringWithFormat:@"%@",Arrim[@"outpatientStr"]];
            
            SIZEcell2 = [DicRemove checTheStringWithHight:outpatientStr font:14.0 float:10];
            
            isHaveOutpatient = [NSString stringWithFormat:@"%@",Arrim[@"isHaveOutpatient"]];
        }else{
            
            UIAlertView *alviec = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:data[@"message"] delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alviec show];
            
        }
        if ([str isEqualToString:@"暂无"] ||[str isEqualToString:@""]) {
            [self createShowMessage:@"暂无数据"];
            
        }
        else{
            [self removeShowMessage];
            
            strartNum = data[@"expertApplyNum"];
            sendFlowerNumStr = data[@"sendFlowerNum"];//gzz170331
            self.dicDetail =[DicRemove clearErrorDataZanwu:data[@"data"]];//gzz0406
            _DoterSter = data[@"isFriend"];
            
            Strn = [NSString stringWithFormat:@"%@",_dicDetail[@"intro"]];
            SIZEcell = [DicRemove checTheStringWithHight:Strn font:14.0 float:10];
            
           
        }
        [weakSelf mailanNoticeGetRequest];
//        [self.tableView reloadData];gzz20190507
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        UIAlertView *laver = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"服务器错误" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [laver show];
    }];
}

#pragma mark 医生通知 
-(void)mailanNoticeGetRequest{
//    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *str = [NSString stringWithFormat:@"%@mailanNoticeGet",Public_URLAPI];
    
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
    
    dicM[@"expert_uuid"] = self.strDocuuid;
    dicM[@"debug"] = @"true";
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"expert_uuid",@"debug"];
    
    [GDNetworkManager postWithURLString:str parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *data) {
        MCLog(@"data====%@",data);
       
        NSString *code = [NSString stringWithFormat:@"%@",data[@"code"]];
 
        if ([code isEqualToString:@"200"]) {
            if ( [DicRemove isBlankString:data[@"notice"]] || [data[@"notice"] isEqualToString:@"暂无通知"]  )  {
              docNoticeContents = @"";
            }else{
              docNoticeContents = [NSString stringWithFormat:@"%@",data[@"notice"]];
              Sizecell3 = [DicRemove checTheStringWithHight:docNoticeContents font:14.0 float:10];
//        ssssssssssssssssssssssss
            }
        }else{
            
            docNoticeContents = @"";
        }
         [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
      
    }];
}




#pragma mark 解除随访
- (void)cancleRequest{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    Dlpontlerexple *dlop = [Dlpontlerexple shareIndence];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    
    NSString *str = [NSString stringWithFormat:@"%@cancelRes",Public_URL];
    NSMutableDictionary *dicet = [NSMutableDictionary dictionary];
    dicet[@"patientUuid"]= dlop.uuidstring;
    dicet[@"expertUuid"]= _dicDetail[@"uuid"];
    
    [manager POST: str  parameters:dicet progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        NSString *cond = [NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([cond isEqualToString:@"1"]) {
            
            
            //gzz0303  解除随访关系时 去掉该医生
            NSUserDefaults *expertInfo=[NSUserDefaults standardUserDefaults];
            [expertInfo synchronize];
            
            if ([[expertInfo objectForKey:@"expertInfo"] isKindOfClass:[NSArray class]]) {
                NSMutableArray *arrY=  [NSMutableArray  arrayWithArray:[expertInfo objectForKey:@"expertInfo"]];;
                for (int i=0; i<arrY.count; i++) {
                    NSString *strnnn=[NSString stringWithFormat:@"%@",[arrY objectAtIndex:i]];
                    if ([strnnn isEqualToString:_dicDetail[@"uuid"] ]) {
                        [arrY removeObjectAtIndex:i];
                        
                    }
                }
                
                [expertInfo setObject:arrY forKey:@"expertInfo"];//2 set
                MCLog(@"gzz0303 解除后 专家个数%zd",arrY.count);
                
                
            }
            
            //gzz0303 解除随访之后去掉小红点
            [[NSNotificationCenter defaultCenter] postNotificationName:@"CancelExpertDot" object:nil];
            
            
            //gzz0310  FLLOWDOCEXRERT  到上面来了
            NSString *measeguuid = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];
            NSString *sessiondid = [NSString stringWithFormat:@"8a48b5514fba2f87014fca72dec021e4#%@",_dicDetail[@"uuid"]];
            NSUserDefaults  *defaults = [NSUserDefaults standardUserDefaults];
            
            doccuuidarr =[[NSMutableArray alloc]initWithArray:[defaults objectForKey:@"FLLOWDOCEXPERT"]];//2
            
            for (int i=0; i<doccuuidarr.count; i++) {
                NSString *messageforms = [NSString stringWithFormat:@"%@",[[doccuuidarr objectAtIndex:i] objectForKey:@"messageuuid"]];
                NSString *gxmessageforms = [NSString stringWithFormat:@"%@",[[doccuuidarr objectAtIndex:i] objectForKey:@"messagefroms"]];
                
                if ([messageforms isEqualToString:measeguuid]&&[gxmessageforms isEqualToString:sessiondid]) {
                    [doccuuidarr removeObjectAtIndex:i];
                    
                }
            }
            [defaults setValue:doccuuidarr forKey:@"FLLOWDOCEXPERT"];
            
            
            [[NSNotificationCenter defaultCenter ]postNotificationName:@"EXPERTDOCTOR" object:nil];
            
            
            
            
            UIAlertView *viewcal = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"取消成功" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [viewcal show];
            
            
            
            
            
        }
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        MCLog(@"----%@----010",dic);
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        UIAlertView *viewcal = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"系统错误" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [viewcal show];
    }];
}

#pragma mark 点击 阅读量加一的接口
-(void)readRequestVideoType:(NSInteger)itemIndex {
    
    
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    NSString *Strurl = [NSString stringWithFormat:@"%@read",Public_URL];
    Dlpontlerexple  *dlp =[Dlpontlerexple shareIndence];
    NSMutableDictionary *dicer = [NSMutableDictionary dictionary];
    dicer[@"type"] =[NSString stringWithFormat:@"%d",4];
    dicer[@"user_uuid"] = [NSString stringWithFormat:@"%@",dlp.uuidstring] ;
    dicer[@"news_article_uuid"] = [NSString stringWithFormat:@"%@",[[self.docDetailVideoMarr objectAtIndex:itemIndex]  objectForKey:@"uuid"]];
    
    
    [manager POST: Strurl  parameters:dicer progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        NSString *codee=[NSString stringWithFormat:@"%@",dic[@"code"]];
        if ([codee isEqualToString:@"1"]) {
            
            
            
            NSString *Collection = [NSString stringWithFormat:@"%@",dic[@"isCollection"]];
            
            VideoDetailNewVC *videoDetail = [VideoDetailNewVC new];
            __block NSMutableDictionary *dicM = [self.docDetailVideoMarr objectAtIndex:itemIndex];
            
            videoDetail.videoPath = [dicM objectForKey:@"path"];
            videoDetail.videoCommentUuid = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"uuid"]];
            videoDetail.titleName = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"name"]];
            videoDetail.imagePath = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"imgpath"]];
            
            //            00528
            videoDetail.contentStr = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"content"]];
            
            videoDetail.public_name = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"public_name"]];
            videoDetail.readnum = [NSString stringWithFormat:@"%@",[dicM objectForKey:@"readnum"]];
            
            videoDetail.videoDescribeStr = [NSString stringWithFormat:@"%@",dic[@"note"]];
            videoDetail.isCollection = Collection;
            
            videoDetail.typesVideo = @"type";
            //            __weak __typeof(self) weakSelf = self; //gzz1130
            
            videoDetail.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:videoDetail animated:YES];
        }else{
            
            [self showHint:[NSString stringWithFormat:@"%@",dic[@"message"]]];
            
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}





-(void)backClick{//gzz1130!
    
    NSString *String = [NSString stringWithFormat:@"%@",_stringnum];
    if ([String isEqualToString:@"2"]) {
        [self.navigationController popToViewController:[self.navigationController.viewControllers objectAtIndex:1] animated:YES];
    }
    
    else{
        [self.navigationController  popViewControllerAnimated:YES];
        
    }
}

- (void)dealloc{
    
    //移除指定的通知，不然会造成内存泄露 //gzz0921notice
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"CancelExpertDot" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"EXPERTDOCTOR" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    
}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

















请选择患病时长
请选择目前肝脏状态
是否用药
	

takeCallVoice
ECChatMoreViewTool



EC_KNOTIFICATION_Voip_OnCallVoipInfocallNumber













    
    dicM[@"disease_date"] = [NSString stringWithFormat:@"%@",self.disease_dateLongStr];

    dicM[@"liver_status"] = [NSString stringWithFormat:@"%@",self.liver_statusStr];

    dicM[@"boolean_medication"] = [NSString stringWithFormat:@"%@",self.boolean_medicationStr];


    if ([DicRemove isBlankString:self.descrViewa.text]) {
        self.descrViewa.text = @"";
    }
    dicM[@"medication_info"] = [NSString stringWithFormat:@"%@",self.descrViewa.text];
    dicM[@"other_disease"] = [NSString stringWithFormat:@"%@",self.other_diseaseStr];






























boolean_medication = 没有;
	family_uuid = 19a7389d2b8447fb803cc9d05d726b46;
	code = 200;
	medication_info = ;
	disease_info = (
	{
	disease_years = -1;
	disease_uuid = b317eb27e0b04d69a43ee64db095825a;
	disease_info = 4型;
	disease_name = 丙型肝炎;
}
,
	{
	disease_years = 20;
	disease_uuid = 5462cead97514546aa7676e812200ebf;
	disease_info = ;
	disease_name = 乙型肝炎;
}
,
	{
	disease_years = -1;
	disease_uuid = e90b42775c544fe1b5a8c41b35394213;
	disease_info = ;
	disease_name = 酒精肝病;
}
,
);
	other_disease = 无其他慢性病;
	go_hospital = 0;
	allergy_info = 过敏了，。。;
	message = 查询成功;
	is_allergy = 1;
	liver_status = 肝癌;



 








dicM[@"family_uuid"] = [NSString stringWithFormat:@"%@",self.family_uuidstr];
    dicM[@"disease_info"] = [NSString stringWithFormat:@"%@",diseaseInfo_str];
    NSString *go_hostr = [NSString stringWithFormat:@"%@",self.contentArr[0]];
    if ([go_hostr isEqualToString:@"有"]) {
        go_hostr = @"1";
    }else{
        go_hostr = @"0";
    }
    dicM[@"go_hospital"] = [NSString stringWithFormat:@"%@",go_hostr];
    
    dicM[@"liver_status"] = [NSString stringWithFormat:@"%@",self.contentArr[1]];
    dicM[@"boolean_medication"] = [NSString stringWithFormat:@"%@",self.contentArr[2]];
    if ([DicRemove isBlankString:self.descrViewaMed.text]) {
        self.descrViewaMed.text = @"";
    }
    dicM[@"medication_info"] = [NSString stringWithFormat:@"%@",self.descrViewaMed.text];
    
    dicM[@"other_disease"] = [NSString stringWithFormat:@"%@",self.other_diseaseStr];
    
    dicM[@"is_allergy"] = [NSString stringWithFormat:@"%@",self.allergyYesOrNo];
    
    if ([DicRemove isBlankString:self.descrViewaAllergy.text]) {
           self.descrViewaAllergy.text = @"";
       }
    dicM[@"allergy_info"] = [NSString stringWithFormat:@"%@",self.descrViewaAllergy.text];
    
    



	boolean_medication = 有;



	family_uuid = fcc59e51194240e88a4c1c968046e879;
	code = 200;
	medication_info = 刚哈黑里咯就看咯;
	disease_info = (
	{
	disease_years = 4;
	disease_uuid = 0aedf091f48c49a985ae93b01c4436aa;
	disease_info = ;
	disease_name = 甲型肝炎;
}
,
);
	other_disease = 糖尿病,冠心病,胃炎或者肠炎;

	go_hospital = 1;

	allergy_info = 没过敏;
	message = 查询成功;
	is_allergy = 1;
	liver_status = 无明显肝纤维化;







2020-03-05




#import "DiseasesInfoNewvcVC.h"

#import "NewPersonDatacell.h"
#import "DiseaseNewShowCell.h"

#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"

#import "GccPickerManager.h"
#import "FSTextView.h"
#import "DiseaseSelectVC.h"

@interface DiseasesInfoNewvcVC ()<UITableViewDelegate,UITableViewDataSource,TTGTextTagCollectionViewDelegate,UITextViewDelegate>{
     NSString *sysTimestr;
      UIButton *contactsBtn;//底部按钮
    BOOL isMedicine;//是否服药 默认no
    BOOL isAllergy;//是否过敏 默认no
    
    NSInteger diseaseNum;//有几组 + - 组多三组
    NSString *diseaseInfo_str ;//需要拼接，
}

@property (nonatomic, strong) UITableView *addAndsubTablview;//加减的tableview
@property (nonatomic, strong)NSMutableArray *addAndsubArray;
@property (nonatomic, strong) NSMutableArray *addAndsubContentArr;


@property (nonatomic, strong) NSMutableArray *diseaseListMarry;
//年龄
@property (nonatomic, strong) NSMutableArray *agesDataArr;
//丙肝类型
@property (nonatomic, strong) NSMutableArray *bingDiseaseArr;


@property (nonatomic, strong)UITableView *tableView;

@property (nonatomic, strong)NSMutableArray *dataArray;
@property (nonatomic, strong) NSMutableArray *contentArr;

@property (nonatomic, strong)TTGTextTagCollectionView *textTagCollectionView1;
@property (nonatomic, strong)NSMutableArray *tagMarry;


@property (nonatomic, strong)FSTextView *descrViewaMed;//服药之后的出现文本框
@property (nonatomic, strong)FSTextView *descrViewaAllergy;//过敏时之后的出现文本框



///*肝脏状态 无明显肝纤维化、肝纤维化、肝硬化、肝硬化及并发症、肝癌、未知
//*/
//@property (nonatomic, copy) NSString *liver_statusStr;
///*当前是否有正在服用的肝病用药*/
//@property (nonatomic, copy) NSString *boolean_medicationStr;
/*是否合并其他慢性疾病 多个慢性病使用 “,” 分割   */
@property (nonatomic, copy) NSString *other_diseaseStr;

/*是否过敏 is_allergy 是否有过敏史  0否 1是 ; -1默认
 */
@property (nonatomic, copy) NSString *allergyYesOrNo;


/*需要拼接，如（丙型肝炎的uuid，5,1b型-丙型肝炎的uuid，2,2b型-甲型肝炎uuid,4,），疾病之间用逗号分隔，不同疾病用短横线-分隔,不是丙型肝炎的最后也要拼接一个空字符串*/
@property (nonatomic, strong)NSMutableArray *disease_infoArrM;


@end
@implementation DiseasesInfoNewvcVC

//懒加载
- (NSMutableArray *)disease_infoArrM{
    if (!_disease_infoArrM) {
        _disease_infoArrM = [NSMutableArray array];
    }
    return _disease_infoArrM;
}


-(FSTextView *)descrViewaMed{
    if (!_descrViewaMed) {
        _descrViewaMed = [FSTextView textView];
        _descrViewaMed.delegate = self;
        _descrViewaMed.backgroundColor = RGB(238, 238, 238);
        _descrViewaMed.placeholder = @"请输入服药(最少需要描述5个字)";
        _descrViewaMed.placeholderColor = [UIColor grayColor];
        _descrViewaMed.placeholderFont = SYSTEMFONT(13);
        _descrViewaMed.font = SYSTEMFONT(13);
        _descrViewaMed.cornerRadius = 4;
    }
    return _descrViewaMed;
}

-(FSTextView *)descrViewaAllergy{
    if (!_descrViewaAllergy) {
        _descrViewaAllergy = [FSTextView textView];
        _descrViewaAllergy.delegate = self;
        _descrViewaAllergy.backgroundColor = RGB(238, 238, 238);
        _descrViewaAllergy.placeholder = @"请输入对什么过敏(最少需要描述2个字)";
        _descrViewaAllergy.placeholderColor = [UIColor grayColor];
        _descrViewaAllergy.placeholderFont = SYSTEMFONT(13);
        _descrViewaAllergy.font = SYSTEMFONT(13);
        _descrViewaAllergy.cornerRadius = 4;
    }
    return _descrViewaAllergy;
}

//懒加载
- (TTGTextTagCollectionView *)textTagCollectionView1{
    if (!_textTagCollectionView1) {
          _textTagCollectionView1 = [[TTGTextTagCollectionView alloc]  initWithFrame:CGRectMake(15,14,SCREEN_WIDTH-20, 150)];
                 _textTagCollectionView1.isDisOrderstr = @"yes";
                 _textTagCollectionView1.delegate = self;
                 _textTagCollectionView1.showsVerticalScrollIndicator = NO;
                 TTGTextTagConfig *config = _textTagCollectionView1.defaultConfig;
                 config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
                 //文本的颜色
                 config.tagTextColor = QIANBLACKCOLOR;
                 //选中的样色
                 config.tagSelectedTextColor = JISECOLOR;
                 config.tagBackgroundColor = [UIColor clearColor];
                 config.tagSelectedBackgroundColor = [UIColor clearColor];
                 _textTagCollectionView1.selectionLimit = 0;
                 _textTagCollectionView1.horizontalSpacing = 12.0;
                 _textTagCollectionView1.verticalSpacing = 12.0;
                 config.tagBorderColor = QIANBLACKCOLOR;
                 config.tagSelectedBorderColor = JISECOLOR;
                 config.tagBorderWidth = 1;
                 config.tagSelectedBorderWidth = 1;
                 config.tagShadowColor = [UIColor whiteColor];
                 config.tagShadowOffset = CGSizeMake(0, 0);
                 config.tagShadowOpacity = 0.0f;
                 config.tagShadowRadius = 0.0f;
                 config.tagCornerRadius = 10.0;
                 config.tagSelectedCornerRadius = 10.0;
                 config.tagExtraSpace = CGSizeMake(20,6);
                 
                 [_textTagCollectionView1 addTags:@[@"无其他慢性病", @"高血压",@"糖尿病", @"冠心病", @"HIV感染",@"结核", @"高血脂",@"胃炎或者肠炎", @"慢性肾功能不全或者肾脏疾病"]];
                 _textTagCollectionView1.alignment = 0;
                 NSInteger nums = _textTagCollectionView1.tagCollectionView.cMaxTagsCount;
             MCLog(@"有几行==vc=中==%zd",_textTagCollectionView1.tagCollectionView.cMaxTagsCount);
                 _textTagCollectionView1.height = nums*(20+12);
    }
    return _textTagCollectionView1;
}
- (NSMutableArray *)tagMarry{
    if (!_tagMarry) {
        _tagMarry = [NSMutableArray array];
    }
    return _tagMarry;
}
//addAndsubTablview
- (UITableView *)addAndsubTablview{
    if (!_addAndsubTablview) {
        CGRect tableRect = CGRectMake(0,0, SCREEN_WIDTH, 44);
        _addAndsubTablview = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _addAndsubTablview.delegate = self;
        _addAndsubTablview.dataSource = self;
        _addAndsubTablview.showsVerticalScrollIndicator = NO;
        _addAndsubTablview.tableFooterView = [UIView new];
        _addAndsubTablview.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _addAndsubTablview;
}
//懒加载TableView 55*BiliWidth
- (UITableView *)tableView{
    if (!_tableView) {
//        555.546875
//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-55*BiliWidth-20-50-300);

//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, 555.546875-10);
        CGFloat yy;
//        if (kISiPhoneX) {
            yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-SafeAreaBottomHeight;
//        }else{
//               yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight;
//        }
        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, yy);
           _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-kTopHeight-40);
//        _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSelectionStyleNone;
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.tableFooterView = [UIView new];
        [self.view addSubview:_tableView];
    }
    return _tableView;
}
//懒加载
- (NSMutableArray *)contentArr{
    if (!_contentArr) {
        _contentArr = [NSMutableArray array];
    }
    return _contentArr;
}


-(NSMutableArray *)dataArray{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}



- (NSMutableArray *)addAndsubArray{
    if (!_addAndsubArray) {
        _addAndsubArray = [NSMutableArray array];
    }
    return _addAndsubArray;
}


-(NSMutableArray *)addAndsubContentArr{
    if (!_addAndsubContentArr) {
        _addAndsubContentArr = [NSMutableArray array];
    }
    return _addAndsubContentArr;
}

- (NSMutableArray *)bingDiseaseArr{
    if (!_bingDiseaseArr) {
        _bingDiseaseArr = [NSMutableArray array];
    }
    return _bingDiseaseArr;
}


- (NSMutableArray *)agesDataArr{
    if (!_agesDataArr) {
        _agesDataArr = [NSMutableArray array];
    }
    return _agesDataArr;
}

-(NSMutableArray *)diseaseListMarry{
    if (!_diseaseListMarry) {
        _diseaseListMarry = [NSMutableArray array];
    }
    return _diseaseListMarry;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"疾病信息";
    [self dataInit];
    self.tableView.backgroundColor = [UIColor whiteColor];
    

    self.tableView.tableHeaderView = self.addAndsubTablview;
//    SCREEN_HEIGHT
    UIView *footview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 50) bgColor:[UIColor clearColor]];
    self.tableView.tableFooterView = footview;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaMed];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaAllergy];
   
//  [self getSystemTimeFromServer];
    
    [self comimitBtn];
}

#pragma mark 提交
-(void)comimitBtn{
//    WEAKSELFS  SCREEN_HEIGHT-55*BiliWidth-20-40-50
    CGFloat yy;
    yy = SCREEN_HEIGHT-55*BiliWidth-20-50-kTopHeight-SafeAreaBottomHeight-40;
//    if (kISiPhoneX) {
//        yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-40;
//    }else{
//           yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight;
//    }
    WEAKSELFS
    contactsBtn = [UIButton createBtnFrame:CGRectMake(0,yy, SCREEN_WIDTH, 40) title:@"疾病信息提交按钮" bgImageName:nil titleColor:WHITECOLORS cornerRadius:0 maskTobound:NO action:^(UIButton *button) {
        [weakSelf commitDiseaseBtn];
    }];
    contactsBtn.backgroundColor = JISECOLOR;
    [self.view addSubview:contactsBtn];

}

#pragma mark dataInit
-(void)dataInit{
    
    
    
    
    NSArray *arr = [[NSArray alloc]initWithObjects:@"是否医院就诊",@"目前肝脏状态",@"当前是否服药",@"",@"是否有过敏史",nil];
    [self.dataArray addObjectsFromArray:arr];
      
     NSArray *arrscontent = [[NSArray alloc]initWithObjects:@"请选择医院就诊",@"请选择肝脏状态",@"请选择是否服药",@"",@"请选择有无过敏史",nil];
     [self.contentArr addObjectsFromArray:arrscontent];
    
    self.other_diseaseStr = @"";
    
    isMedicine = NO;
    isAllergy = NO;
    self.allergyYesOrNo = @"-1";
  
    
     NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",nil];
     [self.addAndsubArray addObjectsFromArray:arr0];
     
     NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",nil];
     [self.addAndsubContentArr addObjectsFromArray:arrcontent];
    
     [self.disease_infoArrM addObject:@"请选择疾病类型"]; //初始有一个
    
    NSArray *arr11 = @[@"未知",@"0年",
                        @"1年",@"2年",@"3年", @"4年",@"5年",@"6年",@"7年",@"8年",@"9年",@"10年",
                        @"11年",@"12年",@"13年", @"14年",@"15年",@"16年",@"17年",@"18年",@"19年",@"20年",
                        @"21年",@"22年",@"23年", @"24年",@"25年",@"26年",@"27年",@"28年",@"29年",@"30年",
                        @"31年",@"32年",@"33年", @"34年",@"35年",@"36年",@"37年",@"38年",@"39年",@"40年",
                        @"41年",@"42年",@"43年", @"44年",@"45年",@"46年",@"47年",@"48年",@"49年",@"50年",
                        @"51年",@"52年",@"53年", @"54年",@"55年",@"56年",@"57年",@"58年",@"59年",@"60年",
                        @"61年",@"62年",@"63年", @"64年",@"65年",@"66年",@"67年",@"68年",@"69年",@"70年",
                        @"71年",@"72年",@"73年", @"74年",@"75年",@"76年",@"77年",@"78年",@"79年",@"80年",
                        @"81年",@"82年",@"83年", @"84年",@"85年",@"86年",@"87年",@"88年",@"89年",@"90年",
                        @"91年",@"92年",@"93年", @"94年",@"95年",@"96年",@"97年",@"98年",@"99年",@"100年",
                        @"101年",@"102年",@"103年", @"104年",@"105年",@"106年",@"107年",@"108年",@"109年",@"110年",
                        @"111年",@"112年",@"113年", @"114年",@"115年",@"116年",@"117年",@"118年",@"119年",@"120年",
                        ];
        [self.agesDataArr  addObjectsFromArray:arr11];
    
    NSArray *arr1 = @[@"1b型",@"2a型",
                      @"2型",@"3型",@"6型", @"2&3型",@"4型",@"5型"];
    [self.bingDiseaseArr  addObjectsFromArray:arr1];
    
    
    diseaseNum = 1;
    
    
    
    
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
        return 44.0;
    }else{
        
        if (isMedicine) {
            if(indexPath.row == 3){
                return 100;
            }
            if(indexPath.row == 4){
                return self.textTagCollectionView1.height+30+16+10;
            }
        }else{
            if(indexPath.row == 3){
                return self.textTagCollectionView1.height+30+16+10;
            }
        }
        
        
        return 44.0;
    }
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
   if (self.addAndsubTablview == tableView) {
           return self.addAndsubArray.count;
     }else{
          return self.dataArray.count;
     }

}


#pragma mark addBtn
-(void)addBtn:(NSInteger)row{
    MCLog(@"++++++++==%ld",(long)row);
    if (row == 0) {// 第一组 +
        if ( diseaseNum == 3) {
             return;
        }
         diseaseNum++;
        if (diseaseNum == 2) {
            [self.addAndsubArray addObject:@"所患疾病（2）"];
            [self.addAndsubContentArr addObject:@"请选择疾病类型"];
            
            [self.disease_infoArrM  addObject:@"请选择疾病类型"];

        }
        if (diseaseNum == 3) {
             [self.addAndsubArray addObject:@"所患疾病（3）"];
             [self.addAndsubContentArr addObject:@"请选择疾病类型"];
            
             [self.disease_infoArrM  addObject:@"请选择疾病类型"];

        }
        
    }else{
        if (diseaseNum == 2) {
            [self.addAndsubArray   removeLastObject];
           [self.addAndsubContentArr removeLastObject];
            
            
            
            [self.disease_infoArrM  removeLastObject];

         }

         if (diseaseNum == 3) {
             if (row == 1) {
                 [self.addAndsubArray   removeObjectAtIndex:1];
                 [self.addAndsubContentArr removeObjectAtIndex:1];
                 [self.addAndsubArray replaceObjectAtIndex:1 withObject:@"所患疾病（2）"];
                 
                 [self.disease_infoArrM  replaceObjectAtIndex:1 withObject:@"请选择疾病类型"];

             }
             if (row == 2) {
                 [self.addAndsubArray   removeLastObject];
                 [self.addAndsubContentArr removeLastObject];
                 
                 
                 [self.disease_infoArrM   removeLastObject];

             }
         }
  
        diseaseNum--;
    }

     self.addAndsubTablview.height = 44*self.addAndsubArray.count;
     [self.addAndsubTablview reloadData];
     self.tableView.tableHeaderView = self.addAndsubTablview;

}

#pragma mark seleDiseaseClick
-(void)seleDiseaseClick:(NSInteger)row{
    MCLog(@"++++++++==%ld",(long)row);
        DiseaseSelectVC *vc= [DiseaseSelectVC new];
    NSString *nameStr = [NSString stringWithFormat:@"%@",self.addAndsubContentArr[row]];
// 甲型肝炎(未知，**)  NSArray  *array = [str componentsSeparatedByString:@","];--分隔符
    if (![nameStr isEqualToString:@"请选择疾病类型"]) {
        NSArray  *array = [nameStr componentsSeparatedByString:@"("];
        if (array.count>=2) {
             vc.diseaseNamestr = array[0];
             NSString *twoStr = [NSString stringWithFormat:@"%@",array[1]];
             NSArray  *array1 = [twoStr componentsSeparatedByString:@"，"];
            if ([vc.diseaseNamestr isEqualToString:@"丙型肝炎"]) {
                vc.longNamestr = array1[0];
                vc.diseaseBingstr = array1[1];
            }else{
                vc.longNamestr = array1[0];
            }
        }
    }
    
     WEAKSELFS
    vc.contentBlock = ^(NSString * _Nonnull content, NSString * _Nonnull uuidstrLongstr) {
        MCLog(@"content====%@",content);
        MCLog(@"uuidstrLongstr====%@",uuidstrLongstr);

           [weakSelf.addAndsubContentArr replaceObjectAtIndex:row withObject:content];
           [weakSelf.addAndsubTablview reloadData];
         
         
           [weakSelf.disease_infoArrM replaceObjectAtIndex:row withObject:uuidstrLongstr];
        

        
    };
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
            DiseaseNewShowCell *cell = [DiseaseNewShowCell cellWithTableView:tableView];
        cell.numCount = diseaseNum;
                cell.indepaths = indexPath;
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.nameLabel.text = [NSString stringWithFormat:@"%@",[self.addAndsubArray objectAtIndex:indexPath.row]];
                cell.contentLab.text =  [NSString stringWithFormat:@"%@",[self.addAndsubContentArr objectAtIndex:indexPath.row]];
                        WEAKSELFS
                cell.againBlock = ^(NSInteger rowIntNum) {
                    [weakSelf addBtn:rowIntNum];
                };
               cell.diseaseSelectBlock = ^(NSInteger rowIntNum) {
               [weakSelf seleDiseaseClick:rowIntNum];

        };
                return  cell;
    
       }else{
           
            if (isMedicine) {
                   if(indexPath.row == 3){
                        static NSString *identifier = @"celltextview";
                        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                        if (!cell) {
                            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                            cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        }
                        for (UIView *view in cell.contentView.subviews) {
                            [view removeFromSuperview];
                        }
                   
                       UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"当前服药情况" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
                          if (SCREEN_WIDTH == 320) {
                              label.font = SYSTEMFONT(13.0);
                          }else{}
                          [label sizeToFit];
                          [ cell.contentView addSubview:label];
                          
                          CGFloat  mustX = CGRectGetMaxX(label.frame);
                          UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
                          mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
                          mustStartImagview.centerY = label.centerY;
                          [ cell.contentView addSubview:mustStartImagview];
                          
                          self.descrViewaMed.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
                          [ cell.contentView addSubview:self.descrViewaMed];
                       
                       UIView *lineview = [UIView createViewWithFrame:CGRectMake(15, CGRectGetMaxY(self.descrViewaMed.frame)+9.5, SCREEN_WIDTH-15, 0.45) bgColor:RGB(224, 224, 224)];
                        [cell.contentView addSubview:lineview];
                       
                        return cell;
                       
                   }else if (indexPath.row == 4) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                       
                       UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(self.textTagCollectionView1.frame), SCREEN_WIDTH, 10) bgColor:RGB(238, 238, 238)];
                         [cell.contentView addSubview:lineview];
                         return cell;
                     }else{
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                         cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         cell.lastLineview.hidden = NO;
                         return  cell;
                     }
               }else{
                   
                   
                     if (indexPath.row == 3) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                        
                       UIView *lineview = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(self.textTagCollectionView1.frame), SCREEN_WIDTH, 10) bgColor:RGB(238, 238, 238)];
                        [cell.contentView addSubview:lineview];
                       
                         return cell;
                     }else{
                         
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                        cell.lastLineview.hidden = NO;
                         return  cell;
                         
                     }
               }
       }

}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
//   [tableView deselectRowAtIndexPath:indexPath animated:true];
    
    if (self.addAndsubTablview == tableView) {
        
    }
    else{
        WEAKSELFS
           if (indexPath.row == 0){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择医院就诊" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //           self.liver_statusStr = string;
                                 [weakSelf.contentArr  replaceObjectAtIndex:0 withObject:string];
                                 [weakSelf.tableView reloadData];
                             } cancelBlock:^{
                                 MCLog(@"cancle");
                             }];
                         }
           if (indexPath.row == 1){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"无明显肝纤维化", @"肝纤维化", @"肝硬化",@"肝硬化及并发症",@"肝癌",@"未知"] title:@"选择目前肝脏状态" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //               self.liver_statusStr = string;
                                     [weakSelf.contentArr  replaceObjectAtIndex:1 withObject:string];
                                     [weakSelf.tableView reloadData];
                                  } cancelBlock:^{
                                      MCLog(@"cancle");
                                  }];
                         }
           if (isMedicine) {
              
                if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  if ([string isEqualToString:@"有"]) {
                                   isMedicine = YES;
                                    if (weakSelf.dataArray.count == 6){}else{
                                    [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                    [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                    }
                                  
                                 }else{
                                   isMedicine = NO;
                                     
                                    self.descrViewaMed.text = @"";
                                    self.descrViewaMed.placeholder = @"请输入服药(最少需要描述5个字)";
                                     
                                   if (weakSelf.dataArray.count == 6) {
                                       [weakSelf.dataArray  removeObjectAtIndex:3];
                                       [weakSelf.contentArr removeObjectAtIndex:3];
                                   }
                               }
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                else if (indexPath.row == 4){
                          
               }
               else if (indexPath.row == 5){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                               self.allergyYesOrNo = @"1";
                                             }else{
                                            _descrViewaAllergy.placeholder = @"请输入对什么过敏(最少需要描述2个字)";
                                            _descrViewaAllergy.text = @"";
                                                 
                                                 isAllergy = NO;
                                                  self.allergyYesOrNo = @"0";
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:5 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }else{
           
                   if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];

                                  if ([string isEqualToString:@"有"]) {
                                      isMedicine = YES;
                                      [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                      [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                  }else{
                                      isMedicine = NO;
                                      self.descrViewaMed.text = @"";
                                     self.descrViewaMed.placeholder = @"请输入服药(最少需要描述5个字)";
                                      
                                      if (weakSelf.dataArray.count == 6) {
                                          [weakSelf.dataArray  removeObjectAtIndex:3];
                                          [weakSelf.contentArr removeObjectAtIndex:3];
                                      }
                                  }
                                
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                      else if (indexPath.row == 3){
                          
                      }
                      else if (indexPath.row == 4){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                                self.allergyYesOrNo = @"1";
                                             }else{
                                                 isAllergy = NO;
                                                  self.allergyYesOrNo = @"0";
                                                _descrViewaAllergy.placeholder = @"请输入对什么过敏(最少需要描述2个字)";
                                                 _descrViewaAllergy.text = @"";
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:4 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }
    }
    
   
       
}


-(void)footviewReload{
    
     dispatch_async(dispatch_get_main_queue(), ^{
     if (isAllergy) {
        UIView *lineview2 = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 100+10) bgColor:[UIColor whiteColor]];
         
         UIView *lineview = [UIView createViewWithFrame:CGRectMake(15, 0, SCREEN_WIDTH-15,0.5 ) bgColor:RGB(224, 224, 224)];
         [lineview2 addSubview:lineview];
         
         
        UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"对什么过敏" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
        if (SCREEN_WIDTH == 320) {
                label.font = SYSTEMFONT(13.0);
            }else{}
            [label sizeToFit];
            [lineview2 addSubview:label];
            
            CGFloat  mustX = CGRectGetMaxX(label.frame);
            UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
            mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
            mustStartImagview.centerY = label.centerY;
            [lineview2 addSubview:mustStartImagview];
        
        self.descrViewaAllergy.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
        [lineview2 addSubview:self.descrViewaAllergy];
         
         
         UIView *lineviewtwo = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(self.descrViewaAllergy.frame)+10, SCREEN_WIDTH, 10) bgColor:RGB(238, 238, 238)];
        [lineview2 addSubview:lineviewtwo];
         
         
         self.tableView.tableFooterView = lineview2;
      }else{
          self.tableView.tableFooterView =  [UIView new];
     }
   });
 
    
}




#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
   
    NSInteger count = textTagCollectionView.allSelectedTags.count;
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
       [self.tagMarry addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<self.tagMarry.count; i++) {
            if ([[self.tagMarry objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [self.tagMarry removeObjectAtIndex:i];
            }
        }
    }
    

        self.textTagCollectionView1.selectionLimit = 0;
        if (index == 0) {
            for (int i = 0; i<self.tagMarry.count; i++) {
                NSInteger indexs = [self.tagMarry[i] integerValue];
                [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
            }
            [self.tagMarry removeAllObjects];
            [self.tagMarry addObject:tagsindexstr];
            [_textTagCollectionView1 setTagAtIndex:0 selected:YES];
//          self.textTagCollectionView1.selectionLimit = 1;
        }else{
            if ([self.tagMarry containsObject:@"0"]) {
                for (int i = 0; i<self.tagMarry.count; i++) {
                    NSInteger indexs = [self.tagMarry[i] integerValue];
                    [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
                }
                [self.tagMarry removeAllObjects];
                [self.tagMarry addObject:tagsindexstr];
                [_textTagCollectionView1 setTagAtIndex:index selected:YES];
            }else{
                
                
            }
            
        }
    
    self.other_diseaseStr = [textTagCollectionView.allSelectedTags componentsJoinedByString:@","];
//
//    MCLog(@"idnex===%@",self.tagMarry);
    MCLog(@"self.other_diseaseStr===%@",self.other_diseaseStr);

    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);

  
}

#pragma mark textview
// 监听文本改变
-(void)textViewEditChangedSuggest:(NSNotification *)obj{
    UITextView *textView = (UITextView *)obj.object;
    NSString *toBeString = textView.text;
    NSArray *current = [UITextInputMode activeInputModes];
    UITextInputMode *current11 = [current firstObject];
    NSString *lang = [current11 primaryLanguage];
    if ([lang isEqualToString:@"zh-Hans"]) {
        UITextRange *selectedRange = [textView markedTextRange];
        UITextPosition *position = [textView positionFromPosition:selectedRange.start offset:0];
        if (!position) {

            if (toBeString.length >500) {
                textView.text = [toBeString substringToIndex:500];
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
            }
        }
        else{
     
        }
        
    }
    // 中文输入法以外的直接对其统计限制即可，不考虑其他语种情况
    else{
        if (toBeString.length >500) {
            textView.text = [toBeString substringToIndex:500];
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        }
        
    }
    
}



- (void)textViewDidBeginEditing:(UITextView *)textView{
    if (textView  == self.descrViewaMed) {
        [UIView animateWithDuration:0.2 animations:^{
//              self.view.frame = CGRectMake(SCREEN_WIDTH,-120 , SCREEN_WIDTH, SCREEN_HEIGHT);
            self.view.y = -120;
            
            }];
    }else
    {
        [UIView animateWithDuration:0.2 animations:^{
//                  self.view.frame = CGRectMake(0,-210 , SCREEN_WIDTH, SCREEN_HEIGHT);
                self.view.y = -300;
        } ];
    }
  
}


- (void)textViewDidEndEditing:(UITextView *)textView{
    [UIView animateWithDuration:0.2 animations:^{
      self.view.y = 0;
    } ];
    [_descrViewaMed resignFirstResponder];
    [_descrViewaAllergy resignFirstResponder];

    
}



//控制输入文字的长度和内容，可通调用以下代理方法实现
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    if ([text isEqualToString:@"\n"]) {
        //禁止输入换行
        [textView resignFirstResponder];
        return NO;
    }
    else
    {
        return YES;
    }
}

-(void)dealloc
{
    
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaAllergy];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaMed];
    
}

#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer:(NSString *)typestr{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",Public_URLPic];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        if ([typestr isEqualToString:@"add"]) {
            [weakSelf addFamilyDiseaseRequest];
        }
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        if ([typestr isEqualToString:@"add"]) {
                  [weakSelf addFamilyDiseaseRequest];
            }
    }];
    
}

-(void)needInfoRequest{

    NSString *Strurl = [NSString
                        stringWithFormat:@"%@addInterrogationStep1Info",Public_URLAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
 
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"data=addInterrogationStep1info=%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        
        if ([code isEqualToString:@"200"]) {
            [self.diseaseListMarry addObjectsFromArray:dic[@"diseaseList"]];
        }
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}



//添加疾病信息
//patientAPI/addFamilyDisease
//参数
//基本参数
//family_uuid 家庭联系人uuid
//disease_info 需要拼接，如（丙型肝炎的uuid，5,1b型-丙型肝炎的uuid，2,2b型-甲型肝炎uuid,4,），疾病之间用逗号分隔，不同疾病用短横线-分隔,不是丙型肝炎的最后也要拼接一个空字符串
//go_hospital 是否医院就诊 0否,1是
//liver_status 肝病状态
//boolean_medication 是否服药  有/没有
//medication_info 服药情况
//other_disease 合并其他慢性病
//is_allergy 是否有过敏史  0否 1是
//allergy_info 对什么过敏

#pragma mark commitDiseaseBtn 提交验证
-(void)commitDiseaseBtn{
    
  diseaseInfo_str = @"";
    
    for (int i=0; i<self.disease_infoArrM.count; i++) {
        NSString *str = [NSString stringWithFormat:@"%@",self.disease_infoArrM[i]];
        if (![str isEqualToString:@"请选择疾病类型"]) {
            if (diseaseInfo_str.length == 0) {
                diseaseInfo_str = [NSString stringWithFormat:@"%@",str];
            }else{
                diseaseInfo_str = [NSString stringWithFormat:@"%@-%@",diseaseInfo_str,str];

            }
        }

    }
    
    MCLog(@"diseaseInfo_str===%@",diseaseInfo_str);
    
    
    NSString *diseaseStr = [NSString stringWithFormat:@"%@",self.addAndsubContentArr[0]];
    if ([diseaseStr isEqualToString:@"请选择疾病类型"]) {
        [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择疾病类型" confirmTitle:@"确定" handler:^{
        }];
        return;
    }
    
//    是否医院就诊
    NSString *hospitalStr = [NSString stringWithFormat:@"%@",self.contentArr[0]];
    //   肝脏状态
    NSString *ganzangStr = [NSString stringWithFormat:@"%@",self.contentArr[1]];
    //   是否服药
    NSString *midecimeStr = [NSString stringWithFormat:@"%@",self.contentArr[2]];
   
    if ([hospitalStr isEqualToString:@"请选择医院就诊"]) {
        [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择医院就诊" confirmTitle:@"确定" handler:^{
        }];
        return;
    }
    if ([ganzangStr isEqualToString:@"请选择肝脏状态"]) {
          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择肝脏状态" confirmTitle:@"确定" handler:^{
          }];
          return;
      }
    if ([midecimeStr isEqualToString:@"请选择是否服药"]) {
          [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择是否服药" confirmTitle:@"确定" handler:^{
          }];
          return;
     }
     //服药填写内容
     NSString *medicineContentStr = [NSString stringWithFormat:@"%@",self.descrViewaMed.text];
     //过敏填写内容
     NSString *allergyContentStr = [NSString stringWithFormat:@"%@",self.descrViewaAllergy.text];
    

    if (isMedicine) {
        
     if (medicineContentStr.length<5) {
           [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"用药描述最少5个字" confirmTitle:@"确定" handler:^{
           }];
           return;
      }
     //   是否过敏
      NSString *allgerStr = [NSString stringWithFormat:@"%@",self.contentArr[5]];
        if ([allgerStr isEqualToString:@"请选择有无过敏史"]) {
            [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择有无过敏史" confirmTitle:@"确定" handler:^{
             }];
          return;
        }
      if (isAllergy) {
            if (allergyContentStr.length<2) {
                    [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"过敏描述最少2个字" confirmTitle:@"确定" handler:^{
                    }];
                    return;
              }
        }

    }else{
      
        //   是否过敏
        NSString *allgerStr = [NSString stringWithFormat:@"%@",self.contentArr[4]];
               if ([allgerStr isEqualToString:@"请选择有无过敏史"]) {
                   [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择有无过敏史" confirmTitle:@"确定" handler:^{
                    }];
                 return;
               }
             if (isAllergy) {
                   if (allergyContentStr.length<2) {
                           [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"过敏描述最少2个字" confirmTitle:@"确定" handler:^{
                           }];
                           return;
                     }
               }
    }
    
    
    if (self.other_diseaseStr.length<=0) {
           
         [GccObject presentAlertViewWithTitle:@"温馨提示" message:@"请选择是否合并其他慢性疾病" confirmTitle:@"确定" handler:^{
         }];
         return;
    }
    
    
    [self getSystemTimeFromServer:@"add"];
    
    
}

//添加疾病信息
//patientAPI/addFamilyDisease
-(void)addFamilyDiseaseRequest{
  
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@addFamilyDisease",Public_URLAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];

//    family_uuidstr
    dicM[@"family_uuid"] = [NSString stringWithFormat:@"%@",self.family_uuidstr];
//    dicM[@"family_uuid"] = [NSString stringWithFormat:@"%@",@"5daf839af0464be1b0b744c37ef07c7a"];
    dicM[@"disease_info"] = [NSString stringWithFormat:@"%@",diseaseInfo_str];
    NSString *go_hostr = [NSString stringWithFormat:@"%@",self.contentArr[0]];
    if ([go_hostr isEqualToString:@"有"]) {
        go_hostr = @"1";
    }else{
        go_hostr = @"0";
    }
    dicM[@"go_hospital"] = [NSString stringWithFormat:@"%@",go_hostr];
    
    dicM[@"liver_status"] = [NSString stringWithFormat:@"%@",self.contentArr[1]];
    dicM[@"boolean_medication"] = [NSString stringWithFormat:@"%@",self.contentArr[2]];
    if ([DicRemove isBlankString:self.descrViewaMed.text]) {
        self.descrViewaMed.text = @"";
    }
    dicM[@"medication_info"] = [NSString stringWithFormat:@"%@",self.descrViewaMed.text];
    
    dicM[@"other_disease"] = [NSString stringWithFormat:@"%@",self.other_diseaseStr];
    
    dicM[@"is_allergy"] = [NSString stringWithFormat:@"%@",self.allergyYesOrNo];
    
    if ([DicRemove isBlankString:self.descrViewaAllergy.text]) {
           self.descrViewaAllergy.text = @"";
       }
    dicM[@"allergy_info"] = [NSString stringWithFormat:@"%@",self.descrViewaAllergy.text];
    dicM[@"debug"]  =  @"true";
    MCLog(@"dicM====%@",dicM);
    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"family_uuid",@"disease_info",@"go_hospital",@"liver_status",@"boolean_medication",@"medication_info",@"other_disease",@"is_allergy",@"allergy_info",@"debug"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"data==%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        
        if ([code isEqualToString:@"200"]) {
                  
        }else{

            [self showHint:dic[@"message"]];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}








/* 修改疾病信息  与 添加一样
 patientAPI/upFamilyDisease参数
 基本参数
 family_uuid 家庭联系人uuid
 disease_info 需要拼接，如（丙型肝炎的uuid，5,1b型-丙型肝炎的uuid，2,2b型-甲型肝炎uuid,4,），疾病之间用逗号分隔，不同疾病用短横线-分隔,不是丙型肝炎的最后也要拼接一个空字符串
 go_hospital 是否医院就诊 0否,1是
 liver_status 肝病状态
 boolean_medication 是否服药  有/没有
 medication_info 服药情况
 other_disease 合并其他慢性病
 is_allergy 是否有过敏史  0否 1是
 allergy_info 对什么过敏
 */



#pragma mark查询疾病信息
//getFamilyDisease  family_uuid

-(void)getFamilyDiseaseRequest{
  
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    NSString *Strurl = [NSString stringWithFormat:@"%@getFamilyDisease",Public_URLAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];

//    family_uuidstr
    dicM[@"family_uuid"] = [NSString stringWithFormat:@"%@",self.family_uuidstr];

    
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid",@"family_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"data=对对对=%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        
        if ([code isEqualToString:@"200"]) {
                  
        }else{

            [self showHint:dic[@"message"]];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}


@end


	data = (
	{
	uuid = 5daf839af0464be1b0b744c37ef07c7a;
	expected_date_of_childbirth = ;
	prov_id = 1;
	sex = 1;
	county_id = 2;
	regist_patient = 1;
	whether_hbv = 0;
	whether_pregnant = 1;
	city_id = 2;
	address = 北京市东城区;
	birthday = 1980-07-10;
	default_patient = 1;
	name = 胡歌3;
}
,
	{
	uuid = fcc59e51194240e88a4c1c968046e879;
	expected_date_of_childbirth = ;
	prov_id = 1;
	sex = 0;
	county_id = 2;
	regist_patient = 0;
	whether_hbv = 0;
	whether_pregnant = 0;
	city_id = 2;
	address = 北京市东城区;
	birthday = 2020-03-05;
	default_patient = 0;
	name = 新家庭联系人;
}
,
	{
	uuid = 19a7389d2b8447fb803cc9d05d726b46;
	expected_date_of_childbirth = 2019-08-06;
	prov_id = 1;
	sex = 1;
	county_id = 5;
	regist_patient = 0;
	whether_hbv = 0;
	whether_pregnant = 3;
	city_id = 5;
	address = 北京市丰台区;
	birthday = 1996-08-06;
	default_patient = 0;
	name = 胡歌3;
}
,
	{
	uuid = f890f33733e6471e9fd1fd2f4cfb58ff;
	expected_date_of_childbirth = ;
	prov_id = 1;
	sex = 0;
	county_id = 2;
	regist_patient = 0;
	whether_hbv = 0;
	whether_pregnant = 0;
	city_id = 2;
	address = 北京市东城区;
	birthday = 2006-07-29;
	default_patient = 0;
	name = 测试12;
}













gzz20200302 疾病信息

===========start ===============
#import "DiseasesInfoNewvcVC.h"
#import "NewPersonDatacell.h"
#import "DiseaseShowCell.h"

#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"

#import "GccPickerManager.h"

#import "FSTextView.h"
@interface DiseasesInfoNewvcVC ()<UITableViewDelegate,UITableViewDataSource,TTGTextTagCollectionViewDelegate,UITextViewDelegate>{
     NSString *sysTimestr;
      UIButton *contactsBtn;//底部按钮
    BOOL isMedicine;//是否服药 默认no
    BOOL isAllergy;//是否过敏 默认no
    NSInteger diseaseNum;//有几组 + - 组多三组
    
    BOOL isBingOne;//第一组是不是含有丙肝
    BOOL isBingTwo;//第2组是不是含有丙肝
    BOOL isBingThree;//第3组是不是含有丙肝
    
    NSInteger twoSubstr;//第二组减号的位置 - 蓝色 -1 没有此组
    NSInteger threeSubstr;//第3组减号 - 蓝色  -1  没有词组

    
}

/*<#code#>*/
@property (nonatomic, strong) UITableView *addAndsubTablview;//加减的tableview
@property (nonatomic, strong)NSMutableArray *addAndsubArray;
@property (nonatomic, strong) NSMutableArray *addAndsubContentArr;


@property (nonatomic, strong) NSMutableArray *diseaseListMarry;
//年龄
@property (nonatomic, strong) NSMutableArray *agesDataArr;

//丙肝类型
@property (nonatomic, strong) NSMutableArray *bingDiseaseArr;



@property (nonatomic, strong)UITableView *tableView;

@property (nonatomic, strong)NSMutableArray *dataArray;
@property (nonatomic, strong) NSMutableArray *contentArr;

@property (nonatomic, strong)TTGTextTagCollectionView *textTagCollectionView1;
@property (nonatomic, strong)NSMutableArray *tagMarry;


@property (nonatomic, strong)FSTextView *descrViewaMed;//服药之后的出现文本框
@property (nonatomic, strong)FSTextView *descrViewaAllergy;//过敏时之后的出现文本框
@end
@implementation DiseasesInfoNewvcVC



-(FSTextView *)descrViewaMed{
    if (!_descrViewaMed) {
        _descrViewaMed = [FSTextView textView];
        _descrViewaMed.delegate = self;
        _descrViewaMed.backgroundColor = RGB(238, 238, 238);
        _descrViewaMed.placeholder = @"服用恩替卡韦5个月;服用xxx1年; \n无耐药(最少需要描述5个字)";
        _descrViewaMed.placeholderColor = [UIColor grayColor];
        _descrViewaMed.placeholderFont = SYSTEMFONT(13);
        _descrViewaMed.font = SYSTEMFONT(13);
        _descrViewaMed.cornerRadius = 4;
    }
    return _descrViewaMed;
}

-(FSTextView *)descrViewaAllergy{
    if (!_descrViewaAllergy) {
        _descrViewaAllergy = [FSTextView textView];
        _descrViewaAllergy.delegate = self;
        _descrViewaAllergy.backgroundColor = RGB(238, 238, 238);
        _descrViewaAllergy.placeholder = @"填写过敏情况(最少需要描述2个字)";
        _descrViewaAllergy.placeholderColor = [UIColor grayColor];
        _descrViewaAllergy.placeholderFont = SYSTEMFONT(13);
        _descrViewaAllergy.font = SYSTEMFONT(13);
        _descrViewaAllergy.cornerRadius = 4;
    }
    return _descrViewaAllergy;
}

//懒加载
- (TTGTextTagCollectionView *)textTagCollectionView1{
    if (!_textTagCollectionView1) {
          _textTagCollectionView1 = [[TTGTextTagCollectionView alloc]  initWithFrame:CGRectMake(15,14,SCREEN_WIDTH-20, 150)];
                 _textTagCollectionView1.isDisOrderstr = @"yes";
                 _textTagCollectionView1.delegate = self;
                 _textTagCollectionView1.showsVerticalScrollIndicator = NO;
                 TTGTextTagConfig *config = _textTagCollectionView1.defaultConfig;
                 config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
                 //文本的颜色
                 config.tagTextColor = QIANBLACKCOLOR;
                 //选中的样色
                 config.tagSelectedTextColor = JISECOLOR;
                 config.tagBackgroundColor = [UIColor clearColor];
                 config.tagSelectedBackgroundColor = [UIColor clearColor];
                 _textTagCollectionView1.selectionLimit = 0;
                 _textTagCollectionView1.horizontalSpacing = 12.0;
                 _textTagCollectionView1.verticalSpacing = 12.0;
                 config.tagBorderColor = QIANBLACKCOLOR;
                 config.tagSelectedBorderColor = JISECOLOR;
                 config.tagBorderWidth = 1;
                 config.tagSelectedBorderWidth = 1;
                 config.tagShadowColor = [UIColor whiteColor];
                 config.tagShadowOffset = CGSizeMake(0, 0);
                 config.tagShadowOpacity = 0.0f;
                 config.tagShadowRadius = 0.0f;
                 config.tagCornerRadius = 10.0;
                 config.tagSelectedCornerRadius = 10.0;
                 config.tagExtraSpace = CGSizeMake(20,6);
                 
                 [_textTagCollectionView1 addTags:@[@"无其他慢性病", @"高血压",@"糖尿病", @"冠心病", @"HIV感染",@"结核", @"高血脂",@"胃炎或者肠炎", @"慢性肾功能不全或者肾脏疾病"]];
                 _textTagCollectionView1.alignment = 0;
                 NSInteger nums = _textTagCollectionView1.tagCollectionView.cMaxTagsCount;
             MCLog(@"有几行==vc=中==%zd",_textTagCollectionView1.tagCollectionView.cMaxTagsCount);
                 _textTagCollectionView1.height = nums*(20+12);
    }
    return _textTagCollectionView1;
}
- (NSMutableArray *)tagMarry{
    if (!_tagMarry) {
        _tagMarry = [NSMutableArray array];
    }
    return _tagMarry;
}
//addAndsubTablview
- (UITableView *)addAndsubTablview{
    if (!_addAndsubTablview) {
        CGRect tableRect = CGRectMake(0,0, SCREEN_WIDTH, 44*2);
        _addAndsubTablview = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _addAndsubTablview.delegate = self;
        _addAndsubTablview.dataSource = self;
        _addAndsubTablview.showsVerticalScrollIndicator = NO;
        _addAndsubTablview.tableFooterView = [UIView new];
        _addAndsubTablview.backgroundColor = [UIColor purpleColor];
    }
    return _addAndsubTablview;
}
//懒加载TableView 55*BiliWidth
- (UITableView *)tableView{
    if (!_tableView) {
//        555.546875
//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-55*BiliWidth-20-50-300);

//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, 555.546875-10);
        CGFloat yy;
//        if (kISiPhoneX) {
            yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-SafeAreaBottomHeight;
//        }else{
//               yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight;
//        }
       
        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, yy);
           _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
//        CGRect tableRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-kTopHeight-40);
//        _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.tableFooterView = [UIView new];
        [self.view addSubview:_tableView];
    }
    return _tableView;
}
//懒加载
- (NSMutableArray *)contentArr{
    if (!_contentArr) {
        _contentArr = [NSMutableArray array];
    }
    return _contentArr;
}


-(NSMutableArray *)dataArray{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}



- (NSMutableArray *)addAndsubArray{
    if (!_addAndsubArray) {
        _addAndsubArray = [NSMutableArray array];
    }
    return _addAndsubArray;
}


-(NSMutableArray *)addAndsubContentArr{
    if (!_addAndsubContentArr) {
        _addAndsubContentArr = [NSMutableArray array];
    }
    return _addAndsubContentArr;
}

- (NSMutableArray *)bingDiseaseArr{
    if (!_bingDiseaseArr) {
        _bingDiseaseArr = [NSMutableArray array];
    }
    return _bingDiseaseArr;
}


- (NSMutableArray *)agesDataArr{
    if (!_agesDataArr) {
        _agesDataArr = [NSMutableArray array];
    }
    return _agesDataArr;
}

-(NSMutableArray *)diseaseListMarry{
    if (!_diseaseListMarry) {
        _diseaseListMarry = [NSMutableArray array];
    }
    return _diseaseListMarry;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"疾病信息";
    [self dataInit];
    self.tableView.backgroundColor = [UIColor lightGrayColor];
    
//    MCLog(@"view------%lf",self.view.height);
//    UIView *headview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200) bgColor:[UIColor whiteColor]];
//
    self.tableView.tableHeaderView = self.addAndsubTablview;
//    SCREEN_HEIGHT
    UIView *footview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 50) bgColor:[UIColor redColor]];
    self.tableView.tableFooterView = footview;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaMed];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaAllergy];
   
    [self getSystemTimeFromServer];
    
    [self comimitBtn];
}

#pragma mark 提交
-(void)comimitBtn{
//    WEAKSELFS  SCREEN_HEIGHT-55*BiliWidth-20-40-50
    CGFloat yy;
    yy = SCREEN_HEIGHT-55*BiliWidth-20-50-kTopHeight-SafeAreaBottomHeight-40;
//    if (kISiPhoneX) {
//        yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-40;
//    }else{
//           yy = SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight;
//    }
    contactsBtn = [UIButton createBtnFrame:CGRectMake(0,yy, SCREEN_WIDTH, 40) title:@"疾病信息提交按钮" bgImageName:nil titleColor:WHITECOLORS cornerRadius:0 maskTobound:NO action:^(UIButton *button) {
//        [weakSelf ];
    }];
    contactsBtn.backgroundColor = JISECOLOR;
    [self.view addSubview:contactsBtn];

}

#pragma mark dataInit
-(void)dataInit{
    NSArray *arr = [[NSArray alloc]initWithObjects:@"是否医院就诊",@"目前肝脏状态",@"当前是否服药",@"",@"是否有过敏史",nil];
    [self.dataArray addObjectsFromArray:arr];
      
     NSArray *arrscontent = [[NSArray alloc]initWithObjects:@"选择医院就诊",@"请选择肝脏状态",@"选择是否服药",@"",@"选择有无过敏史",nil];
     [self.contentArr addObjectsFromArray:arrscontent];
    
    
    isMedicine = NO;
    isAllergy = NO;
    isBingOne = NO;
    isBingTwo = NO;
    isBingThree = NO;
    twoSubstr =  -1;
    threeSubstr = -1;
    NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
     [self.addAndsubArray addObjectsFromArray:arr0];
     
     NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
     [self.addAndsubContentArr addObjectsFromArray:arrcontent];
    
    NSArray *arr11 = @[@"未知",@"0年",
                        @"1年",@"2年",@"3年", @"4年",@"5年",@"6年",@"7年",@"8年",@"9年",@"10年",
                        @"11年",@"12年",@"13年", @"14年",@"15年",@"16年",@"17年",@"18年",@"19年",@"20年",
                        @"21年",@"22年",@"23年", @"24年",@"25年",@"26年",@"27年",@"28年",@"29年",@"30年",
                        @"31年",@"32年",@"33年", @"34年",@"35年",@"36年",@"37年",@"38年",@"39年",@"40年",
                        @"41年",@"42年",@"43年", @"44年",@"45年",@"46年",@"47年",@"48年",@"49年",@"50年",
                        @"51年",@"52年",@"53年", @"54年",@"55年",@"56年",@"57年",@"58年",@"59年",@"60年",
                        @"61年",@"62年",@"63年", @"64年",@"65年",@"66年",@"67年",@"68年",@"69年",@"70年",
                        @"71年",@"72年",@"73年", @"74年",@"75年",@"76年",@"77年",@"78年",@"79年",@"80年",
                        @"81年",@"82年",@"83年", @"84年",@"85年",@"86年",@"87年",@"88年",@"89年",@"90年",
                        @"91年",@"92年",@"93年", @"94年",@"95年",@"96年",@"97年",@"98年",@"99年",@"100年",
                        @"101年",@"102年",@"103年", @"104年",@"105年",@"106年",@"107年",@"108年",@"109年",@"110年",
                        @"111年",@"112年",@"113年", @"114年",@"115年",@"116年",@"117年",@"118年",@"119年",@"120年",
                        ];
        [self.agesDataArr  addObjectsFromArray:arr11];
    
    NSArray *arr1 = @[@"1b型",@"2a型",
                      @"2型",@"3型",@"6型", @"2&3型",@"4型",@"5型"];
    [self.bingDiseaseArr  addObjectsFromArray:arr1];
    
    
    diseaseNum = 1;
    
    
    
    
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
        return 44.0;
    }else{
        
        if (isMedicine) {
            if(indexPath.row == 3){
                return 100;
            }
            if(indexPath.row == 4){
                return self.textTagCollectionView1.height+30+16;
            }
        }else{
            if(indexPath.row == 3){
                return self.textTagCollectionView1.height+30+16;
            }
        }
        
        
        return 44.0;
    }
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
   if (self.addAndsubTablview == tableView) {
           return self.addAndsubArray.count;
     }else{
          return self.dataArray.count;
     }

}


#pragma mark addBtn
-(void)addBtn:(NSInteger)row{
    if (row == 0) { // 第一组 +
        MCLog(@"addbtn ===== %zd",row);
        if ( diseaseNum == 3) {
             return;
         }
         diseaseNum++;
        
        if (diseaseNum == 2) {
              twoSubstr = self.addAndsubArray.count;
        }
        if (diseaseNum == 3) {
              threeSubstr = self.addAndsubArray.count;
        }
        
         NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
         [self.addAndsubArray addObjectsFromArray:arr0];
         NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
         [self.addAndsubContentArr addObjectsFromArray:arrcontent];
        
      
        
   
    }else{
         
        
           if (row == 2 ||row == 3) {//第二组
               if (diseaseNum == 2) {//z只有两组时
                    twoSubstr = -1;
                   int cout = 2;
                   if (isBingTwo) {
                       cout = cout+1;
                       isBingTwo = NO;
                   }
                   for (int i = 0; i<cout; i++) {
                       [self.addAndsubArray   removeLastObject];
                        [self.addAndsubContentArr removeLastObject];
                   }
               }
               else{
                   threeSubstr = -1;
                   isBingThree = NO;
                  
                   if (isBingOne && isBingTwo) { //都真
                       for (int i = 0; i<3; i++) {
                       [self.addAndsubArray   removeObjectAtIndex:3];
                        [self.addAndsubContentArr removeObjectAtIndex:3];
                       }
                       twoSubstr = 3;
                   }
                   else if(isBingOne){//1 真 2假
                       for (int i = 0; i<2; i++) {
                             [self.addAndsubArray   removeObjectAtIndex:3];
                              [self.addAndsubContentArr removeObjectAtIndex:3];
                         }
                        twoSubstr = 3;
                   }
                   else if(isBingTwo){//2真 1假
                       for (int i = 0; i<3; i++) {
                            [self.addAndsubArray   removeObjectAtIndex:2];
                             [self.addAndsubContentArr removeObjectAtIndex:2];
                        }
                       twoSubstr = 2;
                   }
                   else{//都假
                       for (int i = 0; i<2; i++) {
                            [self.addAndsubArray   removeObjectAtIndex:2];
                             [self.addAndsubContentArr removeObjectAtIndex:2];
                        }
                       twoSubstr = 2;
                   }
                   
                   
               }
          
               
           }
        
            if(row>=4){//第三组
                threeSubstr = -1;
                int cout = 2;
                if (isBingThree) {
                    cout = cout+1;
                    isBingThree = NO;
                }
                for (int i = 0; i<cout; i++) {
                    [self.addAndsubArray   removeLastObject];
                     [self.addAndsubContentArr removeLastObject];
                }
             
            }
          diseaseNum--;
    }
    self.addAndsubTablview.height = 44*self.addAndsubArray.count;
     [self.addAndsubTablview reloadData];
    self.tableView.tableHeaderView = self.addAndsubTablview;
 
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
            DiseaseShowCell *cell = [DiseaseShowCell cellWithTableView:tableView];
                cell.indepaths = indexPath;
                if (indexPath.row == twoSubstr) {
                   cell.subStr = @"2";
                }else if(indexPath.row == threeSubstr){
                     cell.subStr = @"3";
                }
                else{
                     cell.subStr = @"22222";
                }
//        没有设置  dicset
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.nameLabel.text = [NSString stringWithFormat:@"%@",[self.addAndsubArray objectAtIndex:indexPath.row]];
                cell.contentLab.text =  [NSString stringWithFormat:@"%@",[self.addAndsubContentArr objectAtIndex:indexPath.row]];
                        WEAKSELFS
                cell.againBlock = ^(NSInteger rowIntNum) {
                    [weakSelf addBtn:rowIntNum];
                };
                return  cell;
    
       }else{
            if (isMedicine) {
                   if(indexPath.row == 3){
                        static NSString *identifier = @"celltextview";
                        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                        if (!cell) {
                            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                            cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        }
                        for (UIView *view in cell.contentView.subviews) {
                            [view removeFromSuperview];
                        }
                   
                       UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"请填写当前服用的肝病用药、服用时长及耐药情况" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
                          if (SCREEN_WIDTH == 320) {
                              label.font = SYSTEMFONT(13.0);
                          }else{}
                          [label sizeToFit];
                          [ cell.contentView addSubview:label];
                          
                          CGFloat  mustX = CGRectGetMaxX(label.frame);
                          UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
                          mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
                          mustStartImagview.centerY = label.centerY;
                          [ cell.contentView addSubview:mustStartImagview];
                          
                          self.descrViewaMed.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
                          [ cell.contentView addSubview:self.descrViewaMed];
                       
                        return cell;
                       
                   }else if (indexPath.row == 4) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                         
                         return cell;
                     }else{
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                         //    cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         return  cell;
                     }
               }else{
                   if (indexPath.row == 3) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                         
                         return cell;
                     }else{
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                         //    cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         return  cell;
                     }
               }
       }
    


}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
//   [tableView deselectRowAtIndexPath:indexPath animated:true];
    
    if (self.addAndsubTablview == tableView) {
        WEAKSELFS
        NSString *titleNamestr = [NSString stringWithFormat:@"%@",self.addAndsubArray[indexPath.row]];
        if ([titleNamestr isEqualToString:@"所患疾病"]) {
            NSMutableArray *arr = [NSMutableArray array];
                                 for (int i=0; i<self.diseaseListMarry.count; i++) {
                                     [arr addObject:[self.diseaseListMarry[i] objectForKey:@"name"]];
                                 }
                                 [[GccPickerManager shareManger] TagshowPickerViewWithDataArrayt:arr title:@"咨询的疾病" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string, NSInteger tag) {
                                     [weakSelf.addAndsubContentArr replaceObjectAtIndex:indexPath.row withObject:string];
                                     if ([string isEqualToString:@"丙型肝炎"]) {
                                         if (indexPath.row == 0) {//第一组
                                              if (isBingOne) {
                                               }else{
                                                   isBingOne = YES;
                                                   [weakSelf.addAndsubArray insertObject:@"丙肝基因型" atIndex:2];
                                                   [weakSelf.addAndsubContentArr insertObject:@"选择丙肝基因型" atIndex:2];
                                              }
                                         }
                                         if (indexPath.row == 2 || indexPath.row == 3) {//第二组
                                             if (isBingTwo) {  }else{
                                                isBingTwo = YES;
                                                [weakSelf.addAndsubArray insertObject:@"丙肝基因型" atIndex:indexPath.row+2];
                                                [weakSelf.addAndsubContentArr insertObject:@"选择丙肝基因型" atIndex:indexPath.row+2];
                                            }
                                         }
                                         if(indexPath.row>=4){//第三组
                                             if (isBingThree) {  }else{
                                              isBingThree = YES;
                                              [weakSelf.addAndsubArray insertObject:@"丙肝基因型" atIndex:indexPath.row+2];
                                              [weakSelf.addAndsubContentArr insertObject:@"选择丙肝基因型" atIndex:indexPath.row+2];
                                             }
                                         }
                                         
                                     }else{
                                   
                                         if (indexPath.row == 0) {
                                             if (isBingOne) {
                                                 isBingOne = NO;
                                                 [weakSelf.addAndsubArray  removeObjectAtIndex:2];
                                                 [weakSelf.addAndsubContentArr removeObjectAtIndex:2];
                                             }
                                         }
                                         
                                         if (indexPath.row == 2 || indexPath.row == 3) {//第二组
                                         if (isBingTwo) {
                                           isBingTwo = NO;
                                           [weakSelf.addAndsubArray  removeObjectAtIndex:indexPath.row+2];
                                           [weakSelf.addAndsubContentArr removeObjectAtIndex:indexPath.row+2];
                                            }
                                         }
                                        if(indexPath.row>=4){//第三组
                                               if (isBingThree) {
                                                     isBingThree = NO;
                                                     [weakSelf.addAndsubArray  removeObjectAtIndex:indexPath.row+2];
                                                     [weakSelf.addAndsubContentArr removeObjectAtIndex:indexPath.row+2];
                                              }
                                        }
                
                                         twoSubstr = indexPath.row+2;
                                      
                                         
                                     }
                                     if (diseaseNum == 1) {
                                         twoSubstr = -1;
                                         threeSubstr = -1;
                                       }else if (diseaseNum == 2){
                                         if (isBingOne) {
                                                  twoSubstr = 3;
                                            }else{
                                                  twoSubstr =  2;
                                          }
                                       }
                                       else if (diseaseNum == 3 ){
                                           if (isBingOne) {
                                               twoSubstr = 3;
                                           }else{twoSubstr = 2; }
                                           if (isBingOne && isBingTwo) {
                                               threeSubstr = 6;
                                           }else if (isBingOne || isBingTwo){
                                                threeSubstr = 5;
                                           }else{
                                                threeSubstr = 4;
                                           }
                                           
                                       }
                                                                 

                                     
                         dispatch_async(dispatch_get_main_queue(), ^{
                            weakSelf.addAndsubTablview.height = 44*self.addAndsubArray.count;
                             [weakSelf.addAndsubTablview reloadData];
                           weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                       });} cancelBlock:^{
                                     MCLog(@"cancle");
           }];
        }else if ([titleNamestr isEqualToString:@"患病时长"]){
            [[GccPickerManager shareManger] showPickerViewWithDataArray:self.agesDataArr title:@"选择患病时长" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                       
                  [weakSelf.addAndsubContentArr replaceObjectAtIndex:indexPath.row withObject:string];
                                
                   dispatch_async(dispatch_get_main_queue(), ^{
                                               [weakSelf.addAndsubTablview reloadData];
                                             weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                         });
                                        } cancelBlock:^{
                                            MCLog(@"cancle");
                                    }];
        }else if ([titleNamestr isEqualToString:@"丙肝基因型"]){
            [[GccPickerManager shareManger] showPickerViewWithDataArray:self.bingDiseaseArr title:@"选择丙肝基因型" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                          
                [weakSelf.addAndsubContentArr replaceObjectAtIndex:indexPath.row withObject:string];
                                              
                                 dispatch_async(dispatch_get_main_queue(), ^{
                                                             [weakSelf.addAndsubTablview reloadData];
                                                           weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                                       });
                
                                        } cancelBlock:^{
                                                         MCLog(@"cancle");
                                    }];
        }
        
        
        
        
//        if (diseaseNum == 1) {
//            if (indexPath.row == 0){
//
//            }
//
//        }
        
    }
    
    

    
    
    
    else{
        WEAKSELFS
           if (indexPath.row == 0){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择医院就诊" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //           self.liver_statusStr = string;
                                 [weakSelf.contentArr  replaceObjectAtIndex:0 withObject:string];
                                 [weakSelf.tableView reloadData];
                             } cancelBlock:^{
                                 MCLog(@"cancle");
                             }];
                         }
           if (indexPath.row == 1){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"无明显肝纤维化", @"肝纤维化", @"肝硬化",@"肝硬化及并发症",@"肝癌",@"未知"] title:@"选择目前肝脏状态" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //               self.liver_statusStr = string;
                                     [weakSelf.contentArr  replaceObjectAtIndex:1 withObject:string];
                                     [weakSelf.tableView reloadData];
                                  } cancelBlock:^{
                                      MCLog(@"cancle");
                                  }];
                             
                         }
           if (isMedicine) {
              
                if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  if ([string isEqualToString:@"有"]) {
                                   isMedicine = YES;
                                      if (weakSelf.dataArray.count == 6){}else{
                                    [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                    [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                      }
                                  
                               }else{
                                   isMedicine = NO;
                                   if (weakSelf.dataArray.count == 6) {
                                       [weakSelf.dataArray  removeObjectAtIndex:3];
                                       [weakSelf.contentArr removeObjectAtIndex:3];
                                   }
                               }
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                else if (indexPath.row == 4){
                          
               }
               else if (indexPath.row == 5){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                             }else{
                                                 isAllergy = NO;
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:5 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }else{
           
                   if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];

                                  if ([string isEqualToString:@"有"]) {
                                      isMedicine = YES;
                                      [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                      [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                  }else{
                                      isMedicine = NO;
                                      if (weakSelf.dataArray.count == 6) {
                                          [weakSelf.dataArray  removeObjectAtIndex:3];
                                          [weakSelf.contentArr removeObjectAtIndex:3];
                                      }
                                  }
                                  
                                  
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                      else if (indexPath.row == 3){
                          
                      }
                      else if (indexPath.row == 4){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                             }else{
                                                 isAllergy = NO;
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:4 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }
    }
    
   
       
}


-(void)footviewReload{
    
     dispatch_async(dispatch_get_main_queue(), ^{
     if (isAllergy) {
        UIView *lineview2 = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 100) bgColor:[UIColor whiteColor]];
         
         UIView *lineview = [UIView createViewWithFrame:CGRectMake(15, 0, SCREEN_WIDTH-15,0.5 ) bgColor:RGB(224, 224, 224)];
         [lineview2 addSubview:lineview];
         
         
        UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"请填写是否过敏等情况情况" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
                            if (SCREEN_WIDTH == 320) {
                                label.font = SYSTEMFONT(13.0);
                            }else{}
                            [label sizeToFit];
                            [lineview2 addSubview:label];
                            
                            CGFloat  mustX = CGRectGetMaxX(label.frame);
                            UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
                            mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
                            mustStartImagview.centerY = label.centerY;
                            [lineview2 addSubview:mustStartImagview];
        
        self.descrViewaAllergy.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
        [lineview2 addSubview:self.descrViewaAllergy];
         self.tableView.tableFooterView = lineview2;
      }else{
          self.tableView.tableFooterView =  [UIView new];
     }
   });
 
    
}




#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
   
    NSInteger count = textTagCollectionView.allSelectedTags.count;
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
       [self.tagMarry addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<self.tagMarry.count; i++) {
            if ([[self.tagMarry objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [self.tagMarry removeObjectAtIndex:i];
            }
        }
    }
    

        self.textTagCollectionView1.selectionLimit = 0;
        if (index == 0) {
            for (int i = 0; i<self.tagMarry.count; i++) {
                NSInteger indexs = [self.tagMarry[i] integerValue];
                [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
            }
            [self.tagMarry removeAllObjects];
            [self.tagMarry addObject:tagsindexstr];
            [_textTagCollectionView1 setTagAtIndex:0 selected:YES];
//          self.textTagCollectionView1.selectionLimit = 1;
        }else{
            if ([self.tagMarry containsObject:@"0"]) {
                for (int i = 0; i<self.tagMarry.count; i++) {
                    NSInteger indexs = [self.tagMarry[i] integerValue];
                    [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
                }
                [self.tagMarry removeAllObjects];
                [self.tagMarry addObject:tagsindexstr];
                [_textTagCollectionView1 setTagAtIndex:index selected:YES];
            }else{
                
                
            }
            
        }
    
//    self.other_diseaseStr = [textTagCollectionView.allSelectedTags componentsJoinedByString:@","];
//
//    MCLog(@"idnex===%@",self.tagMarry);
//    MCLog(@" self.other_diseaseStr===%@",self.other_diseaseStr);

    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);

  
}

#pragma mark textview
// 监听文本改变
-(void)textViewEditChangedSuggest:(NSNotification *)obj{
    UITextView *textView = (UITextView *)obj.object;
    NSString *toBeString = textView.text;
    NSArray *current = [UITextInputMode activeInputModes];
    UITextInputMode *current11 = [current firstObject];
    NSString *lang = [current11 primaryLanguage];
    if ([lang isEqualToString:@"zh-Hans"]) {
        UITextRange *selectedRange = [textView markedTextRange];
        UITextPosition *position = [textView positionFromPosition:selectedRange.start offset:0];
        if (!position) {

            if (toBeString.length >500) {
                textView.text = [toBeString substringToIndex:500];
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
            }
        }
        else{
     
        }
        
    }
    // 中文输入法以外的直接对其统计限制即可，不考虑其他语种情况
    else{
        if (toBeString.length >500) {
            textView.text = [toBeString substringToIndex:500];
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        }
        
    }
    
}



- (void)textViewDidBeginEditing:(UITextView *)textView{
    if (textView  == self.descrViewaMed) {
        [UIView animateWithDuration:0.2 animations:^{
              self.view.frame = CGRectMake(0,-120 , SCREEN_WIDTH, SCREEN_HEIGHT);
          } ];
    }else
    {
        [UIView animateWithDuration:0.2 animations:^{
                  self.view.frame = CGRectMake(0,-210 , SCREEN_WIDTH, SCREEN_HEIGHT);
              } ];
    }
  
    
}


- (void)textViewDidEndEditing:(UITextView *)textView{
    [UIView animateWithDuration:0.2 animations:^{
        self.view.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    } ];
    [_descrViewaMed resignFirstResponder];
    [_descrViewaAllergy resignFirstResponder];

    
}



//控制输入文字的长度和内容，可通调用以下代理方法实现
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    if ([text isEqualToString:@"\n"]) {
        //禁止输入换行
        [textView resignFirstResponder];
        return NO;
    }
    else
    {
        return YES;
    }
}

-(void)dealloc
{
    
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaAllergy];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaMed];
    
}

#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",Public_URLPic];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf needInfoRequest];
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf needInfoRequest];
    }];
    
}

-(void)needInfoRequest{

    NSString *Strurl = [NSString
                        stringWithFormat:@"%@addInterrogationStep1Info",Public_URLAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
 
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"data=addInterrogationStep1info=%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        
        if ([code isEqualToString:@"200"]) {
            [self.diseaseListMarry addObjectsFromArray:dic[@"diseaseList"]];

        }
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}
@end


============end=================














  UIButton *contactsBtn;//底部按钮


 
   CGFloat imageHeight = 55*BiliWidth;
    UIView *headviewS = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 20+imageHeight) bgColor:[UIColor whiteColor]];//gzz180516
    UIImageView *imagview = [UIImageView creatImageviewWithFrame:CGRectMake(0, 5, SCREEN_WIDTH, imageHeight) imaged:[UIImage imageNamed:@"newInfoHint"]];
//    imagview.backgroundColor = [UIColor redColor];
    [headviewS addSubview:imagview];
    
    UIView *linview = [UIView createViewWithFrame:CGRectMake(0, CGRectGetMaxY(imagview.frame)+5, SCREEN_WIDTH, 10) bgColor:RGB(238, 238, 238)];
    [headviewS addSubview:linview];




/懒加载
- (PublicAdvisoryViewController *)publicVC{
    if (!_publicVC) {

        
        _publicVC = [[PublicAdvisoryViewController alloc] init];
        [self addChildViewController:_publicVC];
        _publicVC.view.frame = CGRectMake(0, 0, SCREEN_WIDTH,SCREEN_HEIGHT-SafeAreaBottomHeight-40);

        [self.scrollView addSubview:_publicVC.view];
        
    }
    return _publicVC;
    
}


//懒加载
- (ConsultOneToMoreVC *)consultOneTomoreVC{
    if (!_consultOneTomoreVC) {
        _consultOneTomoreVC = [[ConsultOneToMoreVC alloc] init];
        [self addChildViewController:_consultOneTomoreVC];
        _consultOneTomoreVC.view.frame = CGRectMake(SCREEN_WIDTH, 0, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-40);
        [self.scrollView addSubview:_consultOneTomoreVC.view];
        
    }
    return _consultOneTomoreVC;
    
}



#pragma mark - 添加子视图滚动视图
- (void)addScrollView {
    self.scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, kTopHeight, self.view.bounds.size.width, self.view.bounds.size.height-40-SafeAreaBottomHeight-kTopHeight)];
    self.scrollView.pagingEnabled = NO;
    self.scrollView.scrollEnabled = NO;
    [self.view addSubview:self.scrollView];
 
    


    [self publicVC];
 
    self.scrollView.contentSize = CGSizeMake(self.view.bounds.size.width * 2, self.view.bounds.size.height-40-kTopHeight-SafeAreaBottomHeight);
    
}
SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-40

SCREEN_HEIGHT-55*BiliWidth-20-40-50-kTopHeight-40


#pragma mark oneOldOne按钮点击
-(void)oneOldOne{
    rightBtn.layer.borderWidth = 0.5;
    rightBtn.layer.borderColor = RGB(204, 204, 204).CGColor;
    
    leftBtn.layer.borderWidth = 0.5;
    leftBtn.layer.borderColor = [UIColor clearColor].CGColor;
    
    leftBtn.backgroundColor = JISECOLOR;
    rightBtn.backgroundColor = WHITECOLORS;
    [leftBtn setTitleColor:WHITECOLORS forState:0];
    [rightBtn setTitleColor:ZHONGBLACKCOLOR forState:0];

    selectWhioceStr = @"1";
    orderBtn.hidden = YES;
    self.scrollView.contentOffset = CGPointMake(0, 0);
}

#pragma mark rightclick
-(void)rightBtnclick{
    leftBtn.layer.borderWidth = 0.5;
    leftBtn.layer.borderColor = RGB(204, 204, 204).CGColor;

    rightBtn.layer.borderWidth = 0.5;
    rightBtn.layer.borderColor = [UIColor clearColor].CGColor;

    leftBtn.backgroundColor = WHITECOLORS;
    rightBtn.backgroundColor = JISECOLOR;
    [rightBtn setTitleColor:WHITECOLORS forState:0];
    [leftBtn setTitleColor:ZHONGBLACKCOLOR forState:0];
    [self consultOneTomoreVC];
    selectWhioceStr = @"2";
    self.scrollView.contentOffset = CGPointMake(SCREEN_WIDTH, 0);
    orderBtn.hidden = NO;
    [self removeNewPush];
}



[weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
[weakSelf.dataArray insertObject:@"插入一个" atIndex:3];


 [weakSelf.dataArray  removeObjectAtIndex:3];
 [weakSelf.contentArr removeObjectAtIndex:3];



/*记录+ - 是不是选的丙肝*/
@property (nonatomic, strong) NSMutableArray *arrSectionOneMm;

- (NSMutableArray *)arrSectionOneMm{
    if (!_arrSectionOneMm) {
        _arrSectionOneMm = [NSMutableArray array];
    }
    return _arrSectionOneMm;
}



     NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
      [self.dataArray addObjectsFromArray:arr0];
      
      NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
      [self.contentMarry addObjectsFromArray:arrcontent];
    
    NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
    dicm[@"describe"] = self.dataArray;
    dicm[@"content"] =  self.contentMarry;
    dicm[@"count"]   = @"2";

 [self.arrSectionOneMm  addObject:dicm];



//        static NSString *identifier = @"cell";
//        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
//        if (!cell) {
//            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
//            cell.selectionStyle = UITableViewCellSelectionStyleNone;
//        }
//        cell.textLabel.text = @"hello";
//        return cell;





 static NSString *identifier = @"cccdd";
     UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
     if (!cell) {
         cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
         cell.selectionStyle = UITableViewCellSelectionStyleNone;
     }
     cell.textLabel.text = @"hello";
    
    UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-44, 0, 40, 44)];
    btn.backgroundColor = [UIColor redColor];
    [cell.contentView addSubview:btn];
    btn.tag = indexPath.row;
    indexRow = indexPath.section;
    [btn addTarget:self action:@selector(addBtn:) forControlEvents:UIControlEventTouchUpInside];
     return cell;











//
//  DiseasesInfoNewvcVC.m
//  Patient
//
//  Created by gao zhen on 2020/1/15.
//  Copyright © 2020 ShangYu. All rights reserved.
//

#import "DiseasesInfoNewvcVC.h"
#import "NewPersonDatacell.h"
#import "DiseaseShowCell.h"

#import "TTGTagCollectionView.h"
#import "TTGTextTagCollectionView.h"

#import "GccPickerManager.h"

#import "FSTextView.h"
@interface DiseasesInfoNewvcVC ()<UITableViewDelegate,UITableViewDataSource,TTGTextTagCollectionViewDelegate,UITextViewDelegate>{
     NSString *sysTimestr;
    BOOL isMedicine;//是否服药 默认no
    BOOL isAllergy;//是否过敏 默认no
    NSInteger diseaseNum;//有几组 + - 组多三组
    
    BOOL isBingOne;//第一组是不是含有丙肝
    BOOL isBingTwo;//第2组是不是含有丙肝
    BOOL isBingThree;//第3组是不是含有丙肝
    
    NSInteger indexRow;
    
    
}


/*<#code#>*/
@property (nonatomic, strong) UITableView *addAndsubTablview;//加减的tableview
@property (nonatomic, strong)NSMutableArray *addAndsubArray;
@property (nonatomic, strong) NSMutableArray *addAndsubContentArr;


@property (nonatomic, strong) NSMutableArray *diseaseListMarry;
//年龄
@property (nonatomic, strong) NSMutableArray *agesDataArr;

//丙肝类型
@property (nonatomic, strong) NSMutableArray *bingDiseaseArr;



@property (nonatomic, strong)UITableView *tableView;

@property (nonatomic, strong)NSMutableArray *dataArray;
@property (nonatomic, strong) NSMutableArray *contentArr;

@property (nonatomic, strong)TTGTextTagCollectionView *textTagCollectionView1;
@property (nonatomic, strong)NSMutableArray *tagMarry;


@property (nonatomic, strong)FSTextView *descrViewaMed;//服药之后的出现文本框
@property (nonatomic, strong)FSTextView *descrViewaAllergy;//过敏时之后的出现文本框

/*记录+ - 是不是选的丙肝*/
@property (nonatomic, strong) NSMutableArray *arrSectionOneMm;
@end
@implementation DiseasesInfoNewvcVC

- (NSMutableArray *)arrSectionOneMm{
    if (!_arrSectionOneMm) {
        _arrSectionOneMm = [NSMutableArray array];
    }
    return _arrSectionOneMm;
}


-(FSTextView *)descrViewaMed{
    if (!_descrViewaMed) {
        _descrViewaMed = [FSTextView textView];
        _descrViewaMed.delegate = self;
        _descrViewaMed.backgroundColor = RGB(238, 238, 238);
        _descrViewaMed.placeholder = @"服用恩替卡韦5个月;服用xxx1年; \n无耐药(最少需要描述5个字)";
        _descrViewaMed.placeholderColor = [UIColor grayColor];
        _descrViewaMed.placeholderFont = SYSTEMFONT(13);
        _descrViewaMed.font = SYSTEMFONT(13);
        _descrViewaMed.cornerRadius = 4;
    }
    return _descrViewaMed;
}

-(FSTextView *)descrViewaAllergy{
    if (!_descrViewaAllergy) {
        _descrViewaAllergy = [FSTextView textView];
        _descrViewaAllergy.delegate = self;
        _descrViewaAllergy.backgroundColor = RGB(238, 238, 238);
        _descrViewaAllergy.placeholder = @"填写过敏情况(最少需要描述2个字)";
        _descrViewaAllergy.placeholderColor = [UIColor grayColor];
        _descrViewaAllergy.placeholderFont = SYSTEMFONT(13);
        _descrViewaAllergy.font = SYSTEMFONT(13);
        _descrViewaAllergy.cornerRadius = 4;
    }
    return _descrViewaAllergy;
}

//懒加载
- (TTGTextTagCollectionView *)textTagCollectionView1{
    if (!_textTagCollectionView1) {
          _textTagCollectionView1 = [[TTGTextTagCollectionView alloc]  initWithFrame:CGRectMake(15,14,SCREEN_WIDTH-20, 150)];
                 _textTagCollectionView1.isDisOrderstr = @"yes";
                 _textTagCollectionView1.delegate = self;
                 _textTagCollectionView1.showsVerticalScrollIndicator = NO;
                 TTGTextTagConfig *config = _textTagCollectionView1.defaultConfig;
                 config.tagTextFont = [UIFont boldSystemFontOfSize:12.0f];
                 //文本的颜色
                 config.tagTextColor = QIANBLACKCOLOR;
                 //选中的样色
                 config.tagSelectedTextColor = JISECOLOR;
                 config.tagBackgroundColor = [UIColor clearColor];
                 config.tagSelectedBackgroundColor = [UIColor clearColor];
                 _textTagCollectionView1.selectionLimit = 0;
                 _textTagCollectionView1.horizontalSpacing = 12.0;
                 _textTagCollectionView1.verticalSpacing = 12.0;
                 config.tagBorderColor = QIANBLACKCOLOR;
                 config.tagSelectedBorderColor = JISECOLOR;
                 config.tagBorderWidth = 1;
                 config.tagSelectedBorderWidth = 1;
                 config.tagShadowColor = [UIColor whiteColor];
                 config.tagShadowOffset = CGSizeMake(0, 0);
                 config.tagShadowOpacity = 0.0f;
                 config.tagShadowRadius = 0.0f;
                 config.tagCornerRadius = 10.0;
                 config.tagSelectedCornerRadius = 10.0;
                 config.tagExtraSpace = CGSizeMake(20,6);
                 
                 [_textTagCollectionView1 addTags:@[@"无其他慢性病", @"高血压",@"糖尿病", @"冠心病", @"HIV感染",@"结核", @"高血脂",@"胃炎或者肠炎", @"慢性肾功能不全或者肾脏疾病"]];
                 _textTagCollectionView1.alignment = 0;
                 NSInteger nums = _textTagCollectionView1.tagCollectionView.cMaxTagsCount;
             MCLog(@"有几行==vc=中==%zd",_textTagCollectionView1.tagCollectionView.cMaxTagsCount);
                 _textTagCollectionView1.height = nums*(20+12);
    }
    return _textTagCollectionView1;
}
- (NSMutableArray *)tagMarry{
    if (!_tagMarry) {
        _tagMarry = [NSMutableArray array];
    }
    return _tagMarry;
}
//addAndsubTablview
- (UITableView *)addAndsubTablview{
    if (!_addAndsubTablview) {
        CGRect tableRect = CGRectMake(0,0, SCREEN_WIDTH, 44*9);
        _addAndsubTablview = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStyleGrouped];
        _addAndsubTablview.delegate = self;
        _addAndsubTablview.dataSource = self;
        _addAndsubTablview.showsVerticalScrollIndicator = NO;
        _addAndsubTablview.sectionHeaderHeight = 0.0001f;
        _addAndsubTablview.sectionFooterHeight = 0.0001f;
//        _addAndsubTablview.tableFooterView = [UIView new];
        _addAndsubTablview.backgroundColor = [UIColor purpleColor];
    }
    return _addAndsubTablview;
}
//懒加载TableView
- (UITableView *)tableView{
    if (!_tableView) {
        CGRect tableRect = CGRectMake(0, kTopHeight+20, SCREEN_WIDTH, SCREEN_HEIGHT-SafeAreaBottomHeight-kTopHeight-40);
        _tableView = [[UITableView alloc]initWithFrame:tableRect style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.tableFooterView = [UIView new];
        [self.view addSubview:_tableView];
    }
    return _tableView;
}
//懒加载
- (NSMutableArray *)contentArr{
    if (!_contentArr) {
        _contentArr = [NSMutableArray array];
    }
    return _contentArr;
}


-(NSMutableArray *)dataArray{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}



- (NSMutableArray *)addAndsubArray{
    if (!_addAndsubArray) {
        _addAndsubArray = [NSMutableArray array];
    }
    return _addAndsubArray;
}


-(NSMutableArray *)addAndsubContentArr{
    if (!_addAndsubContentArr) {
        _addAndsubContentArr = [NSMutableArray array];
    }
    return _addAndsubContentArr;
}

- (NSMutableArray *)bingDiseaseArr{
    if (!_bingDiseaseArr) {
        _bingDiseaseArr = [NSMutableArray array];
    }
    return _bingDiseaseArr;
}


- (NSMutableArray *)agesDataArr{
    if (!_agesDataArr) {
        _agesDataArr = [NSMutableArray array];
    }
    return _agesDataArr;
}

-(NSMutableArray *)diseaseListMarry{
    if (!_diseaseListMarry) {
        _diseaseListMarry = [NSMutableArray array];
    }
    return _diseaseListMarry;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"疾病信息";
    [self dataInit];
    self.tableView.backgroundColor = [UIColor yellowColor];
    
//    UIView *headview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 200) bgColor:[UIColor whiteColor]];
//
    self.tableView.tableHeaderView = self.addAndsubTablview;
    
    UIView *footview = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 50) bgColor:[UIColor redColor]];
    self.tableView.tableFooterView = footview;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaMed];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textViewEditChangedSuggest:) name:UITextViewTextDidChangeNotification object:self.descrViewaAllergy];
   
    [self getSystemTimeFromServer];
}
#pragma mark dataInit
-(void)dataInit{
    NSArray *arr = [[NSArray alloc]initWithObjects:@"是否医院就诊",@"目前肝脏状态",@"当前是否服药",@"",@"是否有过敏史",nil];
    [self.dataArray addObjectsFromArray:arr];
      
     NSArray *arrscontent = [[NSArray alloc]initWithObjects:@"选择医院就诊",@"请选择肝脏状态",@"选择是否服药",@"",@"选择有无过敏史",nil];
     [self.contentArr addObjectsFromArray:arrscontent];
    
    
    isMedicine = NO;
    isAllergy = NO;
    isBingOne = NO;
    isBingTwo = NO;
    isBingThree = NO;
    
    NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
     [self.addAndsubArray addObjectsFromArray:arr0];
     
     NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
     [self.addAndsubContentArr addObjectsFromArray:arrcontent];
    
    NSArray *arr11 = @[@"未知",@"0年",
                        @"1年",@"2年",@"3年", @"4年",@"5年",@"6年",@"7年",@"8年",@"9年",@"10年",
                        @"11年",@"12年",@"13年", @"14年",@"15年",@"16年",@"17年",@"18年",@"19年",@"20年",
                        @"21年",@"22年",@"23年", @"24年",@"25年",@"26年",@"27年",@"28年",@"29年",@"30年",
                        @"31年",@"32年",@"33年", @"34年",@"35年",@"36年",@"37年",@"38年",@"39年",@"40年",
                        @"41年",@"42年",@"43年", @"44年",@"45年",@"46年",@"47年",@"48年",@"49年",@"50年",
                        @"51年",@"52年",@"53年", @"54年",@"55年",@"56年",@"57年",@"58年",@"59年",@"60年",
                        @"61年",@"62年",@"63年", @"64年",@"65年",@"66年",@"67年",@"68年",@"69年",@"70年",
                        @"71年",@"72年",@"73年", @"74年",@"75年",@"76年",@"77年",@"78年",@"79年",@"80年",
                        @"81年",@"82年",@"83年", @"84年",@"85年",@"86年",@"87年",@"88年",@"89年",@"90年",
                        @"91年",@"92年",@"93年", @"94年",@"95年",@"96年",@"97年",@"98年",@"99年",@"100年",
                        @"101年",@"102年",@"103年", @"104年",@"105年",@"106年",@"107年",@"108年",@"109年",@"110年",
                        @"111年",@"112年",@"113年", @"114年",@"115年",@"116年",@"117年",@"118年",@"119年",@"120年",
                        ];
        [self.agesDataArr  addObjectsFromArray:arr11];
    
    NSArray *arr1 = @[@"1b型",@"2a型",
                      @"2型",@"3型",@"6型", @"2&3型",@"4型",@"5型"];
    [self.bingDiseaseArr  addObjectsFromArray:arr1];
    
    
    diseaseNum = 1;
    
    
    

        NSArray *arr000 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
         
         NSArray *arrcontent000 = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
       
       NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
       dicm[@"describe"] = arr000;
       dicm[@"content"] =  arrcontent000;
       dicm[@"count"]   = @"2";

    [self.arrSectionOneMm  addObject:dicm];
    
    
    
    
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
        return 44.0;
    }else{
        
        if (isMedicine) {
            if(indexPath.row == 3){
                return 100;
            }
            if(indexPath.row == 4){
                return self.textTagCollectionView1.height+30+16;
            }
        }else{
            if(indexPath.row == 3){
                return self.textTagCollectionView1.height+30+16;
            }
        }
        
        
        return 44.0;
    }
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    if (tableView == self.addAndsubTablview) {
        return diseaseNum;
    }else{
       return 1;
    }
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
   if (self.addAndsubTablview == tableView) {
//           return self.addAndsubArray.count;
       return 1;
//            NSDictionary *dic = [self.arrSectionOneMm objectAtIndex:section];
//             NSString *numstr = [dic objectForKey:@"count"];
//             NSInteger num = [numstr integerValue];
//                return num;
     }else{
          return self.dataArray.count;
     }

}


#pragma mark addBtn
//-(void)addBtn:(NSInteger)indexRow{
-(void)addBtn:(UIButton *)btn{
    MCLog(@"btn---btn");
    if (indexRow == 0) {
        if ( diseaseNum == 3) {
            return;
        }
        diseaseNum ++;
        NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
        NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
        
        NSMutableDictionary *dicm = [NSMutableDictionary dictionary];
        dicm[@"describe"] = arr0;
        dicm[@"content"] =  arrcontent;
        dicm[@"count"]   = @"2";
        
        [self.arrSectionOneMm addObject:dicm];
        [self.addAndsubTablview reloadData];
         self.tableView.tableHeaderView = self.addAndsubTablview;
        
        MCLog(@"diseaseNum ====%zd",diseaseNum);
    }else if (indexRow == 1){
         diseaseNum --;
          [self.arrSectionOneMm removeObjectAtIndex:1];
          [self.addAndsubTablview reloadData];
         self.tableView.tableHeaderView = self.addAndsubTablview;
        MCLog(@"diseaseNum ====%zd",diseaseNum);

    }else if ( indexRow == 2){
         diseaseNum --;
        [self.arrSectionOneMm removeObjectAtIndex:2];
        [self.addAndsubTablview reloadData];
         self.tableView.tableHeaderView = self.addAndsubTablview;
        MCLog(@"diseaseNum ====%zd",diseaseNum);

    }
    
//    MCLog(@"addbtn ===== %zd",row);
//   if ( diseaseNum == 3) {
//        return;
//    }
//    diseaseNum++;
//
//    NSArray *arr0 = [[NSArray alloc]initWithObjects:@"所患疾病",@"患病时长",nil];
//    [self.addAndsubArray addObjectsFromArray:arr0];
//    NSArray *arrcontent = [[NSArray alloc]initWithObjects:@"请选择疾病类型",@"请选择患病时长",nil];
//    [self.addAndsubContentArr addObjectsFromArray:arrcontent];
//    self.addAndsubTablview.height = 44*4;
//    [self.addAndsubTablview reloadData];
//    self.tableView.tableHeaderView = self.addAndsubTablview;
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.addAndsubTablview == tableView) {
//            DiseaseShowCell *cell = [DiseaseShowCell cellWithTableView:tableView];
//                cell.indepaths = indexPath;
//                cell.selectionStyle = UITableViewCellSelectionStyleNone;
//             NSDictionary *dic = [self.arrSectionOneMm objectAtIndex:indexPath.section];
//             cell.dicmM = dic;
//             WEAKSELFS
//             cell.againBlock = ^(NSInteger rowIntNum) {
//                    [weakSelf addBtn:rowIntNum];
//                };
//                return  cell;
        
        static NSString *identifier = @"cccdd";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
            if (!cell) {
                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
//                cell.selectionStyle = UITableViewCellSelectionStyleNone;
            }
            cell.textLabel.text = @"hello";
           
           UIButton *btn = [[UIButton alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-44, 0, 40, 44)];
           btn.backgroundColor = [UIColor redColor];
           [cell.contentView addSubview:btn];
//           btn.tag = indexPath.row;
//           indexRow = indexPath.section;
           [btn addTarget:self action:@selector(addBtn:) forControlEvents:UIControlEventTouchUpInside];
            return cell;
//        return cell;
       }else{
            if (isMedicine) {
                   if(indexPath.row == 3){
                        static NSString *identifier = @"celltextview";
                        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                        if (!cell) {
                            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                            cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        }
                        for (UIView *view in cell.contentView.subviews) {
                            [view removeFromSuperview];
                        }
                   
                       UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"请填写当前服用的肝病用药、服用时长及耐药情况" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
                          if (SCREEN_WIDTH == 320) {
                              label.font = SYSTEMFONT(13.0);
                          }else{}
                          [label sizeToFit];
                          [ cell.contentView addSubview:label];
                          
                          CGFloat  mustX = CGRectGetMaxX(label.frame);
                          UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
                          mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
                          mustStartImagview.centerY = label.centerY;
                          [ cell.contentView addSubview:mustStartImagview];
                          
                          self.descrViewaMed.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
                          [ cell.contentView addSubview:self.descrViewaMed];
                       
                        return cell;
                       
                   }else if (indexPath.row == 4) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                         
                         return cell;
                     }else{
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         return  cell;
                     }
               }else{
                   if (indexPath.row == 3) {
                         static NSString *identifier = @"celltextTag";
                         UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
                         if (!cell) {
                             cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
                             cell.selectionStyle = UITableViewCellSelectionStyleNone;
                         }
                         for (UIView *view in cell.contentView.subviews) {
                             [view removeFromSuperview];
                         }
                         UILabel *showLabel = [UILabel createLabelWithFrame:CGRectMake(15,10, SCREEN_WIDTH-30, 16) text:@"是否合并其他慢性疾病？（多选）" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:16.0]];
                          [cell.contentView addSubview:showLabel];
                         [showLabel sizeToFit];
                                     
                         UIImageView *mustStartImagview = [UIImageView creatImageviewWithFrame:CGRectMake(CGRectGetMaxX(showLabel.frame)+2, 1, 6, 6) imaged:[UIImage imageNamed:@"newInfoStar"]];
                         mustStartImagview.centerY = showLabel.centerY;
                         [cell.contentView addSubview:mustStartImagview];
                         
                          self.textTagCollectionView1.frame = CGRectMake(self.textTagCollectionView1.x,CGRectGetMaxY(showLabel.frame)+10, self.textTagCollectionView1.width,self.textTagCollectionView1.height),
                         [cell.contentView addSubview:self.textTagCollectionView1];
                         
                         return cell;
                     }else{
                         
                         NewPersonDatacell *cell = [NewPersonDatacell cellWithTableView:tableView];
                         cell.indepaths = indexPath;
                         cell.selectionStyle = UITableViewCellSelectionStyleNone;;
                         cell.nameLabel.text = [self.dataArray objectAtIndex:indexPath.row];
                         cell.contentLab.text = [self.contentArr objectAtIndex:indexPath.row];
                         return  cell;
                     }
               }
       }
    
   
  


}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
//   [tableView deselectRowAtIndexPath:indexPath animated:true];
    
    if (self.addAndsubTablview == tableView) {
        
      MCLog(@"row===addAndsubTablview=%ld",(long)indexPath.row);
       WEAKSELFS
        if (diseaseNum == 1) {
                      if (indexPath.row == 0){
                              NSMutableArray *arr = [NSMutableArray array];
                                    for (int i=0; i<self.diseaseListMarry.count; i++) {
                                        [arr addObject:[self.diseaseListMarry[i] objectForKey:@"name"]];
                                    }
                                    [[GccPickerManager shareManger] TagshowPickerViewWithDataArrayt:arr title:@"咨询的疾病" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string, NSInteger tag) {
                                          NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:0];
                                        if ([string isEqualToString:@"丙型肝炎"]) {
                                            dicM[@"count"]   = @"3";
                                            NSMutableArray *describeMarr= [dicM objectForKey:@"describe"];
                                            NSMutableArray *contentMarr = [dicM objectForKey:@"content"];
                                            [contentMarr replaceObjectAtIndex:0 withObject:string];
                                            [describeMarr addObject:@"丙肝基因型"];
                                            [contentMarr addObject:@"请选择丙肝基因型"];
                                            dicM[@"describe"] = describeMarr;
                                            dicM[@"content"] = contentMarr;
                                            
                                            [weakSelf.arrSectionOneMm replaceObjectAtIndex:0 withObject:dicM];
                                            [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationNone];
                                            
                                         
                                          
                                        }else{
                                            NSString *countstr = [NSString stringWithFormat:@"%@",dicM[@"count"]];
                                            if ([countstr isEqualToString:@"3"]) {
                                                dicM[@"count"]   = @"2";
                                              NSMutableArray *describeMarr= [dicM objectForKey:@"describe"];
                                              NSMutableArray *contentMarr = [dicM objectForKey:@"content"];
                                               [describeMarr removeLastObject];
                                               [contentMarr removeLastObject];
                                             dicM[@"describe"] = describeMarr;
                                             dicM[@"content"] = contentMarr;
                                            }
                                         
                                            
                                          NSMutableArray *long_tiemMarr = [dicM objectForKey:@"content"];
                                          [long_tiemMarr replaceObjectAtIndex:0 withObject:string];
                                          
                                          [weakSelf.arrSectionOneMm replaceObjectAtIndex:0 withObject:dicM];
                                          [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationNone];
                                        }
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                            [weakSelf.addAndsubTablview reloadData];
                                                weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                                                            });
                                  
                                    } cancelBlock:^{
                                        MCLog(@"cancle");
                                    }];
                            }
                      else  if (indexPath.row == 1) {
                        [[GccPickerManager shareManger] showPickerViewWithDataArray:self.agesDataArr title:@"选择患病时长" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                            NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:0];
                           NSMutableArray *long_tiemMarr = [dicM objectForKey:@"content"];
                            [long_tiemMarr replaceObjectAtIndex:1 withObject:string];
                            
                            [weakSelf.arrSectionOneMm replaceObjectAtIndex:0 withObject:dicM];
                            [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationNone];
                            
                            dispatch_async(dispatch_get_main_queue(), ^{
                                [weakSelf.addAndsubTablview reloadData];
                               weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                           });
                             } cancelBlock:^{
                                 MCLog(@"cancle");
                         }];
                      }else{
                            [[GccPickerManager shareManger] showPickerViewWithDataArray:self.bingDiseaseArr title:@"选择丙肝基因型" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:0];
                                   NSMutableArray *long_tiemMarr = [dicM objectForKey:@"content"];
                                    [long_tiemMarr replaceObjectAtIndex:2 withObject:string];
                                    
                                    [weakSelf.arrSectionOneMm replaceObjectAtIndex:0 withObject:dicM];
                                    [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationNone];
                                    
                                    dispatch_async(dispatch_get_main_queue(), ^{
                                        [weakSelf.addAndsubTablview reloadData];
                                       weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                   });
                                
                                
                            } cancelBlock:^{
                                             MCLog(@"cancle");
                        }];
                      }
                      
                      
                  }
                  else if(diseaseNum == 2){
                      if (indexPath.row == 0){
                                        NSMutableArray *arr = [NSMutableArray array];
                                              for (int i=0; i<self.diseaseListMarry.count; i++) {
                                                  [arr addObject:[self.diseaseListMarry[i] objectForKey:@"name"]];
                                              }
                                              [[GccPickerManager shareManger] TagshowPickerViewWithDataArrayt:arr title:@"咨询的疾病" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string, NSInteger tag) {
                                                    NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:1];
                                                  if ([string isEqualToString:@"丙型肝炎"]) {
                                                      dicM[@"count"]   = @"3";
                                                      NSMutableArray *describeMarr= [NSMutableArray arrayWithArray:[dicM objectForKey:@"describe"]];
                                                      NSMutableArray *contentMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                      
                                                      [contentMarr replaceObjectAtIndex:0 withObject:string];
                                                      [describeMarr addObject:@"丙肝基因型"];
                                                      [contentMarr addObject:@"请选择丙肝基因型"];
                                                      dicM[@"describe"] = describeMarr;
                                                      dicM[@"content"] = contentMarr;
                                                      
                                                      [weakSelf.arrSectionOneMm replaceObjectAtIndex:1 withObject:dicM];
                                                      [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:1] withRowAnimation:UITableViewRowAnimationNone];
                                             
                                                  }else{
                                                      NSString *countstr = [NSString stringWithFormat:@"%@",dicM[@"count"]];
                                                      if ([countstr isEqualToString:@"3"]) {
                                                          dicM[@"count"]   = @"2";
                                                        NSMutableArray *describeMarr= [dicM objectForKey:@"describe"];
                                                        NSMutableArray *contentMarr = [dicM objectForKey:@"content"];
                                                         [describeMarr removeLastObject];
                                                         [contentMarr removeLastObject];
                                                       dicM[@"describe"] = describeMarr;
                                                       dicM[@"content"] = contentMarr;
                                                      }
                                                   
                                                      
                                                  NSMutableArray *long_tiemMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                    [long_tiemMarr replaceObjectAtIndex:0 withObject:string];
                                                  dicM[@"content"] = long_tiemMarr;
                                                      
                                                    [weakSelf.arrSectionOneMm replaceObjectAtIndex:1 withObject:dicM];
                                                    [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:1] withRowAnimation:UITableViewRowAnimationNone];
                                                  }
                                                  dispatch_async(dispatch_get_main_queue(), ^{
                                        [weakSelf.addAndsubTablview reloadData];
                                                      weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                                                                      });
                                            
                                              } cancelBlock:^{
                                                  MCLog(@"cancle");
                                              }];
                                      }
                                else  if (indexPath.row == 1) {
                                  [[GccPickerManager shareManger] showPickerViewWithDataArray:self.agesDataArr title:@"选择患病时长" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                      NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:1];
                                     NSMutableArray *long_tiemMarr = [dicM objectForKey:@"content"];
                                      [long_tiemMarr replaceObjectAtIndex:1 withObject:string];
                                      dicM[@"content"] = long_tiemMarr;
                                      
                                      [weakSelf.arrSectionOneMm replaceObjectAtIndex:1 withObject:dicM];
                                      [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:1] withRowAnimation:UITableViewRowAnimationNone];
                                      
                                      dispatch_async(dispatch_get_main_queue(), ^{
                                          [weakSelf.addAndsubTablview reloadData];
                                         weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                     });
                                       } cancelBlock:^{
                                           MCLog(@"cancle");
                                   }];
                                }else{
                                      [[GccPickerManager shareManger] showPickerViewWithDataArray:self.bingDiseaseArr title:@"选择丙肝基因型" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                            NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:1];
                                             NSMutableArray *long_tiemMarr = [dicM objectForKey:@"content"];
                                              [long_tiemMarr replaceObjectAtIndex:2 withObject:string];
                                             
                                             dicM[@"content"] = long_tiemMarr;

                                              [weakSelf.arrSectionOneMm replaceObjectAtIndex:1 withObject:dicM];
                                              [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:1] withRowAnimation:UITableViewRowAnimationNone];
                                              
                                              dispatch_async(dispatch_get_main_queue(), ^{
                                                  [weakSelf.addAndsubTablview reloadData];
                                                 weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                             });
                                          
                                          
                                      } cancelBlock:^{
                                                       MCLog(@"cancle");
                                  }];
                                }
                      
                  }
                  else{
                      if (indexPath.row == 0){
                                            NSMutableArray *arr = [NSMutableArray array];
                                                  for (int i=0; i<self.diseaseListMarry.count; i++) {
                                                      [arr addObject:[self.diseaseListMarry[i] objectForKey:@"name"]];
                                                  }
                                                  [[GccPickerManager shareManger] TagshowPickerViewWithDataArrayt:arr title:@"咨询的疾病" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string, NSInteger tag) {
                                                        NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:2];
                                                      if ([string isEqualToString:@"丙型肝炎"]) {
                                                          dicM[@"count"]   = @"3";
                                                          NSMutableArray *describeMarr= [NSMutableArray arrayWithArray:[dicM objectForKey:@"describe"]];
                                                          NSMutableArray *contentMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                          [contentMarr replaceObjectAtIndex:0 withObject:string];
                                                          [describeMarr addObject:@"丙肝基因型"];
                                                          [contentMarr addObject:@"请选择丙肝基因型"];
                                                          dicM[@"describe"] = describeMarr;
                                                          dicM[@"content"] = contentMarr;
                                                          
                                                          [weakSelf.arrSectionOneMm replaceObjectAtIndex:2 withObject:dicM];
                                                          [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:2] withRowAnimation:UITableViewRowAnimationNone];
                                                          
                                                       
                                                        
                                                      }else{
                                                          NSString *countstr = [NSString stringWithFormat:@"%@",dicM[@"count"]];
                                                          if ([countstr isEqualToString:@"3"]) {
                                                              dicM[@"count"]   = @"2";
                                                            NSMutableArray *describeMarr= [NSMutableArray arrayWithArray:[dicM objectForKey:@"describe"]];
                                                              NSMutableArray *contentMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                             [describeMarr removeLastObject];
                                                             [contentMarr removeLastObject];
                                                           dicM[@"describe"] = describeMarr;
                                                           dicM[@"content"] = contentMarr;
                                                          }
                                                       
                                                          
                                                        NSMutableArray *long_tiemMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                        [long_tiemMarr replaceObjectAtIndex:0 withObject:string];
                                                        dicM[@"content"] = long_tiemMarr;

                                                        [weakSelf.arrSectionOneMm replaceObjectAtIndex:2 withObject:dicM];
                                                        [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:2] withRowAnimation:UITableViewRowAnimationNone];
                                                      }
                                                      dispatch_async(dispatch_get_main_queue(), ^{
                                                                  [weakSelf.addAndsubTablview reloadData];                              weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                                                                          });
                                                
                                                  } cancelBlock:^{
                                                      MCLog(@"cancle");
                                                  }];
                                          }
                                  else  if (indexPath.row == 1) {
                                  [[GccPickerManager shareManger] showPickerViewWithDataArray:self.agesDataArr title:@"选择患病时长" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                      NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:2];
                                      NSMutableArray *long_tiemMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                      [long_tiemMarr replaceObjectAtIndex:1 withObject:string];
                                      dicM[@"content"] = long_tiemMarr;

                                      [weakSelf.arrSectionOneMm replaceObjectAtIndex:2 withObject:dicM];
                                      [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:2] withRowAnimation:UITableViewRowAnimationNone];
                                      
                                      dispatch_async(dispatch_get_main_queue(), ^{
                                            [weakSelf.addAndsubTablview reloadData];
                                          weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                      });
                                          } cancelBlock:^{
                                              MCLog(@"cancle");
                                      }];
                                  }else{
                                          [[GccPickerManager shareManger] showPickerViewWithDataArray:self.bingDiseaseArr title:@"选择丙肝基因型" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                                NSMutableDictionary *dicM = [weakSelf.arrSectionOneMm objectAtIndex:2];
                                                 NSMutableArray *long_tiemMarr = [NSMutableArray arrayWithArray:[dicM objectForKey:@"content"]];
                                                  [long_tiemMarr replaceObjectAtIndex:2 withObject:string];
                                                  dicM[@"content"] = long_tiemMarr;

                                                  [weakSelf.arrSectionOneMm replaceObjectAtIndex:2 withObject:dicM];
                                                  [weakSelf.addAndsubTablview reloadSections:[NSIndexSet indexSetWithIndex:2] withRowAnimation:UITableViewRowAnimationNone];
                                                  
                                                  dispatch_async(dispatch_get_main_queue(), ^{
                                                        [weakSelf.addAndsubTablview reloadData];
                                                     weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
                                                 });
                                              
                                              
                                          } cancelBlock:^{
                                                           MCLog(@"cancle");
                                      }];
                                    }
                  }
        
//        if (diseaseNum == 1) {
//            if (indexPath.row == 0){
//                    NSMutableArray *arr = [NSMutableArray array];
//                          for (int i=0; i<self.diseaseListMarry.count; i++) {
//                              [arr addObject:[self.diseaseListMarry[i] objectForKey:@"name"]];
//                          }
//                          [[GccPickerManager shareManger] TagshowPickerViewWithDataArrayt:arr title:@"咨询的疾病" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string, NSInteger tag) {
//                              [weakSelf.addAndsubContentArr replaceObjectAtIndex:0 withObject:string];
//                              if (isBingThree) {
//
//                              }else{
//                                  isBingThree = YES;
//                              }
//
//                  dispatch_async(dispatch_get_main_queue(), ^{
//                    [weakSelf.addAndsubTablview reloadData];
//                    weakSelf.tableView.tableHeaderView = weakSelf.addAndsubTablview;
//                }); } cancelBlock:^{}];
//            }
//
//
//        }
        
    }
    else{
        WEAKSELFS
           if (indexPath.row == 0){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择医院就诊" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //           self.liver_statusStr = string;
                                 [weakSelf.contentArr  replaceObjectAtIndex:0 withObject:string];
                                 [weakSelf.tableView reloadData];
                             } cancelBlock:^{
                                 MCLog(@"cancle");
                             }];
                         }
           if (indexPath.row == 1){
                             [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"无明显肝纤维化", @"肝纤维化", @"肝硬化",@"肝硬化及并发症",@"肝癌",@"未知"] title:@"选择目前肝脏状态" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                     //               self.liver_statusStr = string;
                                     [weakSelf.contentArr  replaceObjectAtIndex:1 withObject:string];
                                     [weakSelf.tableView reloadData];
                                  } cancelBlock:^{
                                      MCLog(@"cancle");
                                  }];
                             
                         }
           if (isMedicine) {
              
                if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  if ([string isEqualToString:@"有"]) {
                                   isMedicine = YES;
                                      if (weakSelf.dataArray.count == 6){}else{
                                    [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                    [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                      }
                                  
                               }else{
                                   isMedicine = NO;
                                   if (weakSelf.dataArray.count == 6) {
                                       [weakSelf.dataArray  removeObjectAtIndex:3];
                                       [weakSelf.contentArr removeObjectAtIndex:3];
                                   }
                               }
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                else if (indexPath.row == 4){
                          
               }
               else if (indexPath.row == 5){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                             }else{
                                                 isAllergy = NO;
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:5 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }else{
           
                   if (indexPath.row == 2){
                              [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有"] title:@"选择是否服药" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                  [weakSelf.contentArr  replaceObjectAtIndex:2 withObject:string];

                                  if ([string isEqualToString:@"有"]) {
                                      isMedicine = YES;
                                      [weakSelf.contentArr insertObject:@"选择——插入一个" atIndex:3];
                                      [weakSelf.dataArray insertObject:@"插入一个" atIndex:3];
                                  }else{
                                      isMedicine = NO;
                                      if (weakSelf.dataArray.count == 6) {
                                          [weakSelf.dataArray  removeObjectAtIndex:3];
                                          [weakSelf.contentArr removeObjectAtIndex:3];
                                      }
                                  }
                                  
                                  
                                  
                                  [weakSelf.tableView reloadData];
                                   } cancelBlock:^{
                                       MCLog(@"cancle");
                                   }];
                              
                      }
                      else if (indexPath.row == 3){
                          
                      }
                      else if (indexPath.row == 4){
                          [[GccPickerManager shareManger] showPickerViewWithDataArray:@[@"有",@"没有",@"未知"] title:@"选择是否有过敏史" cancelTitle:@"取消" commitTitle:@"确定" commitBlock:^(NSString * _Nonnull string) {
                                 //                 self.liver_statusStr = string;
                                           if ([string isEqualToString:@"有"]) {
                                                 isAllergy = YES;
                                             }else{
                                                 isAllergy = NO;
                                             }
                                          [weakSelf footviewReload];
                                          [weakSelf.contentArr  replaceObjectAtIndex:4 withObject:string];
                                        [weakSelf.tableView reloadData];
                                      } cancelBlock:^{
                                                  MCLog(@"cancle");
                       }];
                          
                      }
           }
    }
    
   
       
}


-(void)footviewReload{
    
     dispatch_async(dispatch_get_main_queue(), ^{
     if (isAllergy) {
        UIView *lineview2 = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 100) bgColor:[UIColor whiteColor]];
         
         UIView *lineview = [UIView createViewWithFrame:CGRectMake(15, 0, SCREEN_WIDTH-15,0.5 ) bgColor:RGB(224, 224, 224)];
         [lineview2 addSubview:lineview];
         
         
        UILabel *label = [UILabel createLabelWithFrame:CGRectMake(10, 10, SCREEN_WIDTH-10, 14) text:@"请填写是否过敏等情况情况" titleColor:[UIColor blackColor] textAlignment:NSTextAlignmentLeft font:[UIFont systemFontOfSize:14.0]];
                            if (SCREEN_WIDTH == 320) {
                                label.font = SYSTEMFONT(13.0);
                            }else{}
                            [label sizeToFit];
                            [lineview2 addSubview:label];
                            
                            CGFloat  mustX = CGRectGetMaxX(label.frame);
                            UIImageView * mustStartImagview = [[UIImageView alloc]initWithFrame:CGRectMake(mustX+2, 1, 6, 6)];
                            mustStartImagview.image = [UIImage imageNamed:@"newInfoStar"];
                            mustStartImagview.centerY = label.centerY;
                            [lineview2 addSubview:mustStartImagview];
        
        self.descrViewaAllergy.frame = CGRectMake(10, CGRectGetMaxY(label.frame)+10, SCREEN_WIDTH-20, 55);
        [lineview2 addSubview:self.descrViewaAllergy];
         self.tableView.tableFooterView = lineview2;
      }else{
          self.tableView.tableFooterView =  [UIView new];
     }
   });
 
    
}




#pragma mark - TTGTextTagCollectionViewDelegate

- (void)textTagCollectionView:(TTGTextTagCollectionView *)textTagCollectionView didTapTag:(NSString *)tagText atIndex:(NSUInteger)index selected:(BOOL)selected {
   
    NSInteger count = textTagCollectionView.allSelectedTags.count;
    NSString *tagsindexstr = [NSString stringWithFormat:@"%zd",index];
    
    if (selected == 1) {
       [self.tagMarry addObject:tagsindexstr];
    }else {
        for (int i =0 ; i<self.tagMarry.count; i++) {
            if ([[self.tagMarry objectAtIndex:i] isEqualToString:tagsindexstr]) {
                [self.tagMarry removeObjectAtIndex:i];
            }
        }
    }
    

        self.textTagCollectionView1.selectionLimit = 0;
        if (index == 0) {
            for (int i = 0; i<self.tagMarry.count; i++) {
                NSInteger indexs = [self.tagMarry[i] integerValue];
                [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
            }
            [self.tagMarry removeAllObjects];
            [self.tagMarry addObject:tagsindexstr];
            [_textTagCollectionView1 setTagAtIndex:0 selected:YES];
//          self.textTagCollectionView1.selectionLimit = 1;
        }else{
            if ([self.tagMarry containsObject:@"0"]) {
                for (int i = 0; i<self.tagMarry.count; i++) {
                    NSInteger indexs = [self.tagMarry[i] integerValue];
                    [_textTagCollectionView1 setTagAtIndex:indexs selected:NO];
                }
                [self.tagMarry removeAllObjects];
                [self.tagMarry addObject:tagsindexstr];
                [_textTagCollectionView1 setTagAtIndex:index selected:YES];
            }else{
                
                
            }
            
        }
    
//    self.other_diseaseStr = [textTagCollectionView.allSelectedTags componentsJoinedByString:@","];
//
//    MCLog(@"idnex===%@",self.tagMarry);
//    MCLog(@" self.other_diseaseStr===%@",self.other_diseaseStr);

    NSLog(@"%@----所选中的tag-",textTagCollectionView.allSelectedTags);

  
}

#pragma mark textview
// 监听文本改变
-(void)textViewEditChangedSuggest:(NSNotification *)obj{
    UITextView *textView = (UITextView *)obj.object;
    NSString *toBeString = textView.text;
    NSArray *current = [UITextInputMode activeInputModes];
    UITextInputMode *current11 = [current firstObject];
    NSString *lang = [current11 primaryLanguage];
    if ([lang isEqualToString:@"zh-Hans"]) {
        UITextRange *selectedRange = [textView markedTextRange];
        UITextPosition *position = [textView positionFromPosition:selectedRange.start offset:0];
        if (!position) {

            if (toBeString.length >500) {
                textView.text = [toBeString substringToIndex:500];
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
            }
        }
        else{
     
        }
        
    }
    // 中文输入法以外的直接对其统计限制即可，不考虑其他语种情况
    else{
        if (toBeString.length >500) {
            textView.text = [toBeString substringToIndex:500];
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"输入内容最多500字" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        }
        
    }
    
}



- (void)textViewDidBeginEditing:(UITextView *)textView{
    if (textView  == self.descrViewaMed) {
        [UIView animateWithDuration:0.2 animations:^{
              self.view.frame = CGRectMake(0,-120 , SCREEN_WIDTH, SCREEN_HEIGHT);
          } ];
    }else
    {
        [UIView animateWithDuration:0.2 animations:^{
                  self.view.frame = CGRectMake(0,-210 , SCREEN_WIDTH, SCREEN_HEIGHT);
              } ];
    }
  
    
}


- (void)textViewDidEndEditing:(UITextView *)textView{
    [UIView animateWithDuration:0.2 animations:^{
        self.view.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    } ];
    [_descrViewaMed resignFirstResponder];
    [_descrViewaAllergy resignFirstResponder];

    
}



//控制输入文字的长度和内容，可通调用以下代理方法实现
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    if ([text isEqualToString:@"\n"]) {
        //禁止输入换行
        [textView resignFirstResponder];
        return NO;
    }
    else
    {
        return YES;
    }
}

-(void)dealloc
{
    
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaAllergy];
    [[NSNotificationCenter defaultCenter]removeObserver:self
                                                   name:UITextViewTextDidChangeNotification
                                                 object:self.descrViewaMed];
    
}

#pragma mark 获取后台的系统时间
-(void)getSystemTimeFromServer{
    
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSString *url = [NSString stringWithFormat:@"%@manager/getSystemTimeStamp",Public_URLPic];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];//gzz0617af
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/plain",@"text/json",@"application/json", nil];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    WEAKSELFS
    [manager POST: url  parameters:nil progress:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        NSDictionary *dic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:nil];
        
        sysTimestr = [NSString stringWithFormat:@"%@",[dic objectForKey:@"timestamp"]];
        [weakSelf needInfoRequest];
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        sysTimestr = @"";
        [weakSelf needInfoRequest];
    }];
    
}

-(void)needInfoRequest{

    NSString *Strurl = [NSString
                        stringWithFormat:@"%@addInterrogationStep1Info",Public_URLAPI];
    NSMutableDictionary * dicM = [NSMutableDictionary dictionary];
    dicM[@"client_type"] = [NSString stringWithFormat:@"%@",@"I"];//1
    dicM[@"user_uuid"] = [NSString stringWithFormat:@"%@",[Dlpontlerexple shareIndence].uuidstring];//2
    NSString *timestamp; //gzz181225
    if ([DicRemove isBlankString:sysTimestr]) {
        timestamp = [NSString stringWithFormat:@"%@",[DicRemove getNowTimeTimestamp]];
    }else{
        timestamp = sysTimestr;
    }
    dicM[@"timestamp"] = [NSString stringWithFormat:@"%@",timestamp];
    dicM[@"version"] = [NSString stringWithFormat:@"%@",kVersion];
 
    NSArray *arr = @[@"client_type",@"version",@"timestamp",@"user_uuid"];
    
    [GDNetworkManager postWithURLString:Strurl parameters:nil keys:arr parameterDic:dicM success:^(NSDictionary *dic) {
        MCLog(@"data=addInterrogationStep1info=%@",dic);
        NSString *code = [NSString stringWithFormat:@"%@",dic[@"code"]];
        
        if ([code isEqualToString:@"200"]) {
//            self.sdditional_infoStr = [NSString stringWithFormat:@"%@",dic[@"additional_info"]];
//            if ([self.sdditional_infoStr  isEqualToString:@"0"]) {
//
//            [nextBtn setImage:[UIImage imageNamed:@"goperfect"] forState:0];
//            [nextBtn setTitle:@"个人信息不完整，去完善" forState:0];
//
//            nextBtn.contentHorizontalAlignment = UIControlContentHorizontalAlignmentCenter;
//            [nextBtn layoutButtonWithEdgeInsetsStyle:UIButtonEdgeInsetsStyleRight imageTitleSpace:5 offset:1];
//            }else{
//                [nextBtn setTitle:@"下一步" forState:0];
//            }
            [self.diseaseListMarry addObjectsFromArray:dic[@"diseaseList"]];
//            [self.familyListMarry addObjectsFromArray:dic[@"familyList"]];

        }
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    } failure:^(NSError *error) {
        MCLog(@"error%@",error);
        [self.tableView reloadData];
        [MBProgressHUD hideHUDForView:self.view animated:YES];
    }];
}


- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 0.01;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView *view = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 0.01) bgColor:[UIColor redColor]];
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.01;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
     UIView *view = [UIView createViewWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 0.01) bgColor:[UIColor redColor]];
    return view;
}

@end
